name: Dart Package
on:
  workflow_call:
    inputs:
      coverage-excludes:
        required: false
        type: string
        default: ""
      sdk:
        required: false
        type: string
        default: stable
      working-directory:
        required: false
        type: string
        default: .
      min_coverage:
        required: false
        type: number
        default: 20
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      report_on:
        required: false
        type: string
        default: "lib"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - name: Bootstrap
        run: |
          dart pub global activate -spath packages/aft
          aft link

      - name: Get Packages
        run: dart pub upgrade
        working-directory: ${{ inputs.working-directory }}
      
      - name: Check Formatting
        run: dart format --set-exit-if-changed .
        working-directory: ${{ inputs.working-directory }}

      - name: Analyze
        run: dart analyze --fatal-infos --fatal-warnings ${{inputs.analyze_directories}}
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests
        run: |
          dart pub global activate coverage
          dart test -j 4 --coverage=coverage && dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=${{inputs.report_on}}
        working-directory: ${{ inputs.working-directory }}
      
      - name: Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v1
        with:
          path: ${{ inputs.working-directory }}/coverage/lcov.info
          exclude: ${{ inputs.coverage-excludes }}
          min_coverage: ${{ inputs.min_coverage }}

  native_test:
    name: Native Test
    needs: test
    if: ${{ github.event_name == 'pull_request' }}
    strategy:
      matrix:
        os:
          # TODO: macos-latest currently points to macos-11
          - macos-12
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - run: echo ${{ toJSON(inputs) }}

      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ inputs.sdk }}

      - name: Bootstrap
        run: |
          dart pub global activate -spath packages/aft
          aft link

      - name: Get Packages
        run: dart pub upgrade
        working-directory: ${{ inputs.working-directory }}
      
      - name: Check Formatting
        run: dart format --set-exit-if-changed .
        working-directory: ${{ inputs.working-directory }}

      - name: Analyze
        run: dart analyze --fatal-infos --fatal-warnings ${{inputs.analyze_directories}}
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests
        run: |
          dart pub global activate coverage
          dart test -j 4
        working-directory: ${{ inputs.working-directory }}
