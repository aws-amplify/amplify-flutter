name: Dart Package
on:
  workflow_call:
    inputs:
      test-web:
        description: Whether the package requires testing on web platforms
        required: true
        type: boolean
      working-directory:
        description: The working directory relative to the repo root
        required: true
        type: string

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        sdk:
          # Minimum supported Dart version
          - 2.17.0
          - stable
          - dev
    steps:
      - name: Cache Pub dependencies
        uses: actions/cache@b195c997a41f41d0dab6d9aafe79e437611b78db
        with:
          path: |
            ~/.pub-cache/hosted
            ~/.pub-cache/git
          key: os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
          restore-keys: |
            os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
            os:ubuntu-latest;sdk:${{ matrix.sdk }}
            os:ubuntu-latest

      - name: Git Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Setup Dart
        uses: dart-lang/setup-dart@196f54580e9eee2797c57e85e289339f85e6779d
        with:
          sdk: ${{ matrix.sdk }}

      - name: Setup aft
        run: dart pub global activate -spath packages/aft

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 10
        run: aft bootstrap

      - name: Check Formatting
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: dart format --set-exit-if-changed .
        working-directory: ${{ inputs.working-directory }}

      - name: Check for Tests
        id: testCheck
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        run: |
          if [ -d test ]; then
            echo "hasTests=true" >> $GITHUB_OUTPUT
            echo "analysisDirs=lib test" >> $GITHUB_OUTPUT
          else
            echo "hasTests=false" >> $GITHUB_OUTPUT
            echo "analysisDirs=lib" >> $GITHUB_OUTPUT
          fi

      - name: Analyze
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: dart analyze --fatal-infos --fatal-warnings ${{ steps.testCheck.outputs.analysisDirs }}
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests (VM)
        if: "always() && steps.bootstrap.conclusion == 'success' && steps.testCheck.outputs.hasTests == 'true'"
        run: aft test unit
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests (dart2js)
        if: "always() && steps.bootstrap.conclusion == 'success' && steps.testCheck.outputs.hasTests == 'true'"
        run: aft test unit -- -p chrome
        working-directory: ${{ inputs.working-directory }}

  # Tests code for all Dart->JS compilers
  web_test:
    name: Web Test
    needs: test
    if: ${{ inputs.test-web }}
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        sdk:
          # Minimum supported Dart version
          - 2.17.0
          - stable
          - dev
    steps:
      - name: Cache Pub dependencies
        uses: actions/cache@b195c997a41f41d0dab6d9aafe79e437611b78db
        with:
          path: |
            ~/.pub-cache/hosted
            ~/.pub-cache/git
          key: os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
          restore-keys: |
            os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
            os:ubuntu-latest;sdk:${{ matrix.sdk }}
            os:ubuntu-latest

      - name: Git Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Setup Dart
        uses: dart-lang/setup-dart@196f54580e9eee2797c57e85e289339f85e6779d
        with:
          sdk: ${{ matrix.sdk }}

      - name: Setup aft
        run: dart pub global activate -spath packages/aft

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 10
        run: aft bootstrap

      - name: Run Tests (ddc)
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: dart run build_runner test --delete-conflicting-outputs -- -p chrome,firefox
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests (dart2js)
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: dart run build_runner test --release --delete-conflicting-outputs -- -p chrome,firefox
        working-directory: ${{ inputs.working-directory }}

  # Native Test runs code on non-Linux platforms
  native_test:
    name: Native Test
    needs: test
    if: ${{ github.event_name == 'pull_request' }} # TODO: Change to 'push'
    timeout-minutes: 60
    strategy:
      matrix:
        os:
          # macos-latest currently points to macos-11
          # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idruns-on
          - macos-12
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cache Pub dependencies
        uses: actions/cache@b195c997a41f41d0dab6d9aafe79e437611b78db
        with:
          path: |
            ~/.pub-cache/hosted
            ~/.pub-cache/git
          key: os:${{ matrix.os }};sdk:stable;packages:${{ inputs.working-directory }}
          restore-keys: |
            os:${{ matrix.os }};sdk:stable;packages:${{ inputs.working-directory }}
            os:${{ matrix.os }};sdk:stable
            os:${{ matrix.os }}

      # Needed on Windows
      - name: Enable Long Git Paths
        run: git config --system core.longpaths true

      - name: Git Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Setup Dart
        uses: dart-lang/setup-dart@196f54580e9eee2797c57e85e289339f85e6779d
        with:
          sdk: stable

      - name: Setup aft
        run: dart pub global activate -spath packages/aft

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 15 # macOS needs extra time
        run: aft bootstrap

      - name: Check for Tests
        id: testCheck
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        run: |
          if [ -d test ]; then
            echo "hasTests=true" >> $GITHUB_OUTPUT
          else
            echo "hasTests=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Tests (VM)
        if: "always() && steps.bootstrap.conclusion == 'success' && steps.testCheck.outputs.hasTests == 'true'"
        run: aft test unit
        working-directory: ${{ inputs.working-directory }}
