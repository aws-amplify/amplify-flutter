name: Flutter (VM)
on:
  workflow_call:
    inputs:
      working-directory:
        description: The working directory relative to the repo root
        required: true
        type: string

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        sdk:
          - stable
          - master
    steps:
      - name: Git Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # 3.1.0

      - name: Setup Flutter
        uses: subosito/flutter-action@dbf1fa04f4d2e52c33185153d06cdb5443aa189d # 2.8.0
        with:
          cache: true
          channel: ${{ matrix.sdk }}

      - name: Setup aft
        run: flutter pub global activate -spath packages/aft

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 10
        run: aft bootstrap

      - name: Check Formatting
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: flutter format --set-exit-if-changed .
        working-directory: ${{ inputs.working-directory }}

      - name: Check for Tests
        id: testCheck
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -d test ]; then
            echo "hasTests=true" >> $GITHUB_OUTPUT
            echo "analysisDirs=lib test" >> $GITHUB_OUTPUT
          else
            echo "hasTests=false" >> $GITHUB_OUTPUT
            echo "analysisDirs=lib" >> $GITHUB_OUTPUT
          fi

      - name: Setup Package
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -e tool/setup.sh ]; then
            ./tool/setup.sh
          fi

      - name: Analyze
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: flutter analyze --fatal-infos --fatal-warnings ${{ steps.testCheck.outputs.analysisDirs }}
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests
        if: "always() && steps.bootstrap.conclusion == 'success' && steps.testCheck.outputs.hasTests == 'true'"
        run: flutter test
        working-directory: ${{ inputs.working-directory }}
