name: Flutter (VM)
on:
  workflow_call:
    inputs:
      package-name:
        description: The name of the package being tested
        required: true
        type: string
      working-directory:
        description: The working directory relative to the repo root
        required: true
        type: string
      has-goldens:
        description: The package contains golden tests, save build artifacts on failure
        required: false
        type: boolean

jobs:
  test-flutter-vm:
    # TODO(equartey): Change to `macos-latest` after github migrates their runners - https://github.blog/changelog/2024-01-30-github-actions-macos-14-sonoma-is-now-available/
    runs-on: ${{ inputs.has-goldens && 'macos-14' || 'ubuntu-latest' }}
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        channel:
          - "beta"
          - "stable"
        flutter-version:
          - "any" # latest
        include:
          - channel: "stable"
            flutter-version: "3.32.0"
        # Skips 'beta' tests on PRs
        exclude:
          - channel: ${{ (github.event_name == 'pull_request') && 'beta' || 'NONE' }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # 4.0.0

      - name: Git Submodules
        run: git submodule update --init

      - name: Setup Flutter
        uses: subosito/flutter-action@fd55f4c5af5b953cc57a2be44cb082c8f6635e8e # 2.21.0
        with:
          cache: true
          channel: ${{ matrix.channel }}
          flutter-version: ${{ matrix.flutter-version }}

      - name: Setup aft
        run: flutter pub global activate -spath packages/aft

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 20
        run: aft bootstrap --fail-fast --include=${{ inputs.package-name }} --verbose

      - name: Check Formatting
        if: "always() && steps.bootstrap.conclusion == 'success' && matrix.channel == 'stable' && matrix.flutter-version == 'any'"
        run: dart format --set-exit-if-changed .
        working-directory: ${{ inputs.working-directory }}

      - name: Check for Tests
        id: testCheck
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -d test ]; then
            echo "hasTests=true" >> $GITHUB_OUTPUT
          else
            echo "hasTests=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Package
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -e tool/setup.sh ]; then
            ./tool/setup.sh
          fi

      - name: Analyze
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: flutter analyze --fatal-infos --fatal-warnings .
        working-directory: ${{ inputs.working-directory }}

      - name: Run Tests
        id: testJob
        if: "always() && steps.bootstrap.conclusion == 'success' && steps.testCheck.outputs.hasTests == 'true'"
        run: flutter test
        working-directory: ${{ inputs.working-directory }}

      - name: Archive golden failures
        if: "always() && inputs.has-goldens && steps.testJob.conclusion == 'failure'"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # 4.6.2
        with:
          name: golden-failures-${{ matrix.channel }}-${{ matrix.flutter-version }}
          path: ${{ inputs.working-directory }}/test/ui/failures/

      - name: Log success/failure
        if: always()
        uses: ./.github/composite_actions/log_cw_metric_wrapper
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

          job-status: ${{ job.status }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

          test-type: unit
          working-directory: ${{ inputs.working-directory }}

          framework: flutter
          flutter-dart-channel: ${{ matrix.channel }}
          flutter-version: ${{ matrix.flutter-version }}
