name: API Report Check

on:
  pull_request:
    branches:
      - main
    paths:
      - 'packages/**/*.dart'
      - 'packages/**/pubspec.yaml'
      - '!packages/**/example/**'
      - '!packages/**/test/**'

jobs:
  check-api-reports:
    name: Check API Reports
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: 'stable'
          flutter-version: '3.29.0'

      - name: Setup aft
        run: flutter pub global activate -spath packages/aft

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 20
        run: aft bootstrap --fail-fast --include=aft --verbose

      - name: Install dart_apitool
        run: flutter pub global activate dart_apitool

      - name: Generate API reports
        run: aft generate api-report

      - name: Check for changes in API reports
        id: check-changes
        run: |
          # Debug: Print git status
          echo "=== DEBUG: Git status ==="
          git status --porcelain
          
          # Check API JSON files for changes
          API_JSON_CHANGES=$(git status --porcelain | grep 'api\.json' || true)
          
          # Special handling for api_changes_report.md - check content instead of diff
          REPORT_FILE="packages/amplify_core/api_changes_report.md"
          REPORT_CHANGED=$(git status --porcelain | grep "$REPORT_FILE" || true)
          
          if [[ -n "$REPORT_CHANGED" ]]; then
            if grep -q "No changes detected" "$REPORT_FILE"; then
              echo "API changes report shows no changes detected - ignoring timestamp differences."
            else
              echo "API changes report shows actual changes. Please review the report."
              cat "$REPORT_FILE"
              API_JSON_CHANGES="$API_JSON_CHANGES $REPORT_FILE"
            fi
          fi
          
          if [[ -n "$API_JSON_CHANGES" ]]; then
            echo "API report files are not up-to-date. Please run 'aft generate api-report' and commit the changes."
            git diff --name-only | grep 'api\.json'
            # Print the full diff for changed API JSON files
            for file in $(git diff --name-only | grep 'api\.json'); do
              echo "=== FULL Diff for: $file ==="
              git diff "$file"
              echo "=== End of FULL diff for: $file ==="
            done
            exit 1
          else
            echo "API report files are up-to-date."
          fi

      - name: Check if API reports are included in PR
        run: |
          # Get the list of changed files in the PR
          CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
          
          # Check if any Dart files were modified
          DART_FILES=$(echo "$CHANGED_FILES" | grep -E '\.dart$' || true)
          if [[ -z "$DART_FILES" ]]; then
            echo "No Dart files were modified, skipping API report check."
            exit 0
          fi
          
          # Check if API report files are included
          API_REPORTS=$(echo "$CHANGED_FILES" | grep -E 'api\.json|api_changes_report\.md' || true)
          if [[ -z "$API_REPORTS" ]]; then
            echo "Error: API report files are not included in this PR."
            echo "Please run 'aft generate api-report' and commit the changes."
            exit 1
          fi
          
          echo "API report files are included in the PR."
