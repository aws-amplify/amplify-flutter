# Native Test runs code on non-Linux platforms
name: Dart (Native)
on:
  workflow_call:
    inputs:
      working-directory:
        description: The working directory relative to the repo root
        required: true
        type: string
      skip-on-windows:
        description: Whether the current package cannot be tested on Windows
        required: true
        type: boolean

jobs:
  native_test:
    name: Native Test
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cache Pub dependencies
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # 3.0.11
        with:
          path: |
            ~/.pub-cache/hosted
            ~/.pub-cache/git
          key: os:${{ matrix.os }};sdk:stable;packages:${{ inputs.working-directory }}
          restore-keys: |
            os:${{ matrix.os }};sdk:stable;packages:${{ inputs.working-directory }}
            os:${{ matrix.os }};sdk:stable
            os:${{ matrix.os }}

      # Needed on Windows
      - name: Enable Long Git Paths
        run: git config --system core.longpaths true

      - name: Git Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # 3.1.0

      - name: Git Submodules
        run: git submodule update --init

      - name: Setup Dart
        uses: dart-lang/setup-dart@196f54580e9eee2797c57e85e289339f85e6779d # main
        with:
          sdk: stable

      - name: Setup aft
        shell: bash # Run in bash regardless of platform
        run: |
          # Patch libgit2dart (see https://github.com/dart-lang/pub/issues/3563)
          ( cd packages/aft/external/libgit2dart; git apply ../libgit2dart.patch )
          dart pub global activate -spath packages/aft
          ( cd packages/aft/external/libgit2dart; git reset --hard HEAD )

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 20 # macOS needs extra time
        run: aft bootstrap

      - name: Setup Package
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -e tool/setup.sh ]; then
            ./tool/setup.sh
          fi

      - name: Run Tests
        if: "always() && steps.bootstrap.conclusion == 'success' && (runner.os != 'Windows' || !inputs.skip-on-windows)"
        run: dart test --exclude-tags=build
        working-directory: ${{ inputs.working-directory }}
