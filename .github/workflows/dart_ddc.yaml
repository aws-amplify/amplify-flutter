name: Dart (DDC)
on:
  workflow_call:
    inputs:
      test-ddc-stable:
        description: Whether the package should be tested on DDC (stable)
        required: true
        type: boolean
      working-directory:
        description: The working directory relative to the repo root
        required: true
        type: string

jobs:
  test:
    name: Test
    # TODO(dnys1): Update to latest when Firefox is available
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        sdk:
          # Minimum supported Dart version
          # TODO(dnys1): Remove when repo bump to 2.19 happens
          # - 2.19.0
          - stable
          - dev
        browser:
          - chrome
          - firefox
    steps:
      - name: Cache Pub dependencies
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 # 3.0.11
        with:
          path: |
            ~/.pub-cache/hosted
            ~/.pub-cache/git
          key: os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
          restore-keys: |
            os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
            os:ubuntu-latest;sdk:${{ matrix.sdk }}
            os:ubuntu-latest

      - name: Git Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # 3.1.0

      - name: Git Submodules
        run: git submodule update --init

      - name: Setup Dart
        uses: dart-lang/setup-dart@196f54580e9eee2797c57e85e289339f85e6779d # main
        with:
          sdk: ${{ matrix.sdk }}

      - name: Setup aft
        run: dart pub global activate -spath packages/aft

      - name: Setup Firefox
        if: ${{ matrix.browser == 'firefox' }}
        uses: ./.github/composite_actions/setup_firefox

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 10
        run: aft bootstrap

      - name: Setup Package
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -e tool/setup.sh ]; then
            ./tool/setup.sh
          fi

      - name: Run Tests
        if: "always() && steps.bootstrap.conclusion == 'success' && (matrix.sdk == 'dev' || inputs.test-ddc-stable)"
        run: dart run build_runner test --delete-conflicting-outputs -- -p ${{ matrix.browser }} --exclude-tags=no-ddc
        working-directory: ${{ inputs.working-directory }}
