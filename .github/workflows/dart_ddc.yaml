name: Dart (DDC)
on:
  workflow_call:
    inputs:
      package-name:
        description: The name of the package being tested
        required: true
        type: string
      working-directory:
        description: The working directory relative to the repo root
        required: true
        type: string

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      # Allows other matrix items to run if one fails
      fail-fast: false
      matrix:
        sdk:
          # Minimum supported Dart version
          - "3.0.1"
          - stable
          - beta
        browser:
          - chrome
          - firefox
    steps:
      - name: Cache Pub dependencies
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # 3.3.1
        with:
          path: |
            ~/.pub-cache/hosted
            ~/.pub-cache/git
          key: os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
          restore-keys: |
            os:ubuntu-latest;sdk:${{ matrix.sdk }};packages:${{ inputs.working-directory }}
            os:ubuntu-latest;sdk:${{ matrix.sdk }}
            os:ubuntu-latest

      - name: Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # 3.5.3

      - name: Git Submodules
        run: git submodule update --init

      - name: Setup Dart
        uses: dart-lang/setup-dart@cdb51fff2b088939ef86fe041b18e82cb4733522 # main
        with:
          sdk: ${{ matrix.sdk }}

      - name: Setup aft
        shell: bash # Run in bash regardless of platform
        run: |
          # Patch libgit2dart (see https://github.com/dart-lang/pub/issues/3563)
          ( cd packages/aft/external/libgit2dart; git apply ../libgit2dart.patch )
          dart pub global activate -spath packages/aft
          ( cd packages/aft/external/libgit2dart; git reset --hard HEAD )

      - name: Setup Firefox
        if: ${{ matrix.browser == 'firefox' }}
        uses: ./.github/composite_actions/setup_firefox
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bootstrap
        id: bootstrap
        timeout-minutes: 20
        run: aft bootstrap --fail-fast --include=${{ inputs.package-name }} --verbose

      - name: Setup Package
        if: "always() && steps.bootstrap.conclusion == 'success'"
        shell: bash # Run in bash regardless of platform
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -e tool/setup.sh ]; then
            ./tool/setup.sh
          fi

      - name: Run Tests
        if: "always() && steps.bootstrap.conclusion == 'success'"
        run: dart run build_runner test --delete-conflicting-outputs -- -p ${{ matrix.browser }}
        working-directory: ${{ inputs.working-directory }}
