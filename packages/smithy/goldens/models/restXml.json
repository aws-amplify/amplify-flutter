{
    "smithy": "1.0",
    "metadata": {
        "suppressions": [
            {
                "id": "DeprecatedTrait",
                "namespace": "*",
                "reason": "Some of the AWS protocols make use of deprecated traits, and some are\nthemselves deprecated traits. As this package is intended to test those\nprotocols, the warnings should be suppressed."
            },
            {
                "id": "UnreferencedShape",
                "namespace": "aws.protocoltests.config",
                "reason": "These shapes are intended to be used to validate vendorParams in\nprotocol tests, so they naturally will not be connected to a service.\n"
            },
            {
                "id": "HttpMethodSemantics",
                "namespace": "com.amazonaws.s3"
            },
            {
                "id": "EnumTrait",
                "namespace": "com.amazonaws.s3"
            }
        ]
    },
    "shapes": {
        "com.amazonaws.s3#AccountId": {
            "type": "string"
        },
        "aws.protocoltests.restxml#AllQueryStringTypes": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#AllQueryStringTypesInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "This example uses all query string types.",
                "smithy.api#http": {
                    "uri": "/AllQueryStringTypesInput",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AllQueryStringTypes",
                        "documentation": "Serializes query string parameters with all supported types",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/AllQueryStringTypesInput",
                        "body": "",
                        "queryParams": [
                            "String=Hello%20there",
                            "StringList=a",
                            "StringList=b",
                            "StringList=c",
                            "StringSet=a",
                            "StringSet=b",
                            "StringSet=c",
                            "Byte=1",
                            "Short=2",
                            "Integer=3",
                            "IntegerList=1",
                            "IntegerList=2",
                            "IntegerList=3",
                            "IntegerSet=1",
                            "IntegerSet=2",
                            "IntegerSet=3",
                            "Long=4",
                            "Float=1.1",
                            "Double=1.1",
                            "DoubleList=1.1",
                            "DoubleList=2.1",
                            "DoubleList=3.1",
                            "Boolean=true",
                            "BooleanList=true",
                            "BooleanList=false",
                            "BooleanList=true",
                            "Timestamp=1970-01-01T00%3A00%3A01Z",
                            "TimestampList=1970-01-01T00%3A00%3A01Z",
                            "TimestampList=1970-01-01T00%3A00%3A02Z",
                            "TimestampList=1970-01-01T00%3A00%3A03Z",
                            "Enum=Foo",
                            "EnumList=Foo",
                            "EnumList=Baz",
                            "EnumList=Bar"
                        ],
                        "params": {
                            "queryString": "Hello there",
                            "queryStringList": [
                                "a",
                                "b",
                                "c"
                            ],
                            "queryStringSet": [
                                "a",
                                "b",
                                "c"
                            ],
                            "queryByte": 1,
                            "queryShort": 2,
                            "queryInteger": 3,
                            "queryIntegerList": [
                                1,
                                2,
                                3
                            ],
                            "queryIntegerSet": [
                                1,
                                2,
                                3
                            ],
                            "queryLong": 4,
                            "queryFloat": 1.1,
                            "queryDouble": 1.1,
                            "queryDoubleList": [
                                1.1,
                                2.1,
                                3.1
                            ],
                            "queryBoolean": true,
                            "queryBooleanList": [
                                true,
                                false,
                                true
                            ],
                            "queryTimestamp": 1,
                            "queryTimestampList": [
                                1,
                                2,
                                3
                            ],
                            "queryEnum": "Foo",
                            "queryEnumList": [
                                "Foo",
                                "Baz",
                                "Bar"
                            ]
                        }
                    },
                    {
                        "id": "RestXmlQueryStringMap",
                        "documentation": "Handles query string maps",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/AllQueryStringTypesInput",
                        "body": "",
                        "queryParams": [
                            "QueryParamsStringKeyA=Foo",
                            "QueryParamsStringKeyB=Bar"
                        ],
                        "params": {
                            "queryParamsMapOfStrings": {
                                "QueryParamsStringKeyA": "Foo",
                                "QueryParamsStringKeyB": "Bar"
                            }
                        }
                    },
                    {
                        "id": "RestXmlSupportsNaNFloatQueryValues",
                        "documentation": "Supports handling NaN float query values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/AllQueryStringTypesInput",
                        "body": "",
                        "queryParams": [
                            "Float=NaN",
                            "Double=NaN"
                        ],
                        "params": {
                            "queryFloat": "NaN",
                            "queryDouble": "NaN"
                        }
                    },
                    {
                        "id": "RestXmlSupportsInfinityFloatQueryValues",
                        "documentation": "Supports handling Infinity float query values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/AllQueryStringTypesInput",
                        "body": "",
                        "queryParams": [
                            "Float=Infinity",
                            "Double=Infinity"
                        ],
                        "params": {
                            "queryFloat": "Infinity",
                            "queryDouble": "Infinity"
                        }
                    },
                    {
                        "id": "RestXmlSupportsNegativeInfinityFloatQueryValues",
                        "documentation": "Supports handling -Infinity float query values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/AllQueryStringTypesInput",
                        "body": "",
                        "queryParams": [
                            "Float=-Infinity",
                            "Double=-Infinity"
                        ],
                        "params": {
                            "queryFloat": "-Infinity",
                            "queryDouble": "-Infinity"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#AllQueryStringTypesInput": {
            "type": "structure",
            "members": {
                "queryString": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "String"
                    }
                },
                "queryStringList": {
                    "target": "aws.protocoltests.shared#StringList",
                    "traits": {
                        "smithy.api#httpQuery": "StringList"
                    }
                },
                "queryStringSet": {
                    "target": "aws.protocoltests.shared#StringSet",
                    "traits": {
                        "smithy.api#httpQuery": "StringSet"
                    }
                },
                "queryByte": {
                    "target": "smithy.api#Byte",
                    "traits": {
                        "smithy.api#httpQuery": "Byte"
                    }
                },
                "queryShort": {
                    "target": "smithy.api#Short",
                    "traits": {
                        "smithy.api#httpQuery": "Short"
                    }
                },
                "queryInteger": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#httpQuery": "Integer"
                    }
                },
                "queryIntegerList": {
                    "target": "aws.protocoltests.shared#IntegerList",
                    "traits": {
                        "smithy.api#httpQuery": "IntegerList"
                    }
                },
                "queryIntegerSet": {
                    "target": "aws.protocoltests.shared#IntegerSet",
                    "traits": {
                        "smithy.api#httpQuery": "IntegerSet"
                    }
                },
                "queryLong": {
                    "target": "smithy.api#Long",
                    "traits": {
                        "smithy.api#httpQuery": "Long"
                    }
                },
                "queryFloat": {
                    "target": "smithy.api#Float",
                    "traits": {
                        "smithy.api#httpQuery": "Float"
                    }
                },
                "queryDouble": {
                    "target": "smithy.api#Double",
                    "traits": {
                        "smithy.api#httpQuery": "Double"
                    }
                },
                "queryDoubleList": {
                    "target": "aws.protocoltests.shared#DoubleList",
                    "traits": {
                        "smithy.api#httpQuery": "DoubleList"
                    }
                },
                "queryBoolean": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#httpQuery": "Boolean"
                    }
                },
                "queryBooleanList": {
                    "target": "aws.protocoltests.shared#BooleanList",
                    "traits": {
                        "smithy.api#httpQuery": "BooleanList"
                    }
                },
                "queryTimestamp": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpQuery": "Timestamp"
                    }
                },
                "queryTimestampList": {
                    "target": "aws.protocoltests.shared#TimestampList",
                    "traits": {
                        "smithy.api#httpQuery": "TimestampList"
                    }
                },
                "queryEnum": {
                    "target": "aws.protocoltests.shared#FooEnum",
                    "traits": {
                        "smithy.api#httpQuery": "Enum"
                    }
                },
                "queryEnumList": {
                    "target": "aws.protocoltests.shared#FooEnumList",
                    "traits": {
                        "smithy.api#httpQuery": "EnumList"
                    }
                },
                "queryParamsMapOfStrings": {
                    "target": "aws.protocoltests.shared#StringMap",
                    "traits": {
                        "smithy.api#httpQueryParams": {}
                    }
                }
            },
            "traits": {
                "smithy.api#suppress": [
                    "HttpQueryParamsTrait"
                ]
            }
        },
        "com.amazonaws.s3#AmazonS3": {
            "type": "service",
            "traits": {
                "aws.api#service": {
                    "sdkId": "S3",
                    "arnNamespace": "s3",
                    "cloudFormationName": "S3",
                    "cloudTrailEventSource": "s3.amazonaws.com",
                    "endpointPrefix": "s3"
                },
                "aws.auth#sigv4": {
                    "name": "s3"
                },
                "aws.protocols#restXml": {
                    "noErrorWrapping": true
                },
                "smithy.api#title": "Amazon Simple Storage Service",
                "smithy.api#xmlNamespace": {
                    "uri": "http://s3.amazonaws.com/doc/2006-03-01/"
                }
            },
            "version": "2006-03-01",
            "operations": [
                {
                    "target": "com.amazonaws.s3#GetBucketLocation"
                },
                {
                    "target": "com.amazonaws.s3#ListObjectsV2"
                }
            ]
        },
        "smithy.test#AppliesTo": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "client",
                        "name": "CLIENT",
                        "documentation": "The test only applies to client implementations."
                    },
                    {
                        "value": "server",
                        "name": "SERVER",
                        "documentation": "The test only applies to server implementations."
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#Arn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {},
                "smithy.api#documentation": "<p>The ARN of an AWS integration target.</p><p>This string MAY contain the literal string <code>{serviceName}</code> and/or the literal string <code>{operationName}</code>, which will be replaced with the name of the Smithy service shape and the name of the Smithy operation shape, respectively.</p>",
                "smithy.api#private": {}
            }
        },
        "aws.api#ArnNamespace": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[a-z0-9.\\-]{1,63}$",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#AuthorizerDefinition": {
            "type": "structure",
            "members": {
                "scheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Smithy authentication scheme used by the client (e.g, aws.v4).",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true,
                            "errorMessage": "The scheme of an authorizer definition must reference an auth trait"
                        },
                        "smithy.api#required": {}
                    }
                },
                "type": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The type of the authorizer. If specifying information beyond the scheme, this value is required. The value must be \"token\", for an authorizer with the caller identity embedded in an authorization token, or \"request\", for an authorizer with the caller identity contained in request parameters."
                    }
                },
                "customAuthType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "This value is not used directly by API Gateway but will be used for OpenAPI exports. This will default to \"awsSigV4\" if your scheme is \"aws.v4\", or \"custom\" otherwise."
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Uniform Resource Identifier (URI) of the authorizer Lambda function"
                    }
                },
                "credentials": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Credentials required for invoking the authorizer"
                    }
                },
                "identitySource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Comma-separated list of mapping expressions of the request parameters as the identity source. Applicable for the authorizer of the \"request\" type only."
                    }
                },
                "identityValidationExpression": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A regular expression for validating the token as the incoming identity"
                    }
                },
                "resultTtlInSeconds": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The number of seconds for which the resulting IAM policy is cached."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An object that associates an authorizer and associated metadata with an authentication mechanism.",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.config#AwsConfig": {
            "type": "structure",
            "members": {
                "clockTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "This is the time that should be set during the course of the test.\nThis is important for things like signing where the clock time impacts\nthe result."
                    }
                },
                "scopedConfig": {
                    "target": "aws.protocoltests.config#ScopedConfig"
                }
            }
        },
        "aws.protocoltests.restxml#BodyWithXmlName": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#BodyWithXmlNameInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#BodyWithXmlNameInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The following example serializes a body that uses an XML name,\nchanging the wrapper name.",
                "smithy.api#http": {
                    "uri": "/BodyWithXmlName",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "BodyWithXmlName",
                        "documentation": "Serializes a payload using a wrapper name based on the xmlName",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/BodyWithXmlName",
                        "body": "<Ahoy><nested><name>Phreddy</name></nested></Ahoy>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "BodyWithXmlName",
                        "documentation": "Serializes a payload using a wrapper name based on the xmlName",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<Ahoy><nested><name>Phreddy</name></nested></Ahoy>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#BodyWithXmlNameInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#PayloadWithXmlName"
                }
            },
            "traits": {
                "smithy.api#xmlName": "Ahoy"
            }
        },
        "aws.protocoltests.shared#BooleanList": {
            "type": "list",
            "member": {
                "target": "smithy.api#PrimitiveBoolean"
            }
        },
        "com.amazonaws.s3#BucketLocationConstraint": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "us-west-2",
                        "name": "us_west_2"
                    }
                ]
            }
        },
        "com.amazonaws.s3#BucketName": {
            "type": "string"
        },
        "aws.protocols#ChecksumAlgorithm": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "CRC32C",
                        "name": "CRC32C"
                    },
                    {
                        "value": "CRC32",
                        "name": "CRC32"
                    },
                    {
                        "value": "SHA1",
                        "name": "SHA1"
                    },
                    {
                        "value": "SHA256",
                        "name": "SHA256"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocols#ChecksumAlgorithmSet": {
            "type": "list",
            "member": {
                "target": "aws.protocols#ChecksumAlgorithm"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {},
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocoltests.config#ClientConfig": {
            "type": "structure",
            "members": {
                "aws_access_key_id": {
                    "target": "smithy.api#String"
                },
                "aws_secret_access_key": {
                    "target": "smithy.api#String"
                },
                "aws_session_token": {
                    "target": "smithy.api#String"
                },
                "region": {
                    "target": "smithy.api#String"
                },
                "s3": {
                    "target": "aws.protocoltests.config#S3Config"
                },
                "retry_config": {
                    "target": "aws.protocoltests.config#RetryConfig"
                },
                "aws_profile": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration that is set on the constructed client."
            }
        },
        "aws.api#CloudFormationName": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Z][A-Za-z0-9]+$",
                "smithy.api#private": {}
            }
        },
        "com.amazonaws.s3#CommonPrefix": {
            "type": "structure",
            "members": {
                "Prefix": {
                    "target": "com.amazonaws.s3#Prefix"
                }
            }
        },
        "com.amazonaws.s3#CommonPrefixList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.s3#CommonPrefix"
            }
        },
        "aws.protocoltests.restxml#ComplexError": {
            "type": "structure",
            "members": {
                "Header": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-Header"
                    }
                },
                "TopLevel": {
                    "target": "smithy.api#String"
                },
                "Nested": {
                    "target": "aws.protocoltests.restxml#ComplexNestedErrorData"
                }
            },
            "traits": {
                "smithy.api#documentation": "This error is thrown when a request is invalid.",
                "smithy.api#error": "client",
                "smithy.api#httpError": 403,
                "smithy.test#httpResponseTests": [
                    {
                        "id": "ComplexError",
                        "protocol": "aws.protocols#restXml",
                        "params": {
                            "Header": "Header",
                            "TopLevel": "Top level",
                            "Nested": {
                                "Foo": "bar"
                            }
                        },
                        "code": 400,
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Header": "Header"
                        },
                        "body": "<ErrorResponse>\n   <Error>\n      <Type>Sender</Type>\n      <Code>ComplexError</Code>\n      <Message>Hi</Message>\n      <TopLevel>Top level</TopLevel>\n      <Nested>\n          <Foo>bar</Foo>\n      </Nested>\n   </Error>\n   <RequestId>foo-id</RequestId>\n</ErrorResponse>\n",
                        "bodyMediaType": "application/xml"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#ComplexNestedErrorData": {
            "type": "structure",
            "members": {
                "Foo": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.iam#ConditionKeyDefinition": {
            "type": "structure",
            "members": {
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines documentation about the condition key."
                    }
                },
                "externalDocumentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A valid URL that defines more information about the condition key."
                    }
                },
                "type": {
                    "target": "aws.iam#ConditionKeyType",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A defined condition key to appear within a service in addition to inferred and global condition keys.",
                "smithy.api#private": {}
            }
        },
        "aws.iam#ConditionKeyType": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "The IAM policy type of the value that will supplied for this context key",
                "smithy.api#enum": [
                    {
                        "value": "ARN",
                        "name": "ARN"
                    },
                    {
                        "value": "ArrayOfARN",
                        "name": "ARRAY_OF_ARN"
                    },
                    {
                        "value": "Binary",
                        "name": "BINARY"
                    },
                    {
                        "value": "ArrayOfBinary",
                        "name": "ARRAY_OF_BINARY"
                    },
                    {
                        "value": "String",
                        "name": "STRING"
                    },
                    {
                        "value": "ArrayOfString",
                        "name": "ARRAY_OF_STRING"
                    },
                    {
                        "value": "Numeric",
                        "name": "NUMERIC"
                    },
                    {
                        "value": "ArrayOfNumeric",
                        "name": "ARRAY_OF_NUMERIC"
                    },
                    {
                        "value": "Date",
                        "name": "DATE"
                    },
                    {
                        "value": "ArrayOfDate",
                        "name": "ARRAY_OF_DATE"
                    },
                    {
                        "value": "Bool",
                        "name": "BOOL"
                    },
                    {
                        "value": "ArrayOfBool",
                        "name": "ARRAY_OF_BOOL"
                    },
                    {
                        "value": "IPAddress",
                        "name": "IP_ADDRESS"
                    },
                    {
                        "value": "ArrayOfIPAddress",
                        "name": "ARRAY_OF_IP_ADDRESS"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.config#ConfigFile": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The top level key in a config file is the \"profile\", which is a string.\nIf a profile is not explicitly set, then implementations should check the\nprofile named \"default\"."
                }
            },
            "value": {
                "target": "aws.protocoltests.config#FileConfigSettings",
                "traits": {
                    "smithy.api#documentation": "The value is a collection of settings."
                }
            },
            "traits": {
                "smithy.api#documentation": "A shape representing a parsed config file, which is a map of profile names\nto configuration sets."
            }
        },
        "aws.apigateway#ConnectionType": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "name": "INTERNET",
                        "value": "INTERNET"
                    },
                    {
                        "name": "VPC_LINK",
                        "value": "VPC_LINK"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#ConstantAndVariableQueryString": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#ConstantAndVariableQueryStringInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "This example uses fixed query string params and variable query string params.\nThe fixed query string parameters and variable parameters must both be\nserialized (implementations may need to merge them together).",
                "smithy.api#http": {
                    "uri": "/ConstantAndVariableQueryString?foo=bar",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "ConstantAndVariableQueryStringMissingOneValue",
                        "documentation": "Mixes constant and variable query string parameters",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/ConstantAndVariableQueryString",
                        "queryParams": [
                            "foo=bar",
                            "baz=bam"
                        ],
                        "forbidQueryParams": [
                            "maybeSet"
                        ],
                        "body": "",
                        "params": {
                            "baz": "bam"
                        }
                    },
                    {
                        "id": "ConstantAndVariableQueryStringAllValues",
                        "documentation": "Mixes constant and variable query string parameters",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/ConstantAndVariableQueryString",
                        "queryParams": [
                            "foo=bar",
                            "baz=bam",
                            "maybeSet=yes"
                        ],
                        "body": "",
                        "params": {
                            "baz": "bam",
                            "maybeSet": "yes"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#ConstantAndVariableQueryStringInput": {
            "type": "structure",
            "members": {
                "baz": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "baz"
                    }
                },
                "maybeSet": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "maybeSet"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#ConstantQueryString": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#ConstantQueryStringInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "This example uses a constant query string parameters and a label.\nThis simply tests that labels and query string parameters are\ncompatible. The fixed query string parameter named \"hello\" should\nin no way conflict with the label, `{hello}`.",
                "smithy.api#http": {
                    "uri": "/ConstantQueryString/{hello}?foo=bar&hello",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "ConstantQueryString",
                        "documentation": "Includes constant query string parameters",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/ConstantQueryString/hi",
                        "queryParams": [
                            "foo=bar",
                            "hello"
                        ],
                        "body": "",
                        "params": {
                            "hello": "hi"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#ConstantQueryStringInput": {
            "type": "structure",
            "members": {
                "hello": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.apigateway#ContentHandling": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Defines the contentHandling for the integration",
                "smithy.api#enum": [
                    {
                        "value": "CONVERT_TO_TEXT",
                        "name": "CONVERT_TO_TEXT"
                    },
                    {
                        "value": "CONVERT_TO_BINARY",
                        "name": "CONVERT_TO_BINARY"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#DateTime": {
            "type": "timestamp",
            "traits": {
                "smithy.api#timestampFormat": "date-time"
            }
        },
        "com.amazonaws.s3#Delimiter": {
            "type": "string"
        },
        "com.amazonaws.s3#DisplayName": {
            "type": "string"
        },
        "aws.protocoltests.shared#DoubleList": {
            "type": "list",
            "member": {
                "target": "smithy.api#Double"
            }
        },
        "com.amazonaws.s3#ETag": {
            "type": "string"
        },
        "aws.protocoltests.restxml#EmptyInputAndEmptyOutput": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#EmptyInputAndEmptyOutputInput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#EmptyInputAndEmptyOutputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how requests and responses are serialized when there's\nno request or response payload because the operation has an empty input\nand empty output structure that reuses the same shape. While this should\nbe rare, code generators must support this.",
                "smithy.api#http": {
                    "uri": "/EmptyInputAndEmptyOutput",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "EmptyInputAndEmptyOutput",
                        "documentation": "Empty input serializes no payload",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/EmptyInputAndEmptyOutput",
                        "body": ""
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "EmptyInputAndEmptyOutput",
                        "documentation": "Empty output serializes no payload",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": ""
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#EmptyInputAndEmptyOutputInput": {
            "type": "structure",
            "members": {}
        },
        "aws.protocoltests.restxml#EmptyInputAndEmptyOutputOutput": {
            "type": "structure",
            "members": {}
        },
        "com.amazonaws.s3#EncodingType": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "url",
                        "name": "url"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#EndpointOperation": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#endpoint": {
                    "hostPrefix": "foo."
                },
                "smithy.api#http": {
                    "uri": "/EndpointOperation",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlEndpointTrait",
                        "documentation": "Operations can prepend to the given host if they define the\nendpoint trait.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/EndpointOperation",
                        "body": "",
                        "host": "example.com",
                        "resolvedHost": "foo.example.com"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#EndpointWithHostLabelHeaderOperation": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HostLabelHeaderInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#endpoint": {
                    "hostPrefix": "{accountId}."
                },
                "smithy.api#http": {
                    "uri": "/EndpointWithHostLabelHeaderOperation",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlEndpointTraitWithHostLabelAndHttpBinding",
                        "documentation": "Operations can prepend to the given host if they define the\nendpoint trait, and can use the host label trait to define\nfurther customization based on user input. The label must also\nbe serialized in into any other location it is bound to, such\nas the body or in this case an http header.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/EndpointWithHostLabelHeaderOperation",
                        "body": "",
                        "bodyMediaType": "application/xml",
                        "host": "example.com",
                        "resolvedHost": "bar.example.com",
                        "headers": {
                            "X-Amz-Account-Id": "bar"
                        },
                        "params": {
                            "accountId": "bar"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#EndpointWithHostLabelOperation": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HostLabelInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#endpoint": {
                    "hostPrefix": "foo.{label}."
                },
                "smithy.api#http": {
                    "uri": "/EndpointWithHostLabelOperation",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlEndpointTraitWithHostLabel",
                        "documentation": "Operations can prepend to the given host if they define the\nendpoint trait, and can use the host label trait to define\nfurther customization based on user input.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/EndpointWithHostLabelOperation",
                        "body": "<HostLabelInput>\n    <label>bar</label>\n</HostLabelInput>\n",
                        "bodyMediaType": "application/xml",
                        "host": "example.com",
                        "resolvedHost": "foo.bar.example.com",
                        "params": {
                            "label": "bar"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.config#EnvironmentConfig": {
            "type": "structure",
            "members": {
                "AWS_ACCESS_KEY_ID": {
                    "target": "smithy.api#String"
                },
                "AWS_SECRET_ACCESS_KEY": {
                    "target": "smithy.api#String"
                },
                "AWS_DEFAULT_REGION": {
                    "target": "smithy.api#String"
                },
                "AWS_RETRY_MODE": {
                    "target": "aws.protocoltests.config#RetryMode"
                },
                "AWS_SESSION_TOKEN": {
                    "target": "smithy.api#String"
                },
                "AWS_PROFILE": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Config settings that can be set as environment variables."
            }
        },
        "aws.protocoltests.shared#EpochSeconds": {
            "type": "timestamp",
            "traits": {
                "smithy.api#timestampFormat": "epoch-seconds"
            }
        },
        "com.amazonaws.s3#FetchOwner": {
            "type": "boolean"
        },
        "aws.protocoltests.config#FileConfigSettings": {
            "type": "structure",
            "members": {
                "aws_access_key_id": {
                    "target": "smithy.api#String"
                },
                "aws_secret_access_key": {
                    "target": "smithy.api#String"
                },
                "aws_session_token": {
                    "target": "smithy.api#String"
                },
                "region": {
                    "target": "smithy.api#String"
                },
                "s3": {
                    "target": "aws.protocoltests.config#S3Config"
                },
                "retry_mode": {
                    "target": "aws.protocoltests.config#RetryMode"
                },
                "max_attempts": {
                    "target": "smithy.api#Short"
                }
            },
            "traits": {
                "smithy.api#documentation": "Config settings that can be set in the AWS config / credentials file as\npart of a profile."
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMap": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#FlattenedXmlMapInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#FlattenedXmlMapInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "Flattened maps",
                "smithy.api#http": {
                    "uri": "/FlattenedXmlMap",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "FlattenedXmlMap",
                        "documentation": "Serializes flattened XML maps in requests",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/FlattenedXmlMap",
                        "body": "<FlattenedXmlMapInputOutput>\n    <myMap>\n        <key>foo</key>\n        <value>Foo</value>\n    </myMap>\n    <myMap>\n        <key>baz</key>\n        <value>Baz</value>\n    </myMap>\n</FlattenedXmlMapInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "foo": "Foo",
                                "baz": "Baz"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "FlattenedXmlMap",
                        "documentation": "Serializes flattened XML maps in responses",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<FlattenedXmlMapInputOutput>\n    <myMap>\n        <key>foo</key>\n        <value>Foo</value>\n    </myMap>\n    <myMap>\n        <key>baz</key>\n        <value>Baz</value>\n    </myMap>\n</FlattenedXmlMapInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "foo": "Foo",
                                "baz": "Baz"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapInputOutput": {
            "type": "structure",
            "members": {
                "myMap": {
                    "target": "aws.protocoltests.shared#FooEnumMap",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapWithXmlName": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNameInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNameInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "Flattened maps with @xmlName",
                "smithy.api#http": {
                    "uri": "/FlattenedXmlMapWithXmlName",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "FlattenedXmlMapWithXmlName",
                        "documentation": "Serializes flattened XML maps in requests that have xmlName on members",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/FlattenedXmlMapWithXmlName",
                        "body": "<FlattenedXmlMapWithXmlNameInputOutput>\n    <KVP>\n        <K>a</K>\n        <V>A</V>\n    </KVP>\n    <KVP>\n        <K>b</K>\n        <V>B</V>\n    </KVP>\n</FlattenedXmlMapWithXmlNameInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "a": "A",
                                "b": "B"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "FlattenedXmlMapWithXmlName",
                        "documentation": "Serializes flattened XML maps in responses that have xmlName on members",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<FlattenedXmlMapWithXmlNameInputOutput>\n    <KVP>\n        <K>a</K>\n        <V>A</V>\n    </KVP>\n    <KVP>\n        <K>b</K>\n        <V>B</V>\n    </KVP>\n</FlattenedXmlMapWithXmlNameInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "a": "A",
                                "b": "B"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNameInputOutput": {
            "type": "structure",
            "members": {
                "myMap": {
                    "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNameInputOutputMap",
                    "traits": {
                        "smithy.api#xmlFlattened": {},
                        "smithy.api#xmlName": "KVP"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNameInputOutputMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlName": "K"
                }
            },
            "value": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlName": "V"
                }
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNamespace": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNamespaceOutput"
            },
            "traits": {
                "smithy.api#documentation": "Flattened maps with @xmlNamespace and @xmlName",
                "smithy.api#http": {
                    "uri": "/FlattenedXmlMapWithXmlNamespace",
                    "method": "POST"
                },
                "smithy.test#httpResponseTests": [
                    {
                        "id": "RestXmlFlattenedXmlMapWithXmlNamespace",
                        "documentation": "Serializes flattened XML maps in responses that have xmlNamespace and xmlName on members",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<FlattenedXmlMapWithXmlNamespaceOutput>\n    <KVP xmlns=\"https://the-member.example.com\">\n        <K xmlns=\"https://the-key.example.com\">a</K>\n        <V xmlns=\"https://the-value.example.com\">A</V>\n    </KVP>\n    <KVP xmlns=\"https://the-member.example.com\">\n        <K xmlns=\"https://the-key.example.com\">b</K>\n        <V xmlns=\"https://the-value.example.com\">B</V>\n    </KVP>\n</FlattenedXmlMapWithXmlNamespaceOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "a": "A",
                                "b": "B"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNamespaceOutput": {
            "type": "structure",
            "members": {
                "myMap": {
                    "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNamespaceOutputMap",
                    "traits": {
                        "smithy.api#xmlFlattened": {},
                        "smithy.api#xmlName": "KVP",
                        "smithy.api#xmlNamespace": {
                            "uri": "https://the-member.example.com"
                        }
                    }
                }
            }
        },
        "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNamespaceOutputMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlName": "K",
                    "smithy.api#xmlNamespace": {
                        "uri": "https://the-key.example.com"
                    }
                }
            },
            "value": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlName": "V",
                    "smithy.api#xmlNamespace": {
                        "uri": "https://the-value.example.com"
                    }
                }
            }
        },
        "aws.protocoltests.shared#FooEnum": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "name": "FOO",
                        "value": "Foo"
                    },
                    {
                        "name": "BAZ",
                        "value": "Baz"
                    },
                    {
                        "name": "BAR",
                        "value": "Bar"
                    },
                    {
                        "name": "ONE",
                        "value": "1"
                    },
                    {
                        "name": "ZERO",
                        "value": "0"
                    }
                ]
            }
        },
        "aws.protocoltests.shared#FooEnumList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#FooEnum"
            }
        },
        "aws.protocoltests.shared#FooEnumMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.shared#FooEnum"
            }
        },
        "aws.protocoltests.shared#FooEnumSet": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#FooEnum"
            },
            "traits": {
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocoltests.restxml#FooPrefixHeaders": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            }
        },
        "com.amazonaws.s3#GetBucketLocation": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.s3#GetBucketLocationRequest"
            },
            "output": {
                "target": "com.amazonaws.s3#GetBucketLocationOutput"
            },
            "traits": {
                "aws.customizations#s3UnwrappedXmlOutput": {},
                "smithy.api#http": {
                    "uri": "/{Bucket}?location",
                    "method": "GET"
                },
                "smithy.test#httpResponseTests": [
                    {
                        "id": "GetBucketLocationUnwrappedOutput",
                        "documentation": "    S3 clients should use the @s3UnwrappedXmlOutput trait to determine\n    that the response shape is not wrapped in a restxml operation-level XML node.\n",
                        "code": 200,
                        "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<LocationConstraint xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">us-west-2</LocationConstraint>",
                        "params": {
                            "LocationConstraint": "us-west-2"
                        },
                        "protocol": "aws.protocols#restXml"
                    }
                ]
            }
        },
        "com.amazonaws.s3#GetBucketLocationOutput": {
            "type": "structure",
            "members": {
                "LocationConstraint": {
                    "target": "com.amazonaws.s3#BucketLocationConstraint"
                }
            },
            "traits": {
                "smithy.api#xmlName": "LocationConstraint"
            }
        },
        "com.amazonaws.s3#GetBucketLocationRequest": {
            "type": "structure",
            "members": {
                "Bucket": {
                    "target": "com.amazonaws.s3#BucketName",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.shared#GreetingList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#GreetingStruct"
            }
        },
        "aws.protocoltests.shared#GreetingStruct": {
            "type": "structure",
            "members": {
                "hi": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.protocoltests.restxml#GreetingWithErrors": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "aws.protocoltests.restxml#GreetingWithErrorsOutput"
            },
            "errors": [
                {
                    "target": "aws.protocoltests.restxml#ComplexError"
                },
                {
                    "target": "aws.protocoltests.restxml#InvalidGreeting"
                }
            ],
            "traits": {
                "smithy.api#documentation": "This operation has three possible return values:\n\n1. A successful response in the form of GreetingWithErrorsOutput\n2. An InvalidGreeting error.\n3. A BadRequest error.\n\nImplementations must be able to successfully take a response and\nproperly (de)serialize successful and error responses based on the\nthe presence of the",
                "smithy.api#http": {
                    "uri": "/GreetingWithErrors",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpResponseTests": [
                    {
                        "id": "GreetingWithErrors",
                        "documentation": "Ensures that operations with errors successfully know how to deserialize the successful response",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "",
                        "headers": {
                            "X-Greeting": "Hello"
                        },
                        "params": {
                            "greeting": "Hello"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#GreetingWithErrorsOutput": {
            "type": "structure",
            "members": {
                "greeting": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-Greeting"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HostLabelHeaderInput": {
            "type": "structure",
            "members": {
                "accountId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#hostLabel": {},
                        "smithy.api#httpHeader": "X-Amz-Account-Id",
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HostLabelInput": {
            "type": "structure",
            "members": {
                "label": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#hostLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.shared#HttpDate": {
            "type": "timestamp",
            "traits": {
                "smithy.api#timestampFormat": "http-date"
            }
        },
        "smithy.test#HttpMalformedRequestDefinition": {
            "type": "structure",
            "members": {
                "method": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The HTTP request method.",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The request-target of the HTTP request, not including\nthe query string (for example, \"/foo/bar\").",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "host": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint provided to the client, not including the path\nor scheme (for example, \"example.com\")."
                    }
                },
                "queryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the serialized query string parameters to include in the request.\n\nEach element in the list is a query string key value pair\nthat starts with the query string parameter name optionally\nfollowed by \"=\", optionally followed by the query string\nparameter value. For example, \"foo=bar\", \"foo=\", and \"foo\"\nare all valid values. The query string parameter name and\nthe value MUST appear in the format in which it is expected\nto be sent over the wire; if a key or value needs to be\npercent-encoded, then it MUST appear percent-encoded in this list."
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of HTTP headers to include in the request"
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The HTTP message body to include in the request"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedRequestTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpMalformedRequestTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "request": {
                    "target": "smithy.test#HttpMalformedRequestDefinition",
                    "traits": {
                        "smithy.api#documentation": "The malformed request to send.",
                        "smithy.api#required": {}
                    }
                },
                "response": {
                    "target": "smithy.test#HttpMalformedResponseDefinition",
                    "traits": {
                        "smithy.api#documentation": "The expected response.",
                        "smithy.api#required": {}
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "testParameters": {
                    "target": "smithy.test#HttpMalformedRequestTestParametersDefinition",
                    "traits": {
                        "smithy.api#documentation": "An optional set of test parameters for parameterized testing."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedRequestTestParametersDefinition": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.test#StringList"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseBodyAssertion": {
            "type": "union",
            "members": {
                "contents": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the expected serialized response body, which will be matched\nexactly."
                    }
                },
                "messageRegex": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A regex to evaluate against the `message` field in the body. For\nresponses that may have some variance from platform to platform,\nsuch as those that include messages from a parser."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseBodyDefinition": {
            "type": "structure",
            "members": {
                "assertion": {
                    "target": "smithy.test#HttpMalformedResponseBodyAssertion",
                    "traits": {
                        "smithy.api#documentation": "The assertion to execute against the response body.",
                        "smithy.api#required": {}
                    }
                },
                "mediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the response body.\n\nThis is used to help test runners to parse and evaluate\n`contents' and `messageRegex` in the assertion",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseDefinition": {
            "type": "structure",
            "members": {
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of expected HTTP headers.\n\nHeaders that are not listed in this map are ignored."
                    }
                },
                "code": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP response code.",
                        "smithy.api#range": {
                            "min": 100,
                            "max": 599
                        },
                        "smithy.api#required": {}
                    }
                },
                "body": {
                    "target": "smithy.test#HttpMalformedResponseBodyDefinition",
                    "traits": {
                        "smithy.api#documentation": "The expected response body."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#HttpPayloadTraits": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadTraitsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadTraitsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This examples serializes a blob shape in the payload.\n\nIn this example, no XML document is synthesized because the payload is\nnot a structure or a union type.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadTraits",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadTraitsWithBlob",
                        "documentation": "Serializes a blob in the HTTP payload",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/HttpPayloadTraits",
                        "body": "blobby blob blob",
                        "headers": {
                            "X-Foo": "Foo"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "foo": "Foo",
                            "blob": "blobby blob blob"
                        }
                    },
                    {
                        "id": "HttpPayloadTraitsWithNoBlobBody",
                        "documentation": "Serializes an empty blob in the HTTP payload",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/HttpPayloadTraits",
                        "body": "",
                        "headers": {
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadTraitsWithBlob",
                        "documentation": "Serializes a blob in the HTTP payload",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "blobby blob blob",
                        "headers": {
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "blob": "blobby blob blob"
                        }
                    },
                    {
                        "id": "HttpPayloadTraitsWithNoBlobBody",
                        "documentation": "Serializes an empty blob in the HTTP payload",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "",
                        "headers": {
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadTraitsInputOutput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-Foo"
                    }
                },
                "blob": {
                    "target": "smithy.api#Blob",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPayloadTraitsWithMediaType": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadTraitsWithMediaTypeInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadTraitsWithMediaTypeInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This examples uses a `@mediaType` trait on the payload to force a custom\ncontent-type to be serialized.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadTraitsWithMediaType",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadTraitsWithMediaTypeWithBlob",
                        "documentation": "Serializes a blob in the HTTP payload with a content-type",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/HttpPayloadTraitsWithMediaType",
                        "body": "blobby blob blob",
                        "headers": {
                            "X-Foo": "Foo",
                            "Content-Type": "text/plain"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "foo": "Foo",
                            "blob": "blobby blob blob"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadTraitsWithMediaTypeWithBlob",
                        "documentation": "Serializes a blob in the HTTP payload with a content-type",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "blobby blob blob",
                        "headers": {
                            "X-Foo": "Foo",
                            "Content-Type": "text/plain"
                        },
                        "params": {
                            "foo": "Foo",
                            "blob": "blobby blob blob"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadTraitsWithMediaTypeInputOutput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-Foo"
                    }
                },
                "blob": {
                    "target": "aws.protocoltests.shared#TextPlainBlob",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithMemberXmlName": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithMemberXmlNameInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithMemberXmlNameInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The following example serializes a payload that uses an XML name\non the member, changing the wrapper name.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadWithMemberXmlName",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadWithMemberXmlName",
                        "documentation": "Serializes a structure in the payload using a wrapper name based on member xmlName",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/HttpPayloadWithMemberXmlName",
                        "body": "<Hola><name>Phreddy</name></Hola>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadWithMemberXmlName",
                        "documentation": "Serializes a structure in the payload using a wrapper name based on member xmlName",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<Hola><name>Phreddy</name></Hola>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithMemberXmlNameInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#PayloadWithXmlName",
                    "traits": {
                        "smithy.api#httpPayload": {},
                        "smithy.api#xmlName": "Hola"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithStructure": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithStructureInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithStructureInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This examples serializes a structure in the payload.\n\nNote that serializing a structure changes the wrapper element name\nto match the targeted structure.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadWithStructure",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadWithStructure",
                        "documentation": "Serializes a structure in the payload",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/HttpPayloadWithStructure",
                        "body": "<NestedPayload>\n    <greeting>hello</greeting>\n    <name>Phreddy</name>\n</NestedPayload>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "nested": {
                                "greeting": "hello",
                                "name": "Phreddy"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadWithStructure",
                        "documentation": "Serializes a structure in the payload",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<NestedPayload>\n    <greeting>hello</greeting>\n    <name>Phreddy</name>\n</NestedPayload>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "greeting": "hello",
                                "name": "Phreddy"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithStructureInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#NestedPayload",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithXmlName": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNameInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNameInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The following example serializes a payload that uses an XML name,\nchanging the wrapper name.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadWithXmlName",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadWithXmlName",
                        "documentation": "Serializes a structure in the payload using a wrapper name based on xmlName",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/HttpPayloadWithXmlName",
                        "body": "<Hello><name>Phreddy</name></Hello>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadWithXmlName",
                        "documentation": "Serializes a structure in the payload using a wrapper name based on xmlName",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<Hello><name>Phreddy</name></Hello>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithXmlNameInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#PayloadWithXmlName",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithXmlNamespace": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The following example serializes a payload that uses an XML namespace.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadWithXmlNamespace",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadWithXmlNamespace",
                        "documentation": "Serializes a structure in the payload using a wrapper with an XML namespace",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/HttpPayloadWithXmlNamespace",
                        "body": "<PayloadWithXmlNamespace xmlns=\"http://foo.com\">\n    <name>Phreddy</name>\n</PayloadWithXmlNamespace>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadWithXmlNamespace",
                        "documentation": "Serializes a structure in the payload using a wrapper with an XML namespace",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<PayloadWithXmlNamespace xmlns=\"http://foo.com\">\n    <name>Phreddy</name>\n</PayloadWithXmlNamespace>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceAndPrefix": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceAndPrefixInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceAndPrefixInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The following example serializes a payload that uses an XML namespace.",
                "smithy.api#http": {
                    "uri": "/HttpPayloadWithXmlNamespaceAndPrefix",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPayloadWithXmlNamespaceAndPrefix",
                        "documentation": "Serializes a structure in the payload using a wrapper with an XML namespace",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/HttpPayloadWithXmlNamespaceAndPrefix",
                        "body": "<PayloadWithXmlNamespaceAndPrefix xmlns:baz=\"http://foo.com\">\n    <name>Phreddy</name>\n</PayloadWithXmlNamespaceAndPrefix>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPayloadWithXmlNamespaceAndPrefix",
                        "documentation": "Serializes a structure in the payload using a wrapper with an XML namespace",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<PayloadWithXmlNamespaceAndPrefix xmlns:baz=\"http://foo.com\">\n    <name>Phreddy</name>\n</PayloadWithXmlNamespaceAndPrefix>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "name": "Phreddy"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceAndPrefixInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#PayloadWithXmlNamespaceAndPrefix",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#PayloadWithXmlNamespace",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpPrefixHeaders": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpPrefixHeadersInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpPrefixHeadersInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This examples adds headers to the input of a request and response by prefix.",
                "smithy.api#externalDocumentation": {
                    "httpPrefixHeaders Trait": "https://awslabs.github.io/smithy/1.0/spec/http.html#httpprefixheaders-trait"
                },
                "smithy.api#http": {
                    "uri": "/HttpPrefixHeaders",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpPrefixHeadersArePresent",
                        "documentation": "Adds headers by prefix",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/HttpPrefixHeaders",
                        "body": "",
                        "headers": {
                            "X-Foo": "Foo",
                            "X-Foo-Abc": "Abc value",
                            "X-Foo-Def": "Def value"
                        },
                        "params": {
                            "foo": "Foo",
                            "fooMap": {
                                "Abc": "Abc value",
                                "Def": "Def value"
                            }
                        }
                    },
                    {
                        "id": "HttpPrefixHeadersAreNotPresent",
                        "documentation": "No prefix headers are serialized because the value is empty",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/HttpPrefixHeaders",
                        "body": "",
                        "headers": {
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "fooMap": {}
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "HttpPrefixHeadersArePresent",
                        "documentation": "Adds headers by prefix",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "",
                        "headers": {
                            "X-Foo": "Foo",
                            "X-Foo-Abc": "Abc value",
                            "X-Foo-Def": "Def value"
                        },
                        "params": {
                            "foo": "Foo",
                            "fooMap": {
                                "Abc": "Abc value",
                                "Def": "Def value"
                            }
                        }
                    },
                    {
                        "id": "HttpPrefixHeadersAreNotPresent",
                        "documentation": "No prefix headers are serialized because the value is empty",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "",
                        "headers": {
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "fooMap": {}
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpPrefixHeadersInputOutput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-Foo"
                    }
                },
                "fooMap": {
                    "target": "aws.protocoltests.restxml#FooPrefixHeaders",
                    "traits": {
                        "smithy.api#httpPrefixHeaders": "X-Foo-"
                    }
                }
            }
        },
        "smithy.test#HttpRequestTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpRequestTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "method": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected serialized HTTP request method.",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The request-target of the HTTP request, not including\nthe query string (for example, \"/foo/bar\").",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "host": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint provided to the client, not including the path\nor scheme (for example, \"example.com\")."
                    }
                },
                "resolvedHost": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint that the client should send to, not including\nthe path or scheme (for example, \"prefix.example.com\").\n\nThis can differ from the host provided to the client if the `hostPrefix`\nmember of the `endpoint` trait is set, for instance."
                    }
                },
                "authScheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The optional authentication scheme shape ID to assume. It's\npossible that specific authentication schemes might influence\nthe serialization logic of an HTTP request.",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true
                        }
                    }
                },
                "queryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the expected serialized query string parameters.\n\nEach element in the list is a query string key value pair\nthat starts with the query string parameter name optionally\nfollowed by \"=\", optionally followed by the query string\nparameter value. For example, \"foo=bar\", \"foo=\", and \"foo\"\nare all valid values. The query string parameter name and\nthe value MUST appear in the format in which it is expected\nto be sent over the wire; if a key or value needs to be\npercent-encoded, then it MUST appear percent-encoded in this list.\n\nA serialized HTTP request is not in compliance with the protocol\nif any query string parameter defined in `queryParams` is not\ndefined in the request or if the value of a query string parameter\nin the request differs from the expected value.\n\n`queryParams` applies no constraints on additional query parameters."
                    }
                },
                "forbidQueryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of query string parameter names that must not appear in the\nserialized HTTP request.\n\nEach value MUST appear in the format in which it is sent over the\nwire; if a key needs to be percent-encoded, then it MUST appear\npercent-encoded in this list."
                    }
                },
                "requireQueryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of query string parameter names that MUST appear in the\nserialized request URI, but no assertion is made on the value.\n\nEach value MUST appear in the format in which it is sent over the\nwire; if a key needs to be percent-encoded, then it MUST appear\npercent-encoded in this list."
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of expected HTTP headers.\n\nHeaders that are not listed in this map are ignored unless they are\nexplicitly forbidden through `forbidHeaders`."
                    }
                },
                "forbidHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must not appear in the serialized\nHTTP request."
                    }
                },
                "requireHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must appear in the serialized\nHTTP message, but no assertion is made on the value.\n\nHeaders listed in `headers` do not need to appear in this list."
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected HTTP message body.\n\nIf no request body is defined, then no assertions are made about\nthe body of the message."
                    }
                },
                "bodyMediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the `body`.\n\nThis is used to help test runners to parse and validate the expected\ndata against generated data."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the input parameters used to generated the HTTP request.\n\nThese parameters MUST be compatible with the input of the operation."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nrequest. For example, some vendors might utilize environment\nvariables, configuration files on disk, or other means to influence\nthe serialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible\nwith that shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A shape to be used to validate the `vendorParams` member contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "appliesTo": {
                    "target": "smithy.test#AppliesTo",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the test case is only to be implemented by \"client\" or\n\"server\" implementations. This property is useful for identifying and\ntesting edge cases of clients and servers that are impossible or\nundesirable to test in *both* client and server implementations."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithFloatLabels": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpRequestWithFloatLabelsInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/FloatHttpLabels/{float}/{double}"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlSupportsNaNFloatLabels",
                        "documentation": "Supports handling NaN float label values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/FloatHttpLabels/NaN/NaN",
                        "body": "",
                        "params": {
                            "float": "NaN",
                            "double": "NaN"
                        }
                    },
                    {
                        "id": "RestXmlSupportsInfinityFloatLabels",
                        "documentation": "Supports handling Infinity float label values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/FloatHttpLabels/Infinity/Infinity",
                        "body": "",
                        "params": {
                            "float": "Infinity",
                            "double": "Infinity"
                        }
                    },
                    {
                        "id": "RestXmlSupportsNegativeInfinityFloatLabels",
                        "documentation": "Supports handling -Infinity float label values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/FloatHttpLabels/-Infinity/-Infinity",
                        "body": "",
                        "params": {
                            "float": "-Infinity",
                            "double": "-Infinity"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithFloatLabelsInput": {
            "type": "structure",
            "members": {
                "float": {
                    "target": "smithy.api#Float",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "double": {
                    "target": "smithy.api#Double",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithGreedyLabelInPath": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpRequestWithGreedyLabelInPathInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/HttpRequestWithGreedyLabelInPath/foo/{foo}/baz/{baz+}"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpRequestWithGreedyLabelInPath",
                        "documentation": "Serializes greedy labels and normal labels",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/HttpRequestWithGreedyLabelInPath/foo/hello/baz/there/guy",
                        "body": "",
                        "params": {
                            "foo": "hello",
                            "baz": "there/guy"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithGreedyLabelInPathInput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "baz": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithLabels": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpRequestWithLabelsInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how requests are serialized when there's no input\npayload but there are HTTP labels.",
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/HttpRequestWithLabels/{string}/{short}/{integer}/{long}/{float}/{double}/{boolean}/{timestamp}"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "InputWithHeadersAndAllParams",
                        "documentation": "Sends a GET request that uses URI label bindings",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/HttpRequestWithLabels/string/1/2/3/4.1/5.1/true/2019-12-16T23%3A48%3A18Z",
                        "body": "",
                        "params": {
                            "string": "string",
                            "short": 1,
                            "integer": 2,
                            "long": 3,
                            "float": 4.1,
                            "double": 5.1,
                            "boolean": true,
                            "timestamp": 1576540098
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithLabelsAndTimestampFormat": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#HttpRequestWithLabelsAndTimestampFormatInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how requests serialize different timestamp formats in the\nURI path.",
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/HttpRequestWithLabelsAndTimestampFormat/{memberEpochSeconds}/{memberHttpDate}/{memberDateTime}/{defaultFormat}/{targetEpochSeconds}/{targetHttpDate}/{targetDateTime}"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "HttpRequestWithLabelsAndTimestampFormat",
                        "documentation": "Serializes different timestamp formats in URI labels",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/HttpRequestWithLabelsAndTimestampFormat/1576540098/Mon%2C%2016%20Dec%202019%2023%3A48%3A18%20GMT/2019-12-16T23%3A48%3A18Z/2019-12-16T23%3A48%3A18Z/1576540098/Mon%2C%2016%20Dec%202019%2023%3A48%3A18%20GMT/2019-12-16T23%3A48%3A18Z",
                        "body": "",
                        "params": {
                            "memberEpochSeconds": 1576540098,
                            "memberHttpDate": 1576540098,
                            "memberDateTime": 1576540098,
                            "defaultFormat": 1576540098,
                            "targetEpochSeconds": 1576540098,
                            "targetHttpDate": 1576540098,
                            "targetDateTime": 1576540098
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithLabelsAndTimestampFormatInput": {
            "type": "structure",
            "members": {
                "memberEpochSeconds": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {},
                        "smithy.api#timestampFormat": "epoch-seconds"
                    }
                },
                "memberHttpDate": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {},
                        "smithy.api#timestampFormat": "http-date"
                    }
                },
                "memberDateTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {},
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "defaultFormat": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "targetEpochSeconds": {
                    "target": "aws.protocoltests.shared#EpochSeconds",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "targetHttpDate": {
                    "target": "aws.protocoltests.shared#HttpDate",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "targetDateTime": {
                    "target": "aws.protocoltests.shared#DateTime",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpRequestWithLabelsInput": {
            "type": "structure",
            "members": {
                "string": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "short": {
                    "target": "smithy.api#Short",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "integer": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "long": {
                    "target": "smithy.api#Long",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "float": {
                    "target": "smithy.api#Float",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "double": {
                    "target": "smithy.api#Double",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "boolean": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Serialized in the path as true or false.",
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "timestamp": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "Note that this member has no format, so it's serialized as an RFC 3399 date-time.",
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#HttpResponseCode": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "aws.protocoltests.restxml#HttpResponseCodeOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/HttpResponseCode",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpResponseTests": [
                    {
                        "id": "RestXmlHttpResponseCode",
                        "documentation": "Binds the http response code to an output structure.",
                        "protocol": "aws.protocols#restXml",
                        "code": 201,
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "body": "",
                        "bodyMediaType": "application/xml",
                        "params": {
                            "Status": 201
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#HttpResponseCodeOutput": {
            "type": "structure",
            "members": {
                "Status": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#httpResponseCode": {}
                    }
                }
            }
        },
        "smithy.test#HttpResponseTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpResponseTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The shape ID of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "code": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP response code.",
                        "smithy.api#range": {
                            "min": 100,
                            "max": 599
                        },
                        "smithy.api#required": {}
                    }
                },
                "authScheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The optional authentication scheme shape ID to assume. It's possible\nthat specific authentication schemes might influence the serialization\nlogic of an HTTP response.",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true
                        }
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "A map of expected HTTP headers. Each key represents a header field\nname and each value represents the expected header value. An HTTP\nresponse is not in compliance with the protocol if any listed header\nis missing from the serialized response or if the expected header\nvalue differs from the serialized response value.\n\n`headers` applies no constraints on additional headers."
                    }
                },
                "forbidHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must not appear."
                    }
                },
                "requireHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must appear in the serialized\nHTTP message, but no assertion is made on the value.\n\nHeaders listed in `headers` map do not need to appear in this list."
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP message body.\n\nIf no response body is defined, then no assertions are made about\nthe body of the message."
                    }
                },
                "bodyMediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the `body`.\n\nThis is used to help test runners to parse and validate the expected\ndata against generated data. Binary media type formats require that\nthe contents of `body` are base64 encoded."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the output parameters deserialized from the HTTP response.\n\nThese parameters MUST be compatible with the output of the operation."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nresponse. For example, some vendors might utilize environment\nvariables, configuration files on disk, or other means to influence\nthe serialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible\nwith that shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A shape to be used to validate the `vendorParams` member contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "appliesTo": {
                    "target": "smithy.test#AppliesTo",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the test case is only to be implemented by \"client\" or\n\"server\" implementations. This property is useful for identifying and\ntesting edge cases of clients and servers that are impossible or\nundesirable to test in *both* client and server implementations."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "com.amazonaws.s3#ID": {
            "type": "string"
        },
        "aws.iam#IamIdentifier": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^([A-Za-z0-9][A-Za-z0-9-\\.]{0,62}:[^:]+)$",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IamRoleArn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {
                    "type": "AWS::IAM::Role"
                },
                "smithy.api#documentation": "<p>The ARN of the IAM role to assume with invoking the integration.</p><p>This string MAY contain the literal string <code>{serviceName}</code> and/or the literal string <code>{operationName}</code>, which will be replaced with the name of the Smithy service shape and the name of the Smithy operation shape, respectively.</p>",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#IgnoreQueryParamsInResponse": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "aws.protocoltests.restxml#IgnoreQueryParamsInResponseOutput"
            },
            "traits": {
                "smithy.api#documentation": "This example ensures that query string bound request parameters are\nserialized in the body of responses if the structure is used in both\nthe request and response.",
                "smithy.api#http": {
                    "uri": "/IgnoreQueryParamsInResponse",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpResponseTests": [
                    {
                        "id": "IgnoreQueryParamsInResponse",
                        "documentation": "Query parameters must be ignored when serializing the output of an operation",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "body": "<IgnoreQueryParamsInResponseOutput><baz>bam</baz></IgnoreQueryParamsInResponseOutput>",
                        "bodyMediaType": "application/xml",
                        "params": {
                            "baz": "bam"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#IgnoreQueryParamsInResponseOutput": {
            "type": "structure",
            "members": {
                "baz": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "baz"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#InputAndOutputWithHeaders": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#InputAndOutputWithHeadersIO"
            },
            "output": {
                "target": "aws.protocoltests.restxml#InputAndOutputWithHeadersIO"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how requests and responses are serialized when there is\nno input or output payload but there are HTTP header bindings.",
                "smithy.api#http": {
                    "uri": "/InputAndOutputWithHeaders",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "InputAndOutputWithStringHeaders",
                        "documentation": "Tests requests with string header bindings",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "headers": {
                            "X-String": "Hello",
                            "X-StringList": "a, b, c",
                            "X-StringSet": "a, b, c"
                        },
                        "body": "",
                        "params": {
                            "headerString": "Hello",
                            "headerStringList": [
                                "a",
                                "b",
                                "c"
                            ],
                            "headerStringSet": [
                                "a",
                                "b",
                                "c"
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithNumericHeaders",
                        "documentation": "Tests requests with numeric header bindings",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "headers": {
                            "X-Byte": "1",
                            "X-Short": "123",
                            "X-Integer": "123",
                            "X-Long": "123",
                            "X-Float": "1.1",
                            "X-Double": "1.1",
                            "X-IntegerList": "1, 2, 3"
                        },
                        "body": "",
                        "params": {
                            "headerByte": 1,
                            "headerShort": 123,
                            "headerInteger": 123,
                            "headerLong": 123,
                            "headerFloat": 1.1,
                            "headerDouble": 1.1,
                            "headerIntegerList": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithBooleanHeaders",
                        "documentation": "Tests requests with boolean header bindings",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "headers": {
                            "X-Boolean1": "true",
                            "X-Boolean2": "false",
                            "X-BooleanList": "true, false, true"
                        },
                        "body": "",
                        "params": {
                            "headerTrueBool": true,
                            "headerFalseBool": false,
                            "headerBooleanList": [
                                true,
                                false,
                                true
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithTimestampHeaders",
                        "documentation": "Tests requests with timestamp header bindings",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "headers": {
                            "X-TimestampList": "Mon, 16 Dec 2019 23:48:18 GMT, Mon, 16 Dec 2019 23:48:18 GMT"
                        },
                        "body": "",
                        "params": {
                            "headerTimestampList": [
                                1576540098,
                                1576540098
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithEnumHeaders",
                        "documentation": "Tests requests with enum header bindings",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "headers": {
                            "X-Enum": "Foo",
                            "X-EnumList": "Foo, Bar, Baz"
                        },
                        "body": "",
                        "params": {
                            "headerEnum": "Foo",
                            "headerEnumList": [
                                "Foo",
                                "Bar",
                                "Baz"
                            ]
                        }
                    },
                    {
                        "id": "RestXmlSupportsNaNFloatHeaderInputs",
                        "documentation": "Supports handling NaN float header values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "body": "",
                        "headers": {
                            "X-Float": "NaN",
                            "X-Double": "NaN"
                        },
                        "params": {
                            "headerFloat": "NaN",
                            "headerDouble": "NaN"
                        }
                    },
                    {
                        "id": "RestXmlSupportsInfinityFloatHeaderInputs",
                        "documentation": "Supports handling Infinity float header values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "body": "",
                        "headers": {
                            "X-Float": "Infinity",
                            "X-Double": "Infinity"
                        },
                        "params": {
                            "headerFloat": "Infinity",
                            "headerDouble": "Infinity"
                        }
                    },
                    {
                        "id": "RestXmlSupportsNegativeInfinityFloatHeaderInputs",
                        "documentation": "Supports handling -Infinity float header values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/InputAndOutputWithHeaders",
                        "body": "",
                        "headers": {
                            "X-Float": "-Infinity",
                            "X-Double": "-Infinity"
                        },
                        "params": {
                            "headerFloat": "-Infinity",
                            "headerDouble": "-Infinity"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "InputAndOutputWithStringHeaders",
                        "documentation": "Tests responses with string header bindings",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-String": "Hello",
                            "X-StringList": "a, b, c",
                            "X-StringSet": "a, b, c"
                        },
                        "body": "",
                        "params": {
                            "headerString": "Hello",
                            "headerStringList": [
                                "a",
                                "b",
                                "c"
                            ],
                            "headerStringSet": [
                                "a",
                                "b",
                                "c"
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithNumericHeaders",
                        "documentation": "Tests responses with numeric header bindings",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-Byte": "1",
                            "X-Short": "123",
                            "X-Integer": "123",
                            "X-Long": "123",
                            "X-Float": "1.1",
                            "X-Double": "1.1",
                            "X-IntegerList": "1, 2, 3"
                        },
                        "body": "",
                        "params": {
                            "headerByte": 1,
                            "headerShort": 123,
                            "headerInteger": 123,
                            "headerLong": 123,
                            "headerFloat": 1.1,
                            "headerDouble": 1.1,
                            "headerIntegerList": [
                                1,
                                2,
                                3
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithBooleanHeaders",
                        "documentation": "Tests responses with boolean header bindings",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-Boolean1": "true",
                            "X-Boolean2": "false",
                            "X-BooleanList": "true, false, true"
                        },
                        "body": "",
                        "params": {
                            "headerTrueBool": true,
                            "headerFalseBool": false,
                            "headerBooleanList": [
                                true,
                                false,
                                true
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithTimestampHeaders",
                        "documentation": "Tests responses with timestamp header bindings",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-TimestampList": "Mon, 16 Dec 2019 23:48:18 GMT, Mon, 16 Dec 2019 23:48:18 GMT"
                        },
                        "body": "",
                        "params": {
                            "headerTimestampList": [
                                1576540098,
                                1576540098
                            ]
                        }
                    },
                    {
                        "id": "InputAndOutputWithEnumHeaders",
                        "documentation": "Tests responses with enum header bindings",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-Enum": "Foo",
                            "X-EnumList": "Foo, Bar, Baz"
                        },
                        "body": "",
                        "params": {
                            "headerEnum": "Foo",
                            "headerEnumList": [
                                "Foo",
                                "Bar",
                                "Baz"
                            ]
                        }
                    },
                    {
                        "id": "RestXmlSupportsNaNFloatHeaderOutputs",
                        "documentation": "Supports handling NaN float header values.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-Float": "NaN",
                            "X-Double": "NaN"
                        },
                        "body": "",
                        "params": {
                            "headerFloat": "NaN",
                            "headerDouble": "NaN"
                        }
                    },
                    {
                        "id": "RestXmlSupportsInfinityFloatHeaderOutputs",
                        "documentation": "Supports handling Infinity float header values.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-Float": "Infinity",
                            "X-Double": "Infinity"
                        },
                        "body": "",
                        "params": {
                            "headerFloat": "Infinity",
                            "headerDouble": "Infinity"
                        }
                    },
                    {
                        "id": "RestXmlSupportsNegativeInfinityFloatHeaderOutputs",
                        "documentation": "Supports handling -Infinity float header values.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-Float": "-Infinity",
                            "X-Double": "-Infinity"
                        },
                        "body": "",
                        "params": {
                            "headerFloat": "-Infinity",
                            "headerDouble": "-Infinity"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#InputAndOutputWithHeadersIO": {
            "type": "structure",
            "members": {
                "headerString": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-String"
                    }
                },
                "headerByte": {
                    "target": "smithy.api#Byte",
                    "traits": {
                        "smithy.api#httpHeader": "X-Byte"
                    }
                },
                "headerShort": {
                    "target": "smithy.api#Short",
                    "traits": {
                        "smithy.api#httpHeader": "X-Short"
                    }
                },
                "headerInteger": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#httpHeader": "X-Integer"
                    }
                },
                "headerLong": {
                    "target": "smithy.api#Long",
                    "traits": {
                        "smithy.api#httpHeader": "X-Long"
                    }
                },
                "headerFloat": {
                    "target": "smithy.api#Float",
                    "traits": {
                        "smithy.api#httpHeader": "X-Float"
                    }
                },
                "headerDouble": {
                    "target": "smithy.api#Double",
                    "traits": {
                        "smithy.api#httpHeader": "X-Double"
                    }
                },
                "headerTrueBool": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#httpHeader": "X-Boolean1"
                    }
                },
                "headerFalseBool": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#httpHeader": "X-Boolean2"
                    }
                },
                "headerStringList": {
                    "target": "aws.protocoltests.shared#StringList",
                    "traits": {
                        "smithy.api#httpHeader": "X-StringList"
                    }
                },
                "headerStringSet": {
                    "target": "aws.protocoltests.shared#StringSet",
                    "traits": {
                        "smithy.api#httpHeader": "X-StringSet"
                    }
                },
                "headerIntegerList": {
                    "target": "aws.protocoltests.shared#IntegerList",
                    "traits": {
                        "smithy.api#httpHeader": "X-IntegerList"
                    }
                },
                "headerBooleanList": {
                    "target": "aws.protocoltests.shared#BooleanList",
                    "traits": {
                        "smithy.api#httpHeader": "X-BooleanList"
                    }
                },
                "headerTimestampList": {
                    "target": "aws.protocoltests.shared#TimestampList",
                    "traits": {
                        "smithy.api#httpHeader": "X-TimestampList"
                    }
                },
                "headerEnum": {
                    "target": "aws.protocoltests.shared#FooEnum",
                    "traits": {
                        "smithy.api#httpHeader": "X-Enum"
                    }
                },
                "headerEnumList": {
                    "target": "aws.protocoltests.shared#FooEnumList",
                    "traits": {
                        "smithy.api#httpHeader": "X-EnumList"
                    }
                }
            }
        },
        "aws.protocoltests.shared#IntegerList": {
            "type": "list",
            "member": {
                "target": "smithy.api#Integer"
            }
        },
        "aws.protocoltests.shared#IntegerSet": {
            "type": "list",
            "member": {
                "target": "smithy.api#Integer"
            },
            "traits": {
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.apigateway#IntegrationResponse": {
            "type": "structure",
            "members": {
                "statusCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "HTTP status code for the method response; for example, \"200\". This must correspond to a matching response in the OpenAPI Operation responses field."
                    }
                },
                "contentHandling": {
                    "target": "aws.apigateway#ContentHandling"
                },
                "responseTemplates": {
                    "target": "aws.apigateway#Templates"
                },
                "responseParameters": {
                    "target": "aws.apigateway#ResponseParameters"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines a response and specifies parameter mappings.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationResponses": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.apigateway#IntegrationResponse"
            },
            "traits": {
                "smithy.api#documentation": "A map of response identifiers to responses.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationType": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "aws",
                        "name": "AWS"
                    },
                    {
                        "value": "aws_proxy",
                        "name": "AWS_PROXY"
                    },
                    {
                        "value": "http",
                        "name": "HTTP"
                    },
                    {
                        "value": "http_proxy",
                        "name": "HTTP_PROXY"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#InvalidGreeting": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "This error is thrown when an invalid greeting value is provided.",
                "smithy.api#error": "client",
                "smithy.api#httpError": 400,
                "smithy.test#httpResponseTests": [
                    {
                        "id": "InvalidGreetingError",
                        "documentation": "Parses simple XML errors",
                        "protocol": "aws.protocols#restXml",
                        "params": {
                            "Message": "Hi"
                        },
                        "code": 400,
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "body": "<ErrorResponse>\n   <Error>\n      <Type>Sender</Type>\n      <Code>InvalidGreeting</Code>\n      <Message>Hi</Message>\n      <AnotherSetting>setting</AnotherSetting>\n   </Error>\n   <RequestId>foo-id</RequestId>\n</ErrorResponse>\n",
                        "bodyMediaType": "application/xml"
                    }
                ]
            }
        },
        "com.amazonaws.s3#IsTruncated": {
            "type": "boolean"
        },
        "aws.protocoltests.shared#JpegBlob": {
            "type": "blob",
            "traits": {
                "smithy.api#mediaType": "image/jpeg"
            }
        },
        "com.amazonaws.s3#KeyCount": {
            "type": "integer"
        },
        "com.amazonaws.s3#LastModified": {
            "type": "timestamp"
        },
        "com.amazonaws.s3#ListObjectsV2": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.s3#ListObjectsV2Request"
            },
            "output": {
                "target": "com.amazonaws.s3#ListObjectsV2Output"
            },
            "errors": [
                {
                    "target": "com.amazonaws.s3#NoSuchBucket"
                }
            ],
            "traits": {
                "smithy.api#http": {
                    "method": "GET",
                    "uri": "/{Bucket}?list-type=2",
                    "code": 200
                },
                "smithy.api#paginated": {
                    "inputToken": "ContinuationToken",
                    "outputToken": "NextContinuationToken",
                    "pageSize": "MaxKeys"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "S3DefaultAddressing",
                        "documentation": "S3 clients should map the default addressing style to virtual host.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "mybucket.s3.us-west-2.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2"
                                }
                            }
                        }
                    },
                    {
                        "id": "S3VirtualHostAddressing",
                        "documentation": "S3 clients should support the explicit virtual host addressing style.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "mybucket.s3.us-west-2.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2",
                                    "s3": {
                                        "addressing_style": "virtual"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "S3PathAddressing",
                        "documentation": "S3 clients should support the explicit path addressing style.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/mybucket",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "s3.us-west-2.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2",
                                    "s3": {
                                        "addressing_style": "path"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "S3VirtualHostDualstackAddressing",
                        "documentation": "S3 clients should support the explicit virtual host\naddressing style with Dualstack.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "mybucket.s3.dualstack.us-west-2.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2",
                                    "s3": {
                                        "addressing_style": "virtual",
                                        "use_dualstack_endpoint": true
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "S3VirtualHostAccelerateAddressing",
                        "documentation": "S3 clients should support the explicit virtual host\naddressing style with S3 Accelerate.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "mybucket.s3-accelerate.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2",
                                    "s3": {
                                        "addressing_style": "virtual",
                                        "use_accelerate_endpoint": true
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "S3VirtualHostDualstackAccelerateAddressing",
                        "documentation": "S3 clients should support the explicit virtual host\naddressing style with Dualstack and S3 Accelerate.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "mybucket.s3-accelerate.dualstack.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2",
                                    "s3": {
                                        "addressing_style": "virtual",
                                        "use_dualstack_endpoint": true,
                                        "use_accelerate_endpoint": true
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "S3OperationAddressingPreferred",
                        "documentation": "S3 clients should resolve to the addressing style of the\noperation if defined on both the client and operation.",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/",
                        "host": "s3.us-west-2.amazonaws.com",
                        "resolvedHost": "mybucket.s3.us-west-2.amazonaws.com",
                        "body": "",
                        "queryParams": [
                            "list-type=2"
                        ],
                        "params": {
                            "Bucket": "mybucket"
                        },
                        "vendorParamsShape": "aws.protocoltests.config#AwsConfig",
                        "vendorParams": {
                            "scopedConfig": {
                                "client": {
                                    "region": "us-west-2",
                                    "s3": {
                                        "addressing_style": "path"
                                    }
                                },
                                "operation": {
                                    "s3": {
                                        "addressing_style": "virtual"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "com.amazonaws.s3#ListObjectsV2Output": {
            "type": "structure",
            "members": {
                "IsTruncated": {
                    "target": "com.amazonaws.s3#IsTruncated"
                },
                "Contents": {
                    "target": "com.amazonaws.s3#ObjectList",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                },
                "Name": {
                    "target": "com.amazonaws.s3#BucketName"
                },
                "Prefix": {
                    "target": "com.amazonaws.s3#Prefix"
                },
                "Delimiter": {
                    "target": "com.amazonaws.s3#Delimiter"
                },
                "MaxKeys": {
                    "target": "com.amazonaws.s3#MaxKeys"
                },
                "CommonPrefixes": {
                    "target": "com.amazonaws.s3#CommonPrefixList",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                },
                "EncodingType": {
                    "target": "com.amazonaws.s3#EncodingType"
                },
                "KeyCount": {
                    "target": "com.amazonaws.s3#KeyCount"
                },
                "ContinuationToken": {
                    "target": "com.amazonaws.s3#Token"
                },
                "NextContinuationToken": {
                    "target": "com.amazonaws.s3#NextToken"
                },
                "StartAfter": {
                    "target": "com.amazonaws.s3#StartAfter"
                }
            }
        },
        "com.amazonaws.s3#ListObjectsV2Request": {
            "type": "structure",
            "members": {
                "Bucket": {
                    "target": "com.amazonaws.s3#BucketName",
                    "traits": {
                        "smithy.api#httpLabel": {},
                        "smithy.api#required": {}
                    }
                },
                "Delimiter": {
                    "target": "com.amazonaws.s3#Delimiter",
                    "traits": {
                        "smithy.api#httpQuery": "delimiter"
                    }
                },
                "EncodingType": {
                    "target": "com.amazonaws.s3#EncodingType",
                    "traits": {
                        "smithy.api#httpQuery": "encoding-type"
                    }
                },
                "MaxKeys": {
                    "target": "com.amazonaws.s3#MaxKeys",
                    "traits": {
                        "smithy.api#httpQuery": "max-keys"
                    }
                },
                "Prefix": {
                    "target": "com.amazonaws.s3#Prefix",
                    "traits": {
                        "smithy.api#httpQuery": "prefix"
                    }
                },
                "ContinuationToken": {
                    "target": "com.amazonaws.s3#Token",
                    "traits": {
                        "smithy.api#httpQuery": "continuation-token"
                    }
                },
                "FetchOwner": {
                    "target": "com.amazonaws.s3#FetchOwner",
                    "traits": {
                        "smithy.api#httpQuery": "fetch-owner"
                    }
                },
                "StartAfter": {
                    "target": "com.amazonaws.s3#StartAfter",
                    "traits": {
                        "smithy.api#httpQuery": "start-after"
                    }
                },
                "RequestPayer": {
                    "target": "com.amazonaws.s3#RequestPayer",
                    "traits": {
                        "smithy.api#httpHeader": "x-amz-request-payer"
                    }
                },
                "ExpectedBucketOwner": {
                    "target": "com.amazonaws.s3#AccountId",
                    "traits": {
                        "smithy.api#httpHeader": "x-amz-expected-bucket-owner"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#ListWithMemberNamespace": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlNamespace": {
                        "uri": "https://xml-member.example.com"
                    }
                }
            },
            "traits": {
                "smithy.api#xmlNamespace": {
                    "uri": "https://xml-list.example.com"
                }
            }
        },
        "aws.protocoltests.restxml#ListWithNamespace": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#xmlNamespace": {
                    "uri": "https://xml-list.example.com"
                }
            }
        },
        "com.amazonaws.s3#MaxKeys": {
            "type": "integer"
        },
        "aws.protocoltests.restxml#NestedMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.shared#FooEnumMap"
            }
        },
        "aws.protocoltests.restxml#NestedPayload": {
            "type": "structure",
            "members": {
                "greeting": {
                    "target": "smithy.api#String"
                },
                "name": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.protocoltests.shared#NestedStringList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#StringList"
            },
            "traits": {
                "smithy.api#documentation": "A list of lists of strings."
            }
        },
        "aws.protocoltests.restxml#NestedXmlMaps": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#NestedXmlMapsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#NestedXmlMapsInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/NestedXmlMaps",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "NestedXmlMapRequest",
                        "documentation": "Tests requests with nested maps.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/NestedXmlMaps",
                        "body": "<NestedXmlMapsInputOutput>\n    <nestedMap>\n        <entry>\n            <key>foo</key>\n            <value>\n                <entry>\n                    <key>bar</key>\n                    <value>Bar</value>\n                </entry>\n            </value>\n        </entry>\n    </nestedMap>\n</NestedXmlMapsInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nestedMap": {
                                "foo": {
                                    "bar": "Bar"
                                }
                            }
                        }
                    },
                    {
                        "id": "FlatNestedXmlMapRequest",
                        "documentation": "Tests requests with nested flat maps. Since maps can only be\nflattened when they're structure members, only the outer map is flat.",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/NestedXmlMaps",
                        "body": "<NestedXmlMapsInputOutput>\n    <flatNestedMap>\n        <key>foo</key>\n        <value>\n            <entry>\n                <key>bar</key>\n                <value>Bar</value>\n            </entry>\n        </value>\n    </flatNestedMap>\n</NestedXmlMapsInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "flatNestedMap": {
                                "foo": {
                                    "bar": "Bar"
                                }
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "NestedXmlMapResponse",
                        "documentation": "Tests responses with nested maps.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<NestedXmlMapsInputOutput>\n    <nestedMap>\n        <entry>\n            <key>foo</key>\n            <value>\n                <entry>\n                    <key>bar</key>\n                    <value>Bar</value>\n                </entry>\n            </value>\n        </entry>\n    </nestedMap>\n</NestedXmlMapsInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nestedMap": {
                                "foo": {
                                    "bar": "Bar"
                                }
                            }
                        }
                    },
                    {
                        "id": "FlatNestedXmlMapResponse",
                        "documentation": "Tests responses with nested flat maps. Since maps can only be\nflattened when they're structure members, only the outer map is flat.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<NestedXmlMapsInputOutput>\n    <flatNestedMap>\n        <key>foo</key>\n        <value>\n            <entry>\n                <key>bar</key>\n                <value>Bar</value>\n            </entry>\n        </value>\n    </flatNestedMap>\n</NestedXmlMapsInputOutput>",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "flatNestedMap": {
                                "foo": {
                                    "bar": "Bar"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#NestedXmlMapsInputOutput": {
            "type": "structure",
            "members": {
                "nestedMap": {
                    "target": "aws.protocoltests.restxml#NestedMap"
                },
                "flatNestedMap": {
                    "target": "aws.protocoltests.restxml#NestedMap",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                }
            }
        },
        "com.amazonaws.s3#NextToken": {
            "type": "string"
        },
        "aws.protocoltests.restxml#NoInputAndNoOutput": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how requests and responses are serialized when there's\nno request or response payload because the operation has no input or output.\nWhile this should be rare, code generators must support this.",
                "smithy.api#http": {
                    "uri": "/NoInputAndNoOutput",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "NoInputAndNoOutput",
                        "documentation": "No input serializes no payload",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/NoInputAndNoOutput",
                        "body": ""
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "NoInputAndNoOutput",
                        "documentation": "No output serializes no payload",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": ""
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#NoInputAndOutput": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "aws.protocoltests.restxml#NoInputAndOutputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how requests and responses are serialized when there's\nno request or response payload because the operation has no input and the\noutput is empty. While this should be rare, code generators must support\nthis.",
                "smithy.api#http": {
                    "uri": "/NoInputAndOutputOutput",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "NoInputAndOutput",
                        "documentation": "No input serializes no payload",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/NoInputAndOutputOutput",
                        "body": ""
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "NoInputAndOutput",
                        "documentation": "Empty output serializes no payload",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": ""
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#NoInputAndOutputOutput": {
            "type": "structure",
            "members": {}
        },
        "com.amazonaws.s3#NoSuchBucket": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#error": "client"
            }
        },
        "smithy.test#NonEmptyString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.test#NonEmptyStringList": {
            "type": "list",
            "member": {
                "target": "smithy.test#NonEmptyString"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#NullAndEmptyHeadersClient": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#NullAndEmptyHeadersIO"
            },
            "output": {
                "target": "aws.protocoltests.restxml#NullAndEmptyHeadersIO"
            },
            "traits": {
                "smithy.api#documentation": "Null and empty headers are not sent over the wire.",
                "smithy.api#http": {
                    "uri": "/NullAndEmptyHeadersClient",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpRequestTests": [
                    {
                        "id": "NullAndEmptyHeaders",
                        "documentation": "Do not send null values, empty strings, or empty lists over the wire in headers",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/NullAndEmptyHeadersClient",
                        "forbidHeaders": [
                            "X-A",
                            "X-B",
                            "X-C"
                        ],
                        "body": "",
                        "params": {
                            "a": null,
                            "b": "",
                            "c": []
                        },
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#NullAndEmptyHeadersIO": {
            "type": "structure",
            "members": {
                "a": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-A"
                    }
                },
                "b": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-B"
                    }
                },
                "c": {
                    "target": "aws.protocoltests.shared#StringList",
                    "traits": {
                        "smithy.api#httpHeader": "X-C"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#NullAndEmptyHeadersServer": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#NullAndEmptyHeadersIO"
            },
            "output": {
                "target": "aws.protocoltests.restxml#NullAndEmptyHeadersIO"
            },
            "traits": {
                "smithy.api#documentation": "Null and empty headers are not sent over the wire.",
                "smithy.api#http": {
                    "uri": "/NullAndEmptyHeadersServer",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.api#tags": [
                    "server-only"
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "NullAndEmptyHeaders",
                        "documentation": "Do not send null or empty headers",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "forbidHeaders": [
                            "X-A",
                            "X-B",
                            "X-C"
                        ],
                        "body": "",
                        "params": {
                            "a": null,
                            "b": "",
                            "c": []
                        },
                        "appliesTo": "server"
                    }
                ]
            }
        },
        "com.amazonaws.s3#Object": {
            "type": "structure",
            "members": {
                "Key": {
                    "target": "com.amazonaws.s3#ObjectKey"
                },
                "LastModified": {
                    "target": "com.amazonaws.s3#LastModified"
                },
                "ETag": {
                    "target": "com.amazonaws.s3#ETag"
                },
                "Size": {
                    "target": "com.amazonaws.s3#Size"
                },
                "StorageClass": {
                    "target": "com.amazonaws.s3#ObjectStorageClass"
                },
                "Owner": {
                    "target": "com.amazonaws.s3#Owner"
                }
            }
        },
        "com.amazonaws.s3#ObjectKey": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                }
            }
        },
        "com.amazonaws.s3#ObjectList": {
            "type": "list",
            "member": {
                "target": "com.amazonaws.s3#Object"
            }
        },
        "com.amazonaws.s3#ObjectStorageClass": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "STANDARD",
                        "name": "STANDARD"
                    },
                    {
                        "value": "REDUCED_REDUNDANCY",
                        "name": "REDUCED_REDUNDANCY"
                    },
                    {
                        "value": "GLACIER",
                        "name": "GLACIER"
                    },
                    {
                        "value": "STANDARD_IA",
                        "name": "STANDARD_IA"
                    },
                    {
                        "value": "ONEZONE_IA",
                        "name": "ONEZONE_IA"
                    },
                    {
                        "value": "INTELLIGENT_TIERING",
                        "name": "INTELLIGENT_TIERING"
                    },
                    {
                        "value": "DEEP_ARCHIVE",
                        "name": "DEEP_ARCHIVE"
                    },
                    {
                        "value": "OUTPOSTS",
                        "name": "OUTPOSTS"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#OmitsNullSerializesEmptyString": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#OmitsNullSerializesEmptyStringInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "Omits null, but serializes empty string value.",
                "smithy.api#http": {
                    "uri": "/OmitsNullSerializesEmptyString",
                    "method": "GET"
                },
                "smithy.api#readonly": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlOmitsNullQuery",
                        "documentation": "Omits null query values",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/OmitsNullSerializesEmptyString",
                        "body": "",
                        "params": {
                            "nullValue": null
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "RestXmlSerializesEmptyString",
                        "documentation": "Serializes empty query strings",
                        "protocol": "aws.protocols#restXml",
                        "method": "GET",
                        "uri": "/OmitsNullSerializesEmptyString",
                        "body": "",
                        "queryParams": [
                            "Empty="
                        ],
                        "params": {
                            "emptyString": ""
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#OmitsNullSerializesEmptyStringInput": {
            "type": "structure",
            "members": {
                "nullValue": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "Null"
                    }
                },
                "emptyString": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "Empty"
                    }
                }
            }
        },
        "aws.protocoltests.config#OperationConfig": {
            "type": "structure",
            "members": {
                "s3": {
                    "target": "aws.protocoltests.config#S3Config"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration that is set for the scope of a single operation."
            }
        },
        "com.amazonaws.s3#Owner": {
            "type": "structure",
            "members": {
                "DisplayName": {
                    "target": "com.amazonaws.s3#DisplayName"
                },
                "ID": {
                    "target": "com.amazonaws.s3#ID"
                }
            }
        },
        "aws.apigateway#PassThroughBehavior": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Defines the passThroughBehavior for the integration",
                "smithy.api#enum": [
                    {
                        "value": "when_no_templates",
                        "name": "WHEN_NO_TEMPLATES"
                    },
                    {
                        "value": "when_no_match",
                        "name": "WHEN_NO_MATCH"
                    },
                    {
                        "value": "never",
                        "name": "NEVER"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#PayloadWithXmlName": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#xmlName": "Hello"
            }
        },
        "aws.protocoltests.restxml#PayloadWithXmlNamespace": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#xmlNamespace": {
                    "uri": "http://foo.com"
                }
            }
        },
        "aws.protocoltests.restxml#PayloadWithXmlNamespaceAndPrefix": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#xmlNamespace": {
                    "uri": "http://foo.com",
                    "prefix": "baz"
                }
            }
        },
        "com.amazonaws.s3#Prefix": {
            "type": "string"
        },
        "aws.iam#PrincipalType": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "An IAM policy principal type.",
                "smithy.api#enum": [
                    {
                        "value": "Root",
                        "name": "ROOT"
                    },
                    {
                        "value": "IAMUser",
                        "name": "IAM_USER"
                    },
                    {
                        "value": "IAMRole",
                        "name": "IAM_ROLE"
                    },
                    {
                        "value": "FederatedUser",
                        "name": "FEDERATED_USER"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#QueryIdempotencyTokenAutoFill": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#QueryIdempotencyTokenAutoFillInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#documentation": "Automatically adds idempotency tokens.",
                "smithy.api#http": {
                    "uri": "/QueryIdempotencyTokenAutoFill",
                    "method": "POST"
                },
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpRequestTests": [
                    {
                        "id": "QueryIdempotencyTokenAutoFill",
                        "documentation": "Automatically adds idempotency token when not set",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/QueryIdempotencyTokenAutoFill",
                        "body": "",
                        "queryParams": [
                            "token=00000000-0000-4000-8000-000000000000"
                        ],
                        "appliesTo": "client"
                    },
                    {
                        "id": "QueryIdempotencyTokenAutoFillIsSet",
                        "documentation": "Uses the given idempotency token as-is",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/QueryIdempotencyTokenAutoFill",
                        "body": "",
                        "queryParams": [
                            "token=00000000-0000-4000-8000-000000000000"
                        ],
                        "params": {
                            "token": "00000000-0000-4000-8000-000000000000"
                        },
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#QueryIdempotencyTokenAutoFillInput": {
            "type": "structure",
            "members": {
                "token": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "token",
                        "smithy.api#idempotencyToken": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#QueryParamsAsStringListMap": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#QueryParamsAsStringListMapInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/StringListMap",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlQueryParamsStringListMap",
                        "documentation": "Serialize query params from map of list strings",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/StringListMap",
                        "body": "",
                        "queryParams": [
                            "corge=named",
                            "baz=bar",
                            "baz=qux"
                        ],
                        "params": {
                            "qux": "named",
                            "foo": {
                                "baz": [
                                    "bar",
                                    "qux"
                                ]
                            }
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "RestXmlServersQueryParamsStringListMap",
                        "documentation": "Servers put all query params in map",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/StringListMap",
                        "body": "",
                        "queryParams": [
                            "corge=named",
                            "baz=bar",
                            "baz=qux"
                        ],
                        "params": {
                            "qux": "named",
                            "foo": {
                                "corge": [
                                    "named"
                                ],
                                "baz": [
                                    "bar",
                                    "qux"
                                ]
                            }
                        },
                        "appliesTo": "server"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#QueryParamsAsStringListMapInput": {
            "type": "structure",
            "members": {
                "qux": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "corge"
                    }
                },
                "foo": {
                    "target": "aws.protocoltests.shared#StringListMap",
                    "traits": {
                        "smithy.api#httpQueryParams": {}
                    }
                }
            },
            "traits": {
                "smithy.api#suppress": [
                    "HttpQueryParamsTrait"
                ]
            }
        },
        "aws.protocoltests.restxml#QueryPrecedence": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#QueryPrecedenceInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/Precedence",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RestXmlQueryPrecedence",
                        "documentation": "Prefer named query parameters when serializing",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/Precedence",
                        "body": "",
                        "queryParams": [
                            "bar=named",
                            "qux=alsoFromMap"
                        ],
                        "params": {
                            "foo": "named",
                            "baz": {
                                "bar": "fromMap",
                                "qux": "alsoFromMap"
                            }
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "RestXmlServersPutAllQueryParamsInMap",
                        "documentation": "Servers put all query params in map",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/Precedence",
                        "body": "",
                        "queryParams": [
                            "bar=named",
                            "qux=fromMap"
                        ],
                        "params": {
                            "foo": "named",
                            "baz": {
                                "bar": "named",
                                "qux": "fromMap"
                            }
                        },
                        "appliesTo": "server"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#QueryPrecedenceInput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpQuery": "bar"
                    }
                },
                "baz": {
                    "target": "aws.protocoltests.shared#StringMap",
                    "traits": {
                        "smithy.api#httpQueryParams": {}
                    }
                }
            },
            "traits": {
                "smithy.api#suppress": [
                    "HttpQueryParamsTrait"
                ]
            }
        },
        "aws.protocoltests.restxml#RecursiveShapes": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#RecursiveShapesInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#RecursiveShapesInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "Recursive shapes",
                "smithy.api#http": {
                    "uri": "/RecursiveShapes",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "RecursiveShapes",
                        "documentation": "Serializes recursive structures",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/RecursiveShapes",
                        "body": "<RecursiveShapesInputOutput>\n    <nested>\n        <foo>Foo1</foo>\n        <nested>\n            <bar>Bar1</bar>\n            <recursiveMember>\n                <foo>Foo2</foo>\n                <nested>\n                    <bar>Bar2</bar>\n                </nested>\n            </recursiveMember>\n        </nested>\n    </nested>\n</RecursiveShapesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "foo": "Foo1",
                                "nested": {
                                    "bar": "Bar1",
                                    "recursiveMember": {
                                        "foo": "Foo2",
                                        "nested": {
                                            "bar": "Bar2"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "RecursiveShapes",
                        "documentation": "Serializes recursive structures",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<RecursiveShapesInputOutput>\n    <nested>\n        <foo>Foo1</foo>\n        <nested>\n            <bar>Bar1</bar>\n            <recursiveMember>\n                <foo>Foo2</foo>\n                <nested>\n                    <bar>Bar2</bar>\n                </nested>\n            </recursiveMember>\n        </nested>\n    </nested>\n</RecursiveShapesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "foo": "Foo1",
                                "nested": {
                                    "bar": "Bar1",
                                    "recursiveMember": {
                                        "foo": "Foo2",
                                        "nested": {
                                            "bar": "Bar2"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#RecursiveShapesInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#RecursiveShapesInputOutputNested1"
                }
            }
        },
        "aws.protocoltests.restxml#RecursiveShapesInputOutputNested1": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String"
                },
                "nested": {
                    "target": "aws.protocoltests.restxml#RecursiveShapesInputOutputNested2"
                }
            }
        },
        "aws.protocoltests.restxml#RecursiveShapesInputOutputNested2": {
            "type": "structure",
            "members": {
                "bar": {
                    "target": "smithy.api#String"
                },
                "recursiveMember": {
                    "target": "aws.protocoltests.restxml#RecursiveShapesInputOutputNested1"
                }
            }
        },
        "aws.protocoltests.restxml#RenamedListMembers": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlName": "item"
                }
            }
        },
        "aws.apigateway#RequestParameters": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "<p>A mapping of integration request parameters to the API Gateway data mapping expression that should be used to populate the parameter.</p> <p><strong>Note:</strong> This feature is provided primarily to allow injecting static values and context variables for request parameters. Request data MAY be mapped to headers using the syntax described in <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html#mapping-response-parameters\">the API Gateway Developer Guide</a>; however, the data must be identified according to its location in the serialized request, which may differ from protocol to protocol. Here be dragons!</p>",
                "smithy.api#private": {}
            }
        },
        "com.amazonaws.s3#RequestPayer": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "requester",
                        "name": "requester"
                    }
                ]
            }
        },
        "aws.apigateway#ResponseParameters": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "Specifies parameter mappings for the response. Only the header and body parameters of the integration response can be mapped to the header parameters of the method.",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#RestXml": {
            "type": "service",
            "traits": {
                "aws.api#service": {
                    "sdkId": "Rest Xml Protocol"
                },
                "aws.protocols#restXml": {},
                "smithy.api#documentation": "A REST XML service that sends XML requests and responses."
            },
            "version": "2019-12-16",
            "operations": [
                {
                    "target": "aws.protocoltests.restxml#AllQueryStringTypes"
                },
                {
                    "target": "aws.protocoltests.restxml#BodyWithXmlName"
                },
                {
                    "target": "aws.protocoltests.restxml#ConstantAndVariableQueryString"
                },
                {
                    "target": "aws.protocoltests.restxml#ConstantQueryString"
                },
                {
                    "target": "aws.protocoltests.restxml#EmptyInputAndEmptyOutput"
                },
                {
                    "target": "aws.protocoltests.restxml#EndpointOperation"
                },
                {
                    "target": "aws.protocoltests.restxml#EndpointWithHostLabelHeaderOperation"
                },
                {
                    "target": "aws.protocoltests.restxml#EndpointWithHostLabelOperation"
                },
                {
                    "target": "aws.protocoltests.restxml#FlattenedXmlMap"
                },
                {
                    "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlName"
                },
                {
                    "target": "aws.protocoltests.restxml#FlattenedXmlMapWithXmlNamespace"
                },
                {
                    "target": "aws.protocoltests.restxml#GreetingWithErrors"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadTraits"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadTraitsWithMediaType"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadWithMemberXmlName"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadWithStructure"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadWithXmlName"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNamespace"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPayloadWithXmlNamespaceAndPrefix"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpPrefixHeaders"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpRequestWithFloatLabels"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpRequestWithGreedyLabelInPath"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpRequestWithLabels"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpRequestWithLabelsAndTimestampFormat"
                },
                {
                    "target": "aws.protocoltests.restxml#HttpResponseCode"
                },
                {
                    "target": "aws.protocoltests.restxml#IgnoreQueryParamsInResponse"
                },
                {
                    "target": "aws.protocoltests.restxml#InputAndOutputWithHeaders"
                },
                {
                    "target": "aws.protocoltests.restxml#NestedXmlMaps"
                },
                {
                    "target": "aws.protocoltests.restxml#NoInputAndNoOutput"
                },
                {
                    "target": "aws.protocoltests.restxml#NoInputAndOutput"
                },
                {
                    "target": "aws.protocoltests.restxml#NullAndEmptyHeadersClient"
                },
                {
                    "target": "aws.protocoltests.restxml#NullAndEmptyHeadersServer"
                },
                {
                    "target": "aws.protocoltests.restxml#OmitsNullSerializesEmptyString"
                },
                {
                    "target": "aws.protocoltests.restxml#QueryIdempotencyTokenAutoFill"
                },
                {
                    "target": "aws.protocoltests.restxml#QueryParamsAsStringListMap"
                },
                {
                    "target": "aws.protocoltests.restxml#QueryPrecedence"
                },
                {
                    "target": "aws.protocoltests.restxml#RecursiveShapes"
                },
                {
                    "target": "aws.protocoltests.restxml#SimpleScalarProperties"
                },
                {
                    "target": "aws.protocoltests.restxml#TimestampFormatHeaders"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlAttributes"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlAttributesOnPayload"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlBlobs"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlEmptyBlobs"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlEmptyLists"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlEmptyMaps"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlEmptyStrings"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlEnums"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlLists"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlMaps"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlMapsXmlName"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlNamespaces"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlTimestamps"
                },
                {
                    "target": "aws.protocoltests.restxml#XmlUnions"
                }
            ]
        },
        "aws.protocoltests.config#RetryConfig": {
            "type": "structure",
            "members": {
                "mode": {
                    "target": "aws.protocoltests.config#RetryMode"
                },
                "max_attempts": {
                    "target": "smithy.api#Short"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration specific to retries."
            }
        },
        "aws.protocoltests.config#RetryMode": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Controls the strategy used for retries.",
                "smithy.api#enum": [
                    {
                        "value": "legacy",
                        "name": "LEGACY"
                    },
                    {
                        "value": "standard",
                        "name": "STANDARD"
                    },
                    {
                        "value": "adaptive",
                        "name": "ADAPTIVE"
                    }
                ]
            }
        },
        "aws.protocoltests.config#S3AddressingStyle": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Controls the S3 addressing bucket style.",
                "smithy.api#enum": [
                    {
                        "value": "auto",
                        "name": "AUTO"
                    },
                    {
                        "value": "path",
                        "name": "PATH"
                    },
                    {
                        "value": "virtual",
                        "name": "VIRTUAL"
                    }
                ]
            }
        },
        "aws.protocoltests.config#S3Config": {
            "type": "structure",
            "members": {
                "addressing_style": {
                    "target": "aws.protocoltests.config#S3AddressingStyle"
                },
                "use_accelerate_endpoint": {
                    "target": "smithy.api#Boolean"
                },
                "use_dualstack_endpoint": {
                    "target": "smithy.api#Boolean"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration specific to S3."
            }
        },
        "aws.protocoltests.config#ScopedConfig": {
            "type": "structure",
            "members": {
                "environment": {
                    "target": "aws.protocoltests.config#EnvironmentConfig"
                },
                "configFile": {
                    "target": "aws.protocoltests.config#ConfigFile"
                },
                "credentialsFile": {
                    "target": "aws.protocoltests.config#ConfigFile"
                },
                "client": {
                    "target": "aws.protocoltests.config#ClientConfig"
                },
                "operation": {
                    "target": "aws.protocoltests.config#OperationConfig"
                }
            },
            "traits": {
                "smithy.api#documentation": "Config settings that are scoped to different sources, such as environment\nvariables or the AWS config file."
            }
        },
        "aws.protocoltests.restxml#SimpleScalarProperties": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#SimpleScalarPropertiesInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#SimpleScalarPropertiesInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/SimpleScalarProperties",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "SimpleScalarProperties",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>string</stringValue>\n    <trueBooleanValue>true</trueBooleanValue>\n    <falseBooleanValue>false</falseBooleanValue>\n    <byteValue>1</byteValue>\n    <shortValue>2</shortValue>\n    <integerValue>3</integerValue>\n    <longValue>4</longValue>\n    <floatValue>5.5</floatValue>\n    <DoubleDribble>6.5</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "string",
                            "trueBooleanValue": true,
                            "falseBooleanValue": false,
                            "byteValue": 1,
                            "shortValue": 2,
                            "integerValue": 3,
                            "longValue": 4,
                            "floatValue": 5.5,
                            "doubleValue": 6.5
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesWithEscapedCharacter",
                        "documentation": "Serializes string with escaping",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>&lt;string&gt;</stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "<string>"
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesWithWhiteSpace",
                        "documentation": "Serializes string containing white space",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>  string with white    space  </stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "  string with white    space  "
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesPureWhiteSpace",
                        "documentation": "Serializes string containing exclusively whitespace",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>   </stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "   "
                        }
                    },
                    {
                        "id": "RestXmlSupportsNaNFloatInputs",
                        "documentation": "Supports handling NaN float values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <floatValue>NaN</floatValue>\n    <DoubleDribble>NaN</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "floatValue": "NaN",
                            "doubleValue": "NaN"
                        }
                    },
                    {
                        "id": "RestXmlSupportsInfinityFloatInputs",
                        "documentation": "Supports handling Infinity float values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <floatValue>Infinity</floatValue>\n    <DoubleDribble>Infinity</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "floatValue": "Infinity",
                            "doubleValue": "Infinity"
                        }
                    },
                    {
                        "id": "RestXmlSupportsNegativeInfinityFloatInputs",
                        "documentation": "Supports handling -Infinity float values.",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/SimpleScalarProperties",
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <floatValue>-Infinity</floatValue>\n    <DoubleDribble>-Infinity</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "floatValue": "-Infinity",
                            "doubleValue": "-Infinity"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "SimpleScalarProperties",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>string</stringValue>\n    <trueBooleanValue>true</trueBooleanValue>\n    <falseBooleanValue>false</falseBooleanValue>\n    <byteValue>1</byteValue>\n    <shortValue>2</shortValue>\n    <integerValue>3</integerValue>\n    <longValue>4</longValue>\n    <floatValue>5.5</floatValue>\n    <DoubleDribble>6.5</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "string",
                            "trueBooleanValue": true,
                            "falseBooleanValue": false,
                            "byteValue": 1,
                            "shortValue": 2,
                            "integerValue": 3,
                            "longValue": 4,
                            "floatValue": 5.5,
                            "doubleValue": 6.5
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesComplexEscapes",
                        "documentation": "Serializes string with escaping.\n\nThis validates the three escape types: literal, decimal and hexadecimal. It also validates that unescaping properly\nhandles the case where unescaping an & produces a newly formed escape sequence (this should not be re-unescaped).\n\nServers may produce different output, this test is designed different unescapes clients must handle\n",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>escaped data: &amp;lt;&#xD;&#10;</stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "escaped data: &lt;\r\n"
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "SimpleScalarPropertiesWithEscapedCharacter",
                        "documentation": "Serializes string with escaping",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <stringValue>&lt;string&gt;</stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "<string>"
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesWithXMLPreamble",
                        "documentation": "Serializes simple scalar properties with xml preamble, comments and CDATA",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<SimpleScalarPropertiesInputOutput>\n    <![CDATA[characters representing CDATA]]>\n    <stringValue>string</stringValue>\n    <!--xml comment-->\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "string"
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesWithWhiteSpace",
                        "documentation": "Serializes string containing white space",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<SimpleScalarPropertiesInputOutput>\n    <stringValue> string with white    space </stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": " string with white    space "
                        }
                    },
                    {
                        "id": "SimpleScalarPropertiesPureWhiteSpace",
                        "documentation": "Serializes string containing white space",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<?xml version = \"1.0\" encoding = \"UTF-8\"?>\n<SimpleScalarPropertiesInputOutput>\n    <stringValue>  </stringValue>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml",
                            "X-Foo": "Foo"
                        },
                        "params": {
                            "foo": "Foo",
                            "stringValue": "  "
                        }
                    },
                    {
                        "id": "RestXmlSupportsNaNFloatOutputs",
                        "documentation": "Supports handling NaN float values.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <floatValue>NaN</floatValue>\n    <DoubleDribble>NaN</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "floatValue": "NaN",
                            "doubleValue": "NaN"
                        }
                    },
                    {
                        "id": "RestXmlSupportsInfinityFloatOutputs",
                        "documentation": "Supports handling Infinity float values.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <floatValue>Infinity</floatValue>\n    <DoubleDribble>Infinity</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "floatValue": "Infinity",
                            "doubleValue": "Infinity"
                        }
                    },
                    {
                        "id": "RestXmlSupportsNegativeInfinityFloatOutputs",
                        "documentation": "Supports handling -Infinity float values.",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<SimpleScalarPropertiesInputOutput>\n    <floatValue>-Infinity</floatValue>\n    <DoubleDribble>-Infinity</DoubleDribble>\n</SimpleScalarPropertiesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "floatValue": "-Infinity",
                            "doubleValue": "-Infinity"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#SimpleScalarPropertiesInputOutput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#httpHeader": "X-Foo"
                    }
                },
                "stringValue": {
                    "target": "smithy.api#String"
                },
                "trueBooleanValue": {
                    "target": "smithy.api#Boolean"
                },
                "falseBooleanValue": {
                    "target": "smithy.api#Boolean"
                },
                "byteValue": {
                    "target": "smithy.api#Byte"
                },
                "shortValue": {
                    "target": "smithy.api#Short"
                },
                "integerValue": {
                    "target": "smithy.api#Integer"
                },
                "longValue": {
                    "target": "smithy.api#Long"
                },
                "floatValue": {
                    "target": "smithy.api#Float"
                },
                "doubleValue": {
                    "target": "smithy.api#Double",
                    "traits": {
                        "smithy.api#xmlName": "DoubleDribble"
                    }
                }
            }
        },
        "com.amazonaws.s3#Size": {
            "type": "integer"
        },
        "aws.protocoltests.shared#SparseStringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#sparse": {}
            }
        },
        "aws.protocoltests.shared#SparseStringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#sparse": {}
            }
        },
        "com.amazonaws.s3#StartAfter": {
            "type": "string"
        },
        "smithy.test#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            }
        },
        "aws.auth#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            }
        },
        "aws.protocoltests.shared#StringListMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.shared#StringList"
            }
        },
        "aws.protocoltests.shared#StringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            }
        },
        "smithy.test#StringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#StringSet": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.cloudformation#StructureIdList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#idRef": {
                        "failWhenMissing": true,
                        "selector": "structure"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.restxml#StructureList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.restxml#StructureListMember",
                "traits": {
                    "smithy.api#xmlName": "item"
                }
            }
        },
        "aws.protocoltests.restxml#StructureListMember": {
            "type": "structure",
            "members": {
                "a": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#xmlName": "value"
                    }
                },
                "b": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#xmlName": "other"
                    }
                }
            }
        },
        "aws.apigateway#Templates": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "<p>A map of MIME types to velocity templates allowing you to craft a new integration message from received data.</p><p><strong>Note:</strong> This feature is provided primarily to allow injecting static values and context variables for request parameters. Request data MAY be mapped to headers using the syntax described in <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html#mapping-response-parameters\">the API Gateway Developer Guide</a>; however, the data must be identified according to its location in the serialized request, which may differ from protocol to protocol. Here be dragons!</p>",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#TextPlainBlob": {
            "type": "blob",
            "traits": {
                "smithy.api#mediaType": "text/plain"
            }
        },
        "aws.protocoltests.restxml#TimestampFormatHeaders": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#TimestampFormatHeadersIO"
            },
            "output": {
                "target": "aws.protocoltests.restxml#TimestampFormatHeadersIO"
            },
            "traits": {
                "smithy.api#documentation": "The example tests how timestamp request and response headers are serialized.",
                "smithy.api#http": {
                    "uri": "/TimestampFormatHeaders",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "TimestampFormatHeaders",
                        "documentation": "Tests how timestamp request headers are serialized",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/TimestampFormatHeaders",
                        "headers": {
                            "X-memberEpochSeconds": "1576540098",
                            "X-memberHttpDate": "Mon, 16 Dec 2019 23:48:18 GMT",
                            "X-memberDateTime": "2019-12-16T23:48:18Z",
                            "X-defaultFormat": "Mon, 16 Dec 2019 23:48:18 GMT",
                            "X-targetEpochSeconds": "1576540098",
                            "X-targetHttpDate": "Mon, 16 Dec 2019 23:48:18 GMT",
                            "X-targetDateTime": "2019-12-16T23:48:18Z"
                        },
                        "body": "",
                        "params": {
                            "memberEpochSeconds": 1576540098,
                            "memberHttpDate": 1576540098,
                            "memberDateTime": 1576540098,
                            "defaultFormat": 1576540098,
                            "targetEpochSeconds": 1576540098,
                            "targetHttpDate": 1576540098,
                            "targetDateTime": 1576540098
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "TimestampFormatHeaders",
                        "documentation": "Tests how timestamp response headers are serialized",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "headers": {
                            "X-memberEpochSeconds": "1576540098",
                            "X-memberHttpDate": "Mon, 16 Dec 2019 23:48:18 GMT",
                            "X-memberDateTime": "2019-12-16T23:48:18Z",
                            "X-defaultFormat": "Mon, 16 Dec 2019 23:48:18 GMT",
                            "X-targetEpochSeconds": "1576540098",
                            "X-targetHttpDate": "Mon, 16 Dec 2019 23:48:18 GMT",
                            "X-targetDateTime": "2019-12-16T23:48:18Z"
                        },
                        "body": "",
                        "params": {
                            "memberEpochSeconds": 1576540098,
                            "memberHttpDate": 1576540098,
                            "memberDateTime": 1576540098,
                            "defaultFormat": 1576540098,
                            "targetEpochSeconds": 1576540098,
                            "targetHttpDate": 1576540098,
                            "targetDateTime": 1576540098
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#TimestampFormatHeadersIO": {
            "type": "structure",
            "members": {
                "memberEpochSeconds": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpHeader": "X-memberEpochSeconds",
                        "smithy.api#timestampFormat": "epoch-seconds"
                    }
                },
                "memberHttpDate": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpHeader": "X-memberHttpDate",
                        "smithy.api#timestampFormat": "http-date"
                    }
                },
                "memberDateTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpHeader": "X-memberDateTime",
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "defaultFormat": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#httpHeader": "X-defaultFormat"
                    }
                },
                "targetEpochSeconds": {
                    "target": "aws.protocoltests.shared#EpochSeconds",
                    "traits": {
                        "smithy.api#httpHeader": "X-targetEpochSeconds"
                    }
                },
                "targetHttpDate": {
                    "target": "aws.protocoltests.shared#HttpDate",
                    "traits": {
                        "smithy.api#httpHeader": "X-targetHttpDate"
                    }
                },
                "targetDateTime": {
                    "target": "aws.protocoltests.shared#DateTime",
                    "traits": {
                        "smithy.api#httpHeader": "X-targetDateTime"
                    }
                }
            }
        },
        "aws.protocoltests.shared#TimestampList": {
            "type": "list",
            "member": {
                "target": "smithy.api#Timestamp"
            }
        },
        "com.amazonaws.s3#Token": {
            "type": "string"
        },
        "aws.protocoltests.restxml#XmlAttributes": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlAttributesInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlAttributesInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This example serializes an XML attributes on synthesized document.",
                "smithy.api#http": {
                    "uri": "/XmlAttributes",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlAttributes",
                        "documentation": "Serializes XML attributes on the synthesized document",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlAttributes",
                        "body": "<XmlAttributesInputOutput test=\"test\">\n    <foo>hi</foo>\n</XmlAttributesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "foo": "hi",
                            "attr": "test"
                        }
                    },
                    {
                        "id": "XmlAttributesWithEscaping",
                        "documentation": "Serializes XML attributes with escaped characters on the synthesized document",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlAttributes",
                        "body": "<XmlAttributesInputOutput test=\"&lt;test&amp;mock&gt;\">\n    <foo>hi</foo>\n</XmlAttributesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "foo": "hi",
                            "attr": "<test&mock>"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlAttributes",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlAttributesInputOutput test=\"test\">\n    <foo>hi</foo>\n</XmlAttributesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "foo": "hi",
                            "attr": "test"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlAttributesInputOutput": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String"
                },
                "attr": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#xmlAttribute": {},
                        "smithy.api#xmlName": "test"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#XmlAttributesOnPayload": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlAttributesOnPayloadInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlAttributesOnPayloadInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This example serializes an XML attributes on a document targeted by httpPayload.",
                "smithy.api#http": {
                    "uri": "/XmlAttributesOnPayload",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlAttributesOnPayload",
                        "documentation": "Serializes XML attributes on the synthesized document",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlAttributesOnPayload",
                        "body": "<XmlAttributesInputOutput test=\"test\">\n    <foo>hi</foo>\n</XmlAttributesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "payload": {
                                "foo": "hi",
                                "attr": "test"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlAttributesOnPayload",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlAttributesInputOutput test=\"test\">\n    <foo>hi</foo>\n</XmlAttributesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "payload": {
                                "foo": "hi",
                                "attr": "test"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlAttributesOnPayloadInputOutput": {
            "type": "structure",
            "members": {
                "payload": {
                    "target": "aws.protocoltests.restxml#XmlAttributesInputOutput",
                    "traits": {
                        "smithy.api#httpPayload": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#XmlBlobs": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlBlobsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlBlobsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "Blobs are base64 encoded",
                "smithy.api#http": {
                    "uri": "/XmlBlobs",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlBlobs",
                        "documentation": "Blobs are base64 encoded",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlBlobs",
                        "body": "<XmlBlobsInputOutput>\n    <data>dmFsdWU=</data>\n</XmlBlobsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "data": "value"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlBlobs",
                        "documentation": "Blobs are base64 encoded",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlBlobsInputOutput>\n    <data>dmFsdWU=</data>\n</XmlBlobsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "data": "value"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlBlobsInputOutput": {
            "type": "structure",
            "members": {
                "data": {
                    "target": "smithy.api#Blob"
                }
            }
        },
        "aws.protocoltests.restxml#XmlEmptyBlobs": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlBlobsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlBlobsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "Blobs are base64 encoded",
                "smithy.api#http": {
                    "uri": "/XmlEmptyBlobs",
                    "method": "POST"
                },
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlEmptyBlobs",
                        "documentation": "Empty blobs are deserialized as empty string",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlBlobsInputOutput>\n    <data></data>\n</XmlBlobsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "data": ""
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "XmlEmptySelfClosedBlobs",
                        "documentation": "Empty self closed blobs are deserialized as empty string",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlBlobsInputOutput>\n    <data/>\n</XmlBlobsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "data": ""
                        },
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlEmptyLists": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlListsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlListsInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/XmlEmptyLists",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlEmptyLists",
                        "documentation": "Serializes Empty XML lists",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlEmptyLists",
                        "body": "<XmlListsInputOutput>\n        <stringList></stringList>\n        <stringSet></stringSet>\n</XmlListsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "stringList": [],
                            "stringSet": []
                        },
                        "appliesTo": "client"
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlEmptyLists",
                        "documentation": "Deserializes Empty XML lists",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlListsInputOutput>\n        <stringList/>\n        <stringSet></stringSet>\n</XmlListsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "stringList": [],
                            "stringSet": []
                        },
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlEmptyMaps": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlMapsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlMapsInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/XmlEmptyMaps",
                    "method": "POST"
                },
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlEmptyMaps",
                        "documentation": "Serializes Empty XML maps",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlEmptyMaps",
                        "body": "<XmlMapsInputOutput>\n    <myMap></myMap>\n</XmlMapsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {}
                        },
                        "appliesTo": "client"
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlEmptyMaps",
                        "documentation": "Deserializes Empty XML maps",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlMapsInputOutput>\n    <myMap></myMap>\n</XmlMapsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {}
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "XmlEmptySelfClosedMaps",
                        "documentation": "Deserializes Empty Self-closed XML maps",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlMapsInputOutput>\n    <myMap/>\n</XmlMapsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {}
                        },
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlEmptyStrings": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlEmptyStringsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlEmptyStringsInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/XmlEmptyStrings",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlEmptyStrings",
                        "documentation": "Serializes xml empty strings",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlEmptyStrings",
                        "body": "<XmlEmptyStringsInputOutput>\n    <emptyString></emptyString>\n</XmlEmptyStringsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "emptyString": ""
                        },
                        "appliesTo": "client"
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlEmptyStrings",
                        "documentation": "Deserializes xml empty strings",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlEmptyStringsInputOutput>\n    <emptyString></emptyString>\n</XmlEmptyStringsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "emptyString": ""
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "XmlEmptySelfClosedStrings",
                        "documentation": "Empty self closed string are deserialized as empty string",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlEmptyStringsInputOutput>\n    <emptyString/>\n</XmlEmptyStringsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "emptyString": ""
                        },
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlEmptyStringsInputOutput": {
            "type": "structure",
            "members": {
                "emptyString": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.protocoltests.restxml#XmlEnums": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlEnumsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlEnumsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This example serializes enums as top level properties, in lists, sets, and maps.",
                "smithy.api#http": {
                    "uri": "/XmlEnums",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlEnums",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlEnums",
                        "body": "<XmlEnumsInputOutput>\n    <fooEnum1>Foo</fooEnum1>\n    <fooEnum2>0</fooEnum2>\n    <fooEnum3>1</fooEnum3>\n    <fooEnumList>\n        <member>Foo</member>\n        <member>0</member>\n    </fooEnumList>\n    <fooEnumSet>\n        <member>Foo</member>\n        <member>0</member>\n    </fooEnumSet>\n    <fooEnumMap>\n        <entry>\n            <key>hi</key>\n            <value>Foo</value>\n        </entry>\n        <entry>\n            <key>zero</key>\n            <value>0</value>\n        </entry>\n    </fooEnumMap>\n</XmlEnumsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "fooEnum1": "Foo",
                            "fooEnum2": "0",
                            "fooEnum3": "1",
                            "fooEnumList": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumSet": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumMap": {
                                "hi": "Foo",
                                "zero": "0"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlEnums",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlEnumsInputOutput>\n    <fooEnum1>Foo</fooEnum1>\n    <fooEnum2>0</fooEnum2>\n    <fooEnum3>1</fooEnum3>\n    <fooEnumList>\n        <member>Foo</member>\n        <member>0</member>\n    </fooEnumList>\n    <fooEnumSet>\n        <member>Foo</member>\n        <member>0</member>\n    </fooEnumSet>\n    <fooEnumMap>\n        <entry>\n            <key>hi</key>\n            <value>Foo</value>\n        </entry>\n        <entry>\n            <key>zero</key>\n            <value>0</value>\n        </entry>\n    </fooEnumMap>\n</XmlEnumsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "fooEnum1": "Foo",
                            "fooEnum2": "0",
                            "fooEnum3": "1",
                            "fooEnumList": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumSet": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumMap": {
                                "hi": "Foo",
                                "zero": "0"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlEnumsInputOutput": {
            "type": "structure",
            "members": {
                "fooEnum1": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "fooEnum2": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "fooEnum3": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "fooEnumList": {
                    "target": "aws.protocoltests.shared#FooEnumList"
                },
                "fooEnumSet": {
                    "target": "aws.protocoltests.shared#FooEnumSet"
                },
                "fooEnumMap": {
                    "target": "aws.protocoltests.shared#FooEnumMap"
                }
            }
        },
        "aws.protocoltests.restxml#XmlLists": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlListsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlListsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This test case serializes XML lists for the following cases for both\ninput and output:\n\n1. Normal XML lists.\n2. Normal XML sets.\n3. XML lists of lists.\n4. XML lists with @xmlName on its members\n5. Flattened XML lists.\n6. Flattened XML lists with @xmlName.\n7. Flattened XML lists with @xmlNamespace.\n8. Lists of structures.\n9. Flattened XML list of structures",
                "smithy.api#http": {
                    "uri": "/XmlLists",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlLists",
                        "documentation": "Tests for XML list serialization",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlLists",
                        "body": "<XmlListsInputOutput>\n    <stringList>\n        <member>foo</member>\n        <member>bar</member>\n    </stringList>\n    <stringSet>\n        <member>foo</member>\n        <member>bar</member>\n    </stringSet>\n    <integerList>\n        <member>1</member>\n        <member>2</member>\n    </integerList>\n    <booleanList>\n        <member>true</member>\n        <member>false</member>\n    </booleanList>\n    <timestampList>\n        <member>2014-04-29T18:30:38Z</member>\n        <member>2014-04-29T18:30:38Z</member>\n    </timestampList>\n    <enumList>\n        <member>Foo</member>\n        <member>0</member>\n    </enumList>\n    <nestedStringList>\n        <member>\n            <member>foo</member>\n            <member>bar</member>\n        </member>\n        <member>\n            <member>baz</member>\n            <member>qux</member>\n        </member>\n    </nestedStringList>\n    <renamed>\n        <item>foo</item>\n        <item>bar</item>\n    </renamed>\n    <flattenedList>hi</flattenedList>\n    <flattenedList>bye</flattenedList>\n    <customName>yep</customName>\n    <customName>nope</customName>\n    <myStructureList>\n        <item>\n            <value>1</value>\n            <other>2</other>\n        </item>\n        <item>\n            <value>3</value>\n            <other>4</other>\n        </item>\n    </myStructureList>\n    <flattenedStructureList>\n        <value>5</value>\n        <other>6</other>\n    </flattenedStructureList>\n    <flattenedStructureList>\n        <value>7</value>\n        <other>8</other>\n    </flattenedStructureList>\n</XmlListsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "stringList": [
                                "foo",
                                "bar"
                            ],
                            "stringSet": [
                                "foo",
                                "bar"
                            ],
                            "integerList": [
                                1,
                                2
                            ],
                            "booleanList": [
                                true,
                                false
                            ],
                            "timestampList": [
                                1398796238,
                                1398796238
                            ],
                            "enumList": [
                                "Foo",
                                "0"
                            ],
                            "nestedStringList": [
                                [
                                    "foo",
                                    "bar"
                                ],
                                [
                                    "baz",
                                    "qux"
                                ]
                            ],
                            "renamedListMembers": [
                                "foo",
                                "bar"
                            ],
                            "flattenedList": [
                                "hi",
                                "bye"
                            ],
                            "flattenedList2": [
                                "yep",
                                "nope"
                            ],
                            "structureList": [
                                {
                                    "a": "1",
                                    "b": "2"
                                },
                                {
                                    "a": "3",
                                    "b": "4"
                                }
                            ],
                            "flattenedStructureList": [
                                {
                                    "a": "5",
                                    "b": "6"
                                },
                                {
                                    "a": "7",
                                    "b": "8"
                                }
                            ]
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlLists",
                        "documentation": "Tests for XML list serialization",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlListsInputOutput>\n    <stringList>\n        <member>foo</member>\n        <member>bar</member>\n    </stringList>\n    <stringSet>\n        <member>foo</member>\n        <member>bar</member>\n    </stringSet>\n    <integerList>\n        <member>1</member>\n        <member>2</member>\n    </integerList>\n    <booleanList>\n        <member>true</member>\n        <member>false</member>\n    </booleanList>\n    <timestampList>\n        <member>2014-04-29T18:30:38Z</member>\n        <member>2014-04-29T18:30:38Z</member>\n    </timestampList>\n    <enumList>\n        <member>Foo</member>\n        <member>0</member>\n    </enumList>\n    <nestedStringList>\n        <member>\n            <member>foo</member>\n            <member>bar</member>\n        </member>\n        <member>\n            <member>baz</member>\n            <member>qux</member>\n        </member>\n    </nestedStringList>\n    <renamed>\n        <item>foo</item>\n        <item>bar</item>\n    </renamed>\n    <flattenedList>hi</flattenedList>\n    <flattenedList>bye</flattenedList>\n    <customName>yep</customName>\n    <customName>nope</customName>\n    <flattenedListWithMemberNamespace xmlns=\"https://xml-member.example.com\">a</flattenedListWithMemberNamespace>\n    <flattenedListWithMemberNamespace xmlns=\"https://xml-member.example.com\">b</flattenedListWithMemberNamespace>\n    <flattenedListWithNamespace>a</flattenedListWithNamespace>\n    <flattenedListWithNamespace>b</flattenedListWithNamespace>\n    <myStructureList>\n        <item>\n            <value>1</value>\n            <other>2</other>\n        </item>\n        <item>\n            <value>3</value>\n            <other>4</other>\n        </item>\n    </myStructureList>\n    <flattenedStructureList>\n        <value>5</value>\n        <other>6</other>\n    </flattenedStructureList>\n    <flattenedStructureList>\n        <value>7</value>\n        <other>8</other>\n    </flattenedStructureList>\n</XmlListsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "stringList": [
                                "foo",
                                "bar"
                            ],
                            "stringSet": [
                                "foo",
                                "bar"
                            ],
                            "integerList": [
                                1,
                                2
                            ],
                            "booleanList": [
                                true,
                                false
                            ],
                            "timestampList": [
                                1398796238,
                                1398796238
                            ],
                            "enumList": [
                                "Foo",
                                "0"
                            ],
                            "nestedStringList": [
                                [
                                    "foo",
                                    "bar"
                                ],
                                [
                                    "baz",
                                    "qux"
                                ]
                            ],
                            "renamedListMembers": [
                                "foo",
                                "bar"
                            ],
                            "flattenedList": [
                                "hi",
                                "bye"
                            ],
                            "flattenedList2": [
                                "yep",
                                "nope"
                            ],
                            "flattenedListWithMemberNamespace": [
                                "a",
                                "b"
                            ],
                            "flattenedListWithNamespace": [
                                "a",
                                "b"
                            ],
                            "structureList": [
                                {
                                    "a": "1",
                                    "b": "2"
                                },
                                {
                                    "a": "3",
                                    "b": "4"
                                }
                            ],
                            "flattenedStructureList": [
                                {
                                    "a": "5",
                                    "b": "6"
                                },
                                {
                                    "a": "7",
                                    "b": "8"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlListsInputOutput": {
            "type": "structure",
            "members": {
                "stringList": {
                    "target": "aws.protocoltests.shared#StringList"
                },
                "stringSet": {
                    "target": "aws.protocoltests.shared#StringSet"
                },
                "integerList": {
                    "target": "aws.protocoltests.shared#IntegerList"
                },
                "booleanList": {
                    "target": "aws.protocoltests.shared#BooleanList"
                },
                "timestampList": {
                    "target": "aws.protocoltests.shared#TimestampList"
                },
                "enumList": {
                    "target": "aws.protocoltests.shared#FooEnumList"
                },
                "nestedStringList": {
                    "target": "aws.protocoltests.shared#NestedStringList"
                },
                "renamedListMembers": {
                    "target": "aws.protocoltests.restxml#RenamedListMembers",
                    "traits": {
                        "smithy.api#xmlName": "renamed"
                    }
                },
                "flattenedList": {
                    "target": "aws.protocoltests.restxml#RenamedListMembers",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                },
                "flattenedList2": {
                    "target": "aws.protocoltests.restxml#RenamedListMembers",
                    "traits": {
                        "smithy.api#xmlFlattened": {},
                        "smithy.api#xmlName": "customName"
                    }
                },
                "flattenedListWithMemberNamespace": {
                    "target": "aws.protocoltests.restxml#ListWithMemberNamespace",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                },
                "flattenedListWithNamespace": {
                    "target": "aws.protocoltests.restxml#ListWithNamespace",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                },
                "structureList": {
                    "target": "aws.protocoltests.restxml#StructureList",
                    "traits": {
                        "smithy.api#xmlName": "myStructureList"
                    }
                },
                "flattenedStructureList": {
                    "target": "aws.protocoltests.restxml#StructureList",
                    "traits": {
                        "smithy.api#xmlFlattened": {}
                    }
                }
            }
        },
        "aws.protocoltests.restxml#XmlMaps": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlMapsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlMapsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "The example tests basic map serialization.",
                "smithy.api#http": {
                    "uri": "/XmlMaps",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlMaps",
                        "documentation": "Tests for XML map serialization",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlMaps",
                        "body": "<XmlMapsInputOutput>\n    <myMap>\n        <entry>\n            <key>foo</key>\n            <value>\n                <hi>there</hi>\n            </value>\n        </entry>\n        <entry>\n            <key>baz</key>\n            <value>\n                <hi>bye</hi>\n            </value>\n        </entry>\n    </myMap>\n</XmlMapsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "foo": {
                                    "hi": "there"
                                },
                                "baz": {
                                    "hi": "bye"
                                }
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlMaps",
                        "documentation": "Tests for XML map serialization",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlMapsInputOutput>\n    <myMap>\n        <entry>\n            <key>foo</key>\n            <value>\n                <hi>there</hi>\n            </value>\n        </entry>\n        <entry>\n            <key>baz</key>\n            <value>\n                <hi>bye</hi>\n            </value>\n        </entry>\n    </myMap>\n</XmlMapsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "foo": {
                                    "hi": "there"
                                },
                                "baz": {
                                    "hi": "bye"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlMapsInputOutput": {
            "type": "structure",
            "members": {
                "myMap": {
                    "target": "aws.protocoltests.restxml#XmlMapsInputOutputMap"
                }
            }
        },
        "aws.protocoltests.restxml#XmlMapsInputOutputMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.shared#GreetingStruct"
            }
        },
        "aws.protocoltests.restxml#XmlMapsXmlName": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlMapsXmlNameInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlMapsXmlNameInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/XmlMapsXmlName",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlMapsXmlName",
                        "documentation": "Serializes XML maps that have xmlName on members",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlMapsXmlName",
                        "body": "<XmlMapsXmlNameInputOutput>\n    <myMap>\n        <entry>\n            <Attribute>foo</Attribute>\n            <Setting>\n                <hi>there</hi>\n            </Setting>\n        </entry>\n        <entry>\n            <Attribute>baz</Attribute>\n            <Setting>\n                <hi>bye</hi>\n            </Setting>\n        </entry>\n    </myMap>\n</XmlMapsXmlNameInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "foo": {
                                    "hi": "there"
                                },
                                "baz": {
                                    "hi": "bye"
                                }
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlMapsXmlName",
                        "documentation": "Serializes XML lists",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlMapsXmlNameInputOutput>\n    <myMap>\n        <entry>\n            <Attribute>foo</Attribute>\n            <Setting>\n                <hi>there</hi>\n            </Setting>\n        </entry>\n        <entry>\n            <Attribute>baz</Attribute>\n            <Setting>\n                <hi>bye</hi>\n            </Setting>\n        </entry>\n    </myMap>\n</XmlMapsXmlNameInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "myMap": {
                                "foo": {
                                    "hi": "there"
                                },
                                "baz": {
                                    "hi": "bye"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlMapsXmlNameInputOutput": {
            "type": "structure",
            "members": {
                "myMap": {
                    "target": "aws.protocoltests.restxml#XmlMapsXmlNameInputOutputMap"
                }
            }
        },
        "aws.protocoltests.restxml#XmlMapsXmlNameInputOutputMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlName": "Attribute"
                }
            },
            "value": {
                "target": "aws.protocoltests.shared#GreetingStruct",
                "traits": {
                    "smithy.api#xmlName": "Setting"
                }
            }
        },
        "aws.protocoltests.restxml#XmlNamespaceNested": {
            "type": "structure",
            "members": {
                "foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#xmlNamespace": {
                            "uri": "http://baz.com",
                            "prefix": "baz"
                        }
                    }
                },
                "values": {
                    "target": "aws.protocoltests.restxml#XmlNamespacedList",
                    "traits": {
                        "smithy.api#xmlNamespace": {
                            "uri": "http://qux.com"
                        }
                    }
                }
            },
            "traits": {
                "smithy.api#xmlNamespace": {
                    "uri": "http://foo.com"
                }
            }
        },
        "aws.protocoltests.restxml#XmlNamespacedList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#xmlNamespace": {
                        "uri": "http://bux.com"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#XmlNamespaces": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlNamespacesInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlNamespacesInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/XmlNamespaces",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlNamespaces",
                        "documentation": "Serializes XML namespaces",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlNamespaces",
                        "body": "<XmlNamespacesInputOutput xmlns=\"http://foo.com\">\n    <nested>\n        <foo xmlns:baz=\"http://baz.com\">Foo</foo>\n        <values xmlns=\"http://qux.com\">\n            <member xmlns=\"http://bux.com\">Bar</member>\n            <member xmlns=\"http://bux.com\">Baz</member>\n        </values>\n    </nested>\n</XmlNamespacesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "foo": "Foo",
                                "values": [
                                    "Bar",
                                    "Baz"
                                ]
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlNamespaces",
                        "documentation": "Serializes XML namespaces",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlNamespacesInputOutput xmlns=\"http://foo.com\">\n    <nested>\n        <foo xmlns:baz=\"http://baz.com\">Foo</foo>\n        <values xmlns=\"http://qux.com\">\n            <member xmlns=\"http://bux.com\">Bar</member>\n            <member xmlns=\"http://bux.com\">Baz</member>\n        </values>\n    </nested>\n</XmlNamespacesInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "nested": {
                                "foo": "Foo",
                                "values": [
                                    "Bar",
                                    "Baz"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlNamespacesInputOutput": {
            "type": "structure",
            "members": {
                "nested": {
                    "target": "aws.protocoltests.restxml#XmlNamespaceNested"
                }
            },
            "traits": {
                "smithy.api#xmlNamespace": {
                    "uri": "http://foo.com"
                }
            }
        },
        "aws.protocoltests.restxml#XmlNestedUnionStruct": {
            "type": "structure",
            "members": {
                "stringValue": {
                    "target": "smithy.api#String"
                },
                "booleanValue": {
                    "target": "smithy.api#Boolean"
                },
                "byteValue": {
                    "target": "smithy.api#Byte"
                },
                "shortValue": {
                    "target": "smithy.api#Short"
                },
                "integerValue": {
                    "target": "smithy.api#Integer"
                },
                "longValue": {
                    "target": "smithy.api#Long"
                },
                "floatValue": {
                    "target": "smithy.api#Float"
                },
                "doubleValue": {
                    "target": "smithy.api#Double"
                }
            }
        },
        "aws.protocoltests.restxml#XmlTimestamps": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlTimestampsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlTimestampsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This tests how timestamps are serialized, including using the\ndefault format of date-time and various @timestampFormat trait\nvalues.",
                "smithy.api#http": {
                    "uri": "/XmlTimestamps",
                    "method": "POST"
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlTimestamps",
                        "documentation": "Tests how normal timestamps are serialized",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlTimestamps",
                        "body": "<XmlTimestampsInputOutput>\n    <normal>2014-04-29T18:30:38Z</normal>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "normal": 1398796238
                        }
                    },
                    {
                        "id": "XmlTimestampsWithDateTimeFormat",
                        "documentation": "Ensures that the timestampFormat of date-time works like normal timestamps",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlTimestamps",
                        "body": "<XmlTimestampsInputOutput>\n    <dateTime>2014-04-29T18:30:38Z</dateTime>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "dateTime": 1398796238
                        }
                    },
                    {
                        "id": "XmlTimestampsWithEpochSecondsFormat",
                        "documentation": "Ensures that the timestampFormat of epoch-seconds works",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlTimestamps",
                        "body": "<XmlTimestampsInputOutput>\n    <epochSeconds>1398796238</epochSeconds>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "epochSeconds": 1398796238
                        }
                    },
                    {
                        "id": "XmlTimestampsWithHttpDateFormat",
                        "documentation": "Ensures that the timestampFormat of http-date works",
                        "protocol": "aws.protocols#restXml",
                        "method": "POST",
                        "uri": "/XmlTimestamps",
                        "body": "<XmlTimestampsInputOutput>\n    <httpDate>Tue, 29 Apr 2014 18:30:38 GMT</httpDate>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "httpDate": 1398796238
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlTimestamps",
                        "documentation": "Tests how normal timestamps are serialized",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlTimestampsInputOutput>\n    <normal>2014-04-29T18:30:38Z</normal>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "normal": 1398796238
                        }
                    },
                    {
                        "id": "XmlTimestampsWithDateTimeFormat",
                        "documentation": "Ensures that the timestampFormat of date-time works like normal timestamps",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlTimestampsInputOutput>\n    <dateTime>2014-04-29T18:30:38Z</dateTime>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "dateTime": 1398796238
                        }
                    },
                    {
                        "id": "XmlTimestampsWithEpochSecondsFormat",
                        "documentation": "Ensures that the timestampFormat of epoch-seconds works",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlTimestampsInputOutput>\n    <epochSeconds>1398796238</epochSeconds>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "epochSeconds": 1398796238
                        }
                    },
                    {
                        "id": "XmlTimestampsWithHttpDateFormat",
                        "documentation": "Ensures that the timestampFormat of http-date works",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlTimestampsInputOutput>\n    <httpDate>Tue, 29 Apr 2014 18:30:38 GMT</httpDate>\n</XmlTimestampsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "httpDate": 1398796238
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlTimestampsInputOutput": {
            "type": "structure",
            "members": {
                "normal": {
                    "target": "smithy.api#Timestamp"
                },
                "dateTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "epochSeconds": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "epoch-seconds"
                    }
                },
                "httpDate": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "http-date"
                    }
                }
            }
        },
        "aws.protocoltests.restxml#XmlUnionShape": {
            "type": "union",
            "members": {
                "stringValue": {
                    "target": "smithy.api#String"
                },
                "booleanValue": {
                    "target": "smithy.api#Boolean"
                },
                "byteValue": {
                    "target": "smithy.api#Byte"
                },
                "shortValue": {
                    "target": "smithy.api#Short"
                },
                "integerValue": {
                    "target": "smithy.api#Integer"
                },
                "longValue": {
                    "target": "smithy.api#Long"
                },
                "floatValue": {
                    "target": "smithy.api#Float"
                },
                "doubleValue": {
                    "target": "smithy.api#Double"
                },
                "unionValue": {
                    "target": "aws.protocoltests.restxml#XmlUnionShape"
                },
                "structValue": {
                    "target": "aws.protocoltests.restxml#XmlNestedUnionStruct"
                }
            }
        },
        "aws.protocoltests.restxml#XmlUnions": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.restxml#XmlUnionsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.restxml#XmlUnionsInputOutput"
            },
            "traits": {
                "smithy.api#http": {
                    "uri": "/XmlUnions",
                    "method": "PUT"
                },
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "XmlUnionsWithStructMember",
                        "documentation": "Serializes union struct member",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlUnions",
                        "body": "<XmlUnionsInputOutput>\n    <unionValue>\n       <structValue>\n          <stringValue>string</stringValue>\n          <booleanValue>true</booleanValue>\n          <byteValue>1</byteValue>\n          <shortValue>2</shortValue>\n          <integerValue>3</integerValue>\n          <longValue>4</longValue>\n          <floatValue>5.5</floatValue>\n          <doubleValue>6.5</doubleValue>\n       </structValue>\n    </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "structValue": {
                                    "stringValue": "string",
                                    "booleanValue": true,
                                    "byteValue": 1,
                                    "shortValue": 2,
                                    "integerValue": 3,
                                    "longValue": 4,
                                    "floatValue": 5.5,
                                    "doubleValue": 6.5
                                }
                            }
                        }
                    },
                    {
                        "id": "XmlUnionsWithStringMember",
                        "documentation": "serialize union string member",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlUnions",
                        "body": "<XmlUnionsInputOutput>\n   <unionValue>\n      <stringValue>some string</stringValue>\n   </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "stringValue": "some string"
                            }
                        }
                    },
                    {
                        "id": "XmlUnionsWithBooleanMember",
                        "documentation": "Serializes union boolean member",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlUnions",
                        "body": "<XmlUnionsInputOutput>\n   <unionValue>\n      <booleanValue>true</booleanValue>\n   </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "booleanValue": true
                            }
                        }
                    },
                    {
                        "id": "XmlUnionsWithUnionMember",
                        "documentation": "Serializes union member",
                        "protocol": "aws.protocols#restXml",
                        "method": "PUT",
                        "uri": "/XmlUnions",
                        "body": "<XmlUnionsInputOutput>\n   <unionValue>\n      <unionValue>\n         <booleanValue>true</booleanValue>\n      </unionValue>\n   </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "unionValue": {
                                    "booleanValue": true
                                }
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "XmlUnionsWithStructMember",
                        "documentation": "Serializes union struct member",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlUnionsInputOutput>\n    <unionValue>\n       <structValue>\n          <stringValue>string</stringValue>\n          <booleanValue>true</booleanValue>\n          <byteValue>1</byteValue>\n          <shortValue>2</shortValue>\n          <integerValue>3</integerValue>\n          <longValue>4</longValue>\n          <floatValue>5.5</floatValue>\n          <doubleValue>6.5</doubleValue>\n       </structValue>\n    </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "structValue": {
                                    "stringValue": "string",
                                    "booleanValue": true,
                                    "byteValue": 1,
                                    "shortValue": 2,
                                    "integerValue": 3,
                                    "longValue": 4,
                                    "floatValue": 5.5,
                                    "doubleValue": 6.5
                                }
                            }
                        }
                    },
                    {
                        "id": "XmlUnionsWithStringMember",
                        "documentation": "Serializes union string member",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlUnionsInputOutput>\n   <unionValue>\n      <stringValue>some string</stringValue>\n   </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "stringValue": "some string"
                            }
                        }
                    },
                    {
                        "id": "XmlUnionsWithBooleanMember",
                        "documentation": "Serializes union boolean member",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlUnionsInputOutput>\n   <unionValue>\n      <booleanValue>true</booleanValue>\n   </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "booleanValue": true
                            }
                        }
                    },
                    {
                        "id": "XmlUnionsWithUnionMember",
                        "documentation": "Serializes union member",
                        "protocol": "aws.protocols#restXml",
                        "code": 200,
                        "body": "<XmlUnionsInputOutput>\n   <unionValue>\n      <unionValue>\n         <booleanValue>true</booleanValue>\n      </unionValue>\n   </unionValue>\n</XmlUnionsInputOutput>\n",
                        "bodyMediaType": "application/xml",
                        "headers": {
                            "Content-Type": "application/xml"
                        },
                        "params": {
                            "unionValue": {
                                "unionValue": {
                                    "booleanValue": true
                                }
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.restxml#XmlUnionsInputOutput": {
            "type": "structure",
            "members": {
                "unionValue": {
                    "target": "aws.protocoltests.restxml#XmlUnionShape"
                }
            }
        },
        "aws.iam#actionPermissionDescription": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "A brief description of what granting the user permission to invoke an operation would entail. This description should begin with something similar to 'Enables the user to...' or 'Grants permission to...'",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.apigateway#apiKeySource": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Specifies the source of the caller identifier that will be used to throttle API methods that require a key.",
                "smithy.api#externalDocumentation": {
                    "Developer Guide": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-api-key-source.html"
                },
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#arn": {
            "type": "structure",
            "members": {
                "template": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "absolute": {
                    "target": "smithy.api#Boolean"
                },
                "noRegion": {
                    "target": "smithy.api#Boolean"
                },
                "noAccount": {
                    "target": "smithy.api#Boolean"
                }
            },
            "traits": {
                "smithy.api#documentation": "Specifies an ARN template for the resource.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
                },
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.api#arnReference": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.api#String"
                },
                "resource": {
                    "target": "smithy.api#String"
                },
                "service": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Marks a string as containing an ARN.",
                "smithy.api#trait": {
                    "selector": "string"
                }
            }
        },
        "aws.apigateway#authorizer": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Attaches an authorizer to a service, resource, or operation.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)"
                }
            }
        },
        "aws.apigateway#authorizers": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.apigateway#AuthorizerDefinition"
            },
            "traits": {
                "smithy.api#documentation": "A list of API Gateway authorizers to augment the service's declared authentication mechanisms.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_0": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_1": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsQuery": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as `x-www-form-urlencoded` strings and responses in XML documents. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "noInlineDocumentSupport": true,
                    "traits": [
                        "aws.protocols#awsQueryError",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                }
            }
        },
        "aws.protocols#awsQueryError": {
            "type": "structure",
            "members": {
                "code": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The value used to distinguish this error shape during serialization.",
                        "smithy.api#required": {}
                    }
                },
                "httpResponseCode": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The HTTP response code used on a response containing this error shape.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Provides the value in the 'Code' distinguishing field and HTTP response code for an operation error.",
                "smithy.api#trait": {
                    "selector": "structure [trait|error]",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.cloudformation#cfnAdditionalIdentifier": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the CloudFormation property generated from this member is an\nadditional identifier for the resource.",
                "smithy.api#trait": {
                    "selector": "structure > :test(member > string)",
                    "conflicts": [
                        "aws.cloudformation#cfnExcludeProperty"
                    ],
                    "breakingChanges": [
                        {
                            "change": "remove"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnExcludeProperty": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that a structure member should not be included in generated\nCloudFormation resource definitions.",
                "smithy.api#trait": {
                    "selector": "structure > member",
                    "conflicts": [
                        "aws.cloudformation#cfnAdditionalIdentifier",
                        "aws.cloudformation#cfnMutability"
                    ],
                    "breakingChanges": [
                        {
                            "change": "add"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnMutability": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates an explicit CloudFormation mutability of the structure member\nwhen part of a CloudFormation resource.",
                "smithy.api#enum": [
                    {
                        "value": "full",
                        "name": "FULL",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember does not have any mutability restrictions, meaning that it\ncan be specified by the user and returned in a `read` or `list`\nrequest."
                    },
                    {
                        "value": "create-and-read",
                        "name": "CREATE_AND_READ",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be specified only during resource creation and can be\nreturned in a `read` or `list` request."
                    },
                    {
                        "value": "create",
                        "name": "CREATE",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be specified only during resource creation and cannot\nbe returned in a `read` or `list` request. MUST NOT be set if the\nmember is also marked with the `@additionalIdentifier` trait."
                    },
                    {
                        "value": "read",
                        "name": "READ",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be returned by a `read` or `list` request, but\ncannot be set by the user."
                    },
                    {
                        "value": "write",
                        "name": "WRITE",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be specified by the user, but cannot be returned by a\n`read` or `list` request. MUST NOT be set if the member is also\nmarked with the `@additionalIdentifier` trait."
                    }
                ],
                "smithy.api#trait": {
                    "selector": "structure > member",
                    "conflicts": [
                        "aws.cloudformation#cfnExcludeProperty"
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "The cloudFormationName trait allows a CloudFormation resource property name\nto differ from a structure member name used in the model.",
                "smithy.api#trait": {
                    "selector": "structure > member",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnResource": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Provides a custom CloudFormation resource name."
                    }
                },
                "additionalSchemas": {
                    "target": "aws.cloudformation#StructureIdList",
                    "traits": {
                        "smithy.api#documentation": "A list of additional shape IDs of structures that will have their\nproperties added to the CloudFormation resource."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that a Smithy resource is a CloudFormation resource.",
                "smithy.api#trait": {
                    "selector": "resource",
                    "breakingChanges": [
                        {
                            "change": "presence"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.api#clientDiscoveredEndpoint": {
            "type": "structure",
            "members": {
                "required": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that the target operation should use the client's endpoint discovery logic.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#clientEndpointDiscovery": {
            "type": "structure",
            "members": {
                "operation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the operation that clients should use to discover endpoints for the service.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "operation"
                        },
                        "smithy.api#required": {}
                    }
                },
                "error": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the error that tells clients that the endpoint they are using is no longer valid. This error MUST be bound to any operation bound to the service which is marked with the aws.api#clientDiscoveredEndpoint trait.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "structure[trait|error]"
                        },
                        "smithy.api#recommended": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Configures endpoint discovery for the service.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#clientEndpointDiscoveryId": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates members of the operation input which should be use to discover endpoints.",
                "smithy.api#trait": {
                    "selector": "operation[trait|aws.api#clientDiscoveredEndpoint] -[input]-> structure > :test(member[trait|required] > string)"
                }
            }
        },
        "aws.auth#cognitoUserPools": {
            "type": "structure",
            "members": {
                "providerArns": {
                    "target": "aws.auth#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the Amazon Cognito user pool ARNs. Each element is of this format: arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {},
                "smithy.api#documentation": "Configures an Amazon Cognito User Pools auth scheme.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.iam#conditionKeys": {
            "type": "list",
            "member": {
                "target": "aws.iam#IamIdentifier"
            },
            "traits": {
                "smithy.api#documentation": "Applies condition keys by name to a resource or operation.",
                "smithy.api#trait": {
                    "selector": ":test(resource, operation)"
                }
            }
        },
        "aws.api#controlPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the control plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#dataPlane"
                    ]
                }
            }
        },
        "aws.api#data": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Designates the target as containing data of a known classification level.",
                "smithy.api#enum": [
                    {
                        "value": "content",
                        "name": "CUSTOMER_CONTENT",
                        "documentation": "Customer content means any software (including machine images), data, text, audio, video or images that customers or any customer end user transfers to AWS for processing, storage or hosting by AWS services in connection with the customer?s accounts and any computational results that customers or any customer end user derive from the foregoing through their use of AWS services."
                    },
                    {
                        "value": "account",
                        "name": "CUSTOMER_ACCOUNT_INFORMATION",
                        "documentation": "Account information means information about customers that customers provide to AWS in connection with the creation or administration of customers? accounts."
                    },
                    {
                        "value": "usage",
                        "name": "SERVICE_ATTRIBUTES",
                        "documentation": "Service Attributes means service usage data related to a customer?s account, such as resource identifiers, metadata tags, security and access roles, rules, usage policies, permissions, usage statistics, logging data, and analytics."
                    },
                    {
                        "value": "tagging",
                        "name": "TAG_DATA",
                        "documentation": "Designates metadata tags applied to AWS resources."
                    },
                    {
                        "value": "permissions",
                        "name": "PERMISSIONS_DATA",
                        "documentation": "Designates security and access roles, rules, usage policies, and permissions."
                    }
                ],
                "smithy.api#trait": {
                    "selector": ":test(simpleType, collection, structure, union, member)"
                }
            }
        },
        "aws.api#dataPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the data plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#controlPlane"
                    ]
                }
            }
        },
        "aws.iam#defineConditionKeys": {
            "type": "map",
            "key": {
                "target": "aws.iam#IamIdentifier"
            },
            "value": {
                "target": "aws.iam#ConditionKeyDefinition"
            },
            "traits": {
                "smithy.api#documentation": "Defines the set of condition keys that appear within a service in addition to inferred and global condition keys.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.iam#disableConditionKeyInference": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Disables the automatic inference of condition keys of a resource.",
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.protocols#ec2Query": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as Amazon EC2 formatted `x-www-form-urlencoded` strings and responses in XML documents. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "noInlineDocumentSupport": true,
                    "traits": [
                        "aws.protocols#ec2QueryName",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                }
            }
        },
        "aws.protocols#ec2QueryName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates the serialized name of a structure member when that structure is serialized for the input of an EC2 operation.",
                "smithy.api#pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                "smithy.api#trait": {
                    "selector": "structure > member"
                }
            }
        },
        "aws.protocols#httpChecksum": {
            "type": "structure",
            "members": {
                "requestAlgorithmMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member that is used to configure request checksum behavior."
                    }
                },
                "requestChecksumRequired": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates an operation requires a checksum in its HTTP request."
                    }
                },
                "requestValidationModeMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member used to opt-in to response checksum validation."
                    }
                },
                "responseAlgorithms": {
                    "target": "aws.protocols#ChecksumAlgorithmSet",
                    "traits": {
                        "smithy.api#documentation": "Defines the checksum algorithms clients should look for when performing HTTP response checksum validation."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation supports checksum validation.",
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#httpMalformedRequestTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpMalformedRequestTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how a malformed HTTP request is rejected by a server given a specific protocol",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#httpRequestTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpRequestTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how an HTTP request is serialized given a specific protocol,\nauthentication scheme, and set of input parameters.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "smithy.test#httpResponseTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpResponseTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how an HTTP response is serialized given a specific protocol,\nauthentication scheme, and set of output or error parameters.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": ":test(operation, structure[trait|error])"
                }
            }
        },
        "aws.iam#iamResource": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the resource in AWS IAM."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates properties of a Smithy resource in AWS IAM.",
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.apigateway#integration": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "aws.apigateway#IntegrationType",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "aws.apigateway#Arn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "credentials": {
                    "target": "aws.apigateway#IamRoleArn"
                },
                "httpMethod": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "passThroughBehavior": {
                    "target": "aws.apigateway#PassThroughBehavior"
                },
                "contentHandling": {
                    "target": "aws.apigateway#ContentHandling"
                },
                "timeoutInMillis": {
                    "target": "smithy.api#Integer"
                },
                "connectionId": {
                    "target": "smithy.api#String"
                },
                "connectionType": {
                    "target": "aws.apigateway#ConnectionType"
                },
                "cacheNamespace": {
                    "target": "smithy.api#String"
                },
                "payloadFormatVersion": {
                    "target": "smithy.api#String"
                },
                "cacheKeyParameters": {
                    "target": "aws.apigateway#StringList"
                },
                "requestParameters": {
                    "target": "aws.apigateway#RequestParameters"
                },
                "requestTemplates": {
                    "target": "aws.apigateway#Templates"
                },
                "responses": {
                    "target": "aws.apigateway#IntegrationResponses"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an API Gateway integration.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.apigateway#mockIntegration"
                    ]
                }
            }
        },
        "aws.apigateway#mockIntegration": {
            "type": "structure",
            "members": {
                "passThroughBehavior": {
                    "target": "aws.apigateway#PassThroughBehavior"
                },
                "requestParameters": {
                    "target": "aws.apigateway#RequestParameters"
                },
                "requestTemplates": {
                    "target": "aws.apigateway#Templates"
                },
                "responses": {
                    "target": "aws.apigateway#IntegrationResponses"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an API Gateway mock integration.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.apigateway#integration"
                    ]
                }
            }
        },
        "smithy.mqtt#mqttJson": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#protocolDefinition": {},
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "smithy.mqtt#publish": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[^#+]+$",
                "smithy.api#trait": {
                    "selector": "operation :not(-[output]-> * > member)",
                    "conflicts": [
                        "smithy.mqtt#subscribe"
                    ],
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.apigateway#requestValidator": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Selects which request validation strategy to use. One of: 'full', 'params-only', 'body-only'",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, operation)"
                }
            }
        },
        "aws.iam#requiredActions": {
            "type": "list",
            "member": {
                "target": "aws.iam#IamIdentifier"
            },
            "traits": {
                "smithy.api#documentation": "Other actions that the invoker must be authorized to perform when executing the targeted operation.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.protocols#restJson1": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "A RESTful protocol that sends JSON in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#restXml": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                },
                "noErrorWrapping": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#deprecated": {},
                        "smithy.api#documentation": "Disables the serialization wrapping of error properties in an 'Error' XML element."
                    }
                }
            },
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "A RESTful protocol that sends XML in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "noInlineDocumentSupport": true,
                    "traits": [
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.customizations#s3UnwrappedXmlOutput": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates the response body from S3 is not wrapped in the aws-restxml-protocol operation-level XML node. Intended to only be used by AWS S3.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#service": {
            "type": "structure",
            "members": {
                "sdkId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arnNamespace": {
                    "target": "aws.api#ArnNamespace"
                },
                "cloudFormationName": {
                    "target": "aws.api#CloudFormationName"
                },
                "cloudTrailEventSource": {
                    "target": "smithy.api#String"
                },
                "endpointPrefix": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4 service signing name to use in the credential scope when signing requests. This value SHOULD match the `arnNamespace` property of the `aws.api#service-trait`.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "Signature Version 4 is the process to add authentication information to AWS requests sent by HTTP. For security, most requests to AWS must be signed with an access key, which consists of an access key ID and secret access key. These two keys are commonly referred to as your security credentials.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "smithy.mqtt#subscribe": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[^#+]+$",
                "smithy.api#trait": {
                    "selector": "operation:test(-[output]-> structure > member > union[trait|streaming])",
                    "conflicts": [
                        "smithy.mqtt#publish"
                    ],
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.iam#supportedPrincipalTypes": {
            "type": "list",
            "member": {
                "target": "aws.iam#PrincipalType"
            },
            "traits": {
                "smithy.api#documentation": "The principal types that can use the service or operation.",
                "smithy.api#trait": {
                    "selector": ":test(service, operation)"
                }
            }
        },
        "smithy.mqtt#topicLabel": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#trait": {
                    "selector": "member[trait|required] :test(> :test(string, byte, short, integer, long, boolean, timestamp))"
                }
            }
        },
        "aws.auth#unsignedPayload": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the request payload of a signed request is not to be used as part of the signature.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        }
    }
}
