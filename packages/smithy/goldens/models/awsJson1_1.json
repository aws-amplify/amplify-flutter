{
    "smithy": "1.0",
    "metadata": {
        "suppressions": [
            {
                "id": "DeprecatedTrait",
                "namespace": "*",
                "reason": "Some of the AWS protocols make use of deprecated traits, and some are\nthemselves deprecated traits. As this package is intended to test those\nprotocols, the warnings should be suppressed."
            },
            {
                "id": "UnreferencedShape",
                "namespace": "aws.protocoltests.config",
                "reason": "These shapes are intended to be used to validate vendorParams in\nprotocol tests, so they naturally will not be connected to a service.\n"
            }
        ]
    },
    "shapes": {
        "com.amazonaws.machinelearning#AmazonML_20141212": {
            "type": "service",
            "traits": {
                "aws.api#service": {
                    "sdkId": "Machine Learning",
                    "arnNamespace": "machinelearning",
                    "cloudFormationName": "MachineLearning",
                    "cloudTrailEventSource": "machinelearning.amazonaws.com",
                    "endpointPrefix": "machinelearning"
                },
                "aws.auth#sigv4": {
                    "name": "machinelearning"
                },
                "aws.protocols#awsJson1_1": {},
                "smithy.api#title": "Amazon Machine Learning",
                "smithy.api#xmlNamespace": {
                    "uri": "http://machinelearning.amazonaws.com/doc/2014-12-12/"
                }
            },
            "version": "2014-12-12",
            "operations": [
                {
                    "target": "com.amazonaws.machinelearning#Predict"
                }
            ]
        },
        "smithy.test#AppliesTo": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "client",
                        "name": "CLIENT",
                        "documentation": "The test only applies to client implementations."
                    },
                    {
                        "value": "server",
                        "name": "SERVER",
                        "documentation": "The test only applies to server implementations."
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#Arn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {},
                "smithy.api#documentation": "<p>The ARN of an AWS integration target.</p><p>This string MAY contain the literal string <code>{serviceName}</code> and/or the literal string <code>{operationName}</code>, which will be replaced with the name of the Smithy service shape and the name of the Smithy operation shape, respectively.</p>",
                "smithy.api#private": {}
            }
        },
        "aws.api#ArnNamespace": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[a-z0-9.\\-]{1,63}$",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#AuthorizerDefinition": {
            "type": "structure",
            "members": {
                "scheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Smithy authentication scheme used by the client (e.g, aws.v4).",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true,
                            "errorMessage": "The scheme of an authorizer definition must reference an auth trait"
                        },
                        "smithy.api#required": {}
                    }
                },
                "type": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The type of the authorizer. If specifying information beyond the scheme, this value is required. The value must be \"token\", for an authorizer with the caller identity embedded in an authorization token, or \"request\", for an authorizer with the caller identity contained in request parameters."
                    }
                },
                "customAuthType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "This value is not used directly by API Gateway but will be used for OpenAPI exports. This will default to \"awsSigV4\" if your scheme is \"aws.v4\", or \"custom\" otherwise."
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The Uniform Resource Identifier (URI) of the authorizer Lambda function"
                    }
                },
                "credentials": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Credentials required for invoking the authorizer"
                    }
                },
                "identitySource": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Comma-separated list of mapping expressions of the request parameters as the identity source. Applicable for the authorizer of the \"request\" type only."
                    }
                },
                "identityValidationExpression": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A regular expression for validating the token as the incoming identity"
                    }
                },
                "resultTtlInSeconds": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The number of seconds for which the resulting IAM policy is cached."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "An object that associates an authorizer and associated metadata with an authentication mechanism.",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.config#AwsConfig": {
            "type": "structure",
            "members": {
                "clockTime": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#documentation": "This is the time that should be set during the course of the test.\nThis is important for things like signing where the clock time impacts\nthe result."
                    }
                },
                "scopedConfig": {
                    "target": "aws.protocoltests.config#ScopedConfig"
                }
            }
        },
        "aws.protocoltests.shared#BooleanList": {
            "type": "list",
            "member": {
                "target": "smithy.api#PrimitiveBoolean"
            }
        },
        "aws.protocols#ChecksumAlgorithm": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "CRC32C",
                        "name": "CRC32C"
                    },
                    {
                        "value": "CRC32",
                        "name": "CRC32"
                    },
                    {
                        "value": "SHA1",
                        "name": "SHA1"
                    },
                    {
                        "value": "SHA256",
                        "name": "SHA256"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocols#ChecksumAlgorithmSet": {
            "type": "list",
            "member": {
                "target": "aws.protocols#ChecksumAlgorithm"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {},
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocoltests.config#ClientConfig": {
            "type": "structure",
            "members": {
                "aws_access_key_id": {
                    "target": "smithy.api#String"
                },
                "aws_secret_access_key": {
                    "target": "smithy.api#String"
                },
                "aws_session_token": {
                    "target": "smithy.api#String"
                },
                "region": {
                    "target": "smithy.api#String"
                },
                "s3": {
                    "target": "aws.protocoltests.config#S3Config"
                },
                "retry_config": {
                    "target": "aws.protocoltests.config#RetryConfig"
                },
                "aws_profile": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration that is set on the constructed client."
            }
        },
        "aws.api#CloudFormationName": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Z][A-Za-z0-9]+$",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.json#ComplexError": {
            "type": "structure",
            "members": {
                "TopLevel": {
                    "target": "smithy.api#String"
                },
                "Nested": {
                    "target": "aws.protocoltests.json#ComplexNestedErrorData"
                }
            },
            "traits": {
                "smithy.api#documentation": "This error is thrown when a request is invalid.",
                "smithy.api#error": "client",
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11ComplexError",
                        "documentation": "Parses a complex error with no message member",
                        "protocol": "aws.protocols#awsJson1_1",
                        "params": {
                            "TopLevel": "Top level",
                            "Nested": {
                                "Foo": "bar"
                            }
                        },
                        "code": 400,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"__type\": \"ComplexError\",\n    \"TopLevel\": \"Top level\",\n    \"Nested\": {\n        \"Foo\": \"bar\"\n    }\n}",
                        "bodyMediaType": "application/json"
                    },
                    {
                        "id": "AwsJson11EmptyComplexError",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 400,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"__type\": \"ComplexError\"\n}",
                        "bodyMediaType": "application/json"
                    }
                ]
            }
        },
        "aws.protocoltests.json#ComplexNestedErrorData": {
            "type": "structure",
            "members": {
                "Foo": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#jsonName": "Fooooo"
                    }
                }
            }
        },
        "aws.iam#ConditionKeyDefinition": {
            "type": "structure",
            "members": {
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines documentation about the condition key."
                    }
                },
                "externalDocumentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A valid URL that defines more information about the condition key."
                    }
                },
                "type": {
                    "target": "aws.iam#ConditionKeyType",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "A defined condition key to appear within a service in addition to inferred and global condition keys.",
                "smithy.api#private": {}
            }
        },
        "aws.iam#ConditionKeyType": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "The IAM policy type of the value that will supplied for this context key",
                "smithy.api#enum": [
                    {
                        "value": "ARN",
                        "name": "ARN"
                    },
                    {
                        "value": "ArrayOfARN",
                        "name": "ARRAY_OF_ARN"
                    },
                    {
                        "value": "Binary",
                        "name": "BINARY"
                    },
                    {
                        "value": "ArrayOfBinary",
                        "name": "ARRAY_OF_BINARY"
                    },
                    {
                        "value": "String",
                        "name": "STRING"
                    },
                    {
                        "value": "ArrayOfString",
                        "name": "ARRAY_OF_STRING"
                    },
                    {
                        "value": "Numeric",
                        "name": "NUMERIC"
                    },
                    {
                        "value": "ArrayOfNumeric",
                        "name": "ARRAY_OF_NUMERIC"
                    },
                    {
                        "value": "Date",
                        "name": "DATE"
                    },
                    {
                        "value": "ArrayOfDate",
                        "name": "ARRAY_OF_DATE"
                    },
                    {
                        "value": "Bool",
                        "name": "BOOL"
                    },
                    {
                        "value": "ArrayOfBool",
                        "name": "ARRAY_OF_BOOL"
                    },
                    {
                        "value": "IPAddress",
                        "name": "IP_ADDRESS"
                    },
                    {
                        "value": "ArrayOfIPAddress",
                        "name": "ARRAY_OF_IP_ADDRESS"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.config#ConfigFile": {
            "type": "map",
            "key": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#documentation": "The top level key in a config file is the \"profile\", which is a string.\nIf a profile is not explicitly set, then implementations should check the\nprofile named \"default\"."
                }
            },
            "value": {
                "target": "aws.protocoltests.config#FileConfigSettings",
                "traits": {
                    "smithy.api#documentation": "The value is a collection of settings."
                }
            },
            "traits": {
                "smithy.api#documentation": "A shape representing a parsed config file, which is a map of profile names\nto configuration sets."
            }
        },
        "aws.apigateway#ConnectionType": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "name": "INTERNET",
                        "value": "INTERNET"
                    },
                    {
                        "name": "VPC_LINK",
                        "value": "VPC_LINK"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#ContentHandling": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Defines the contentHandling for the integration",
                "smithy.api#enum": [
                    {
                        "value": "CONVERT_TO_TEXT",
                        "name": "CONVERT_TO_TEXT"
                    },
                    {
                        "value": "CONVERT_TO_BINARY",
                        "name": "CONVERT_TO_BINARY"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#DateTime": {
            "type": "timestamp",
            "traits": {
                "smithy.api#timestampFormat": "date-time"
            }
        },
        "com.amazonaws.machinelearning#DetailsAttributes": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "PredictiveModelType",
                        "name": "PREDICTIVE_MODEL_TYPE"
                    },
                    {
                        "value": "Algorithm",
                        "name": "ALGORITHM"
                    }
                ]
            }
        },
        "com.amazonaws.machinelearning#DetailsMap": {
            "type": "map",
            "key": {
                "target": "com.amazonaws.machinelearning#DetailsAttributes"
            },
            "value": {
                "target": "com.amazonaws.machinelearning#DetailsValue"
            }
        },
        "com.amazonaws.machinelearning#DetailsValue": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                }
            }
        },
        "aws.protocoltests.json#Document": {
            "type": "document"
        },
        "aws.protocoltests.shared#DoubleList": {
            "type": "list",
            "member": {
                "target": "smithy.api#Double"
            }
        },
        "aws.protocoltests.json#EmptyOperation": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "sends_requests_to_slash",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Sends requests to /",
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "includes_x_amz_target_and_content_type",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Includes X-Amz-Target header and Content-Type",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.EmptyOperation"
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "json_1_1_client_sends_empty_payload_for_no_input_shape",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Clients must always send an empty JSON object payload for\noperations with no input (that is, `{}`). While AWS service\nimplementations support requests with no payload or requests\nthat send `{}`, always sending `{}` from the client is\npreferred for forward compatibility in case input is ever\nadded to an operation.",
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "json_1_1_service_supports_empty_payload_for_no_input_shape",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Service implementations must support no payload or an empty\nobject payload for operations that define no input. However,\ndespite the lack of a payload, a Content-Type header is still\nrequired in order for the service to properly detect the\nprotocol.",
                        "body": "",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "method": "POST",
                        "uri": "/",
                        "appliesTo": "server"
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "handles_empty_output_shape",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "When no output is defined, the service is expected to return\nan empty payload, however, client must ignore a JSON payload\nif one is returned. This ensures that if output is added later,\nthen it will not break the client.",
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "code": 200,
                        "appliesTo": "client"
                    },
                    {
                        "id": "handles_unexpected_json_output",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "This client-only test builds on handles_empty_output_shape,\nby including unexpected fields in the JSON. A client\nneeds to ignore JSON output that is empty or that contains\nJSON object data.",
                        "body": "{\n    \"foo\": true\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "code": 200,
                        "appliesTo": "client"
                    },
                    {
                        "id": "json_1_1_service_responds_with_no_payload",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "When no output is defined, the service is expected to return\nan empty payload. Despite the lack of a payload, the service\nis expected to always send a Content-Type header. Clients must\nhandle cases where a service returns a JSON object and where\na service returns no JSON at all.",
                        "body": "",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "code": 200
                    }
                ]
            }
        },
        "aws.protocoltests.json#EmptyStruct": {
            "type": "structure",
            "members": {}
        },
        "aws.protocoltests.json#EndpointOperation": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#endpoint": {
                    "hostPrefix": "foo."
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11EndpointTrait",
                        "documentation": "Operations can prepend to the given host if they define the\nendpoint trait.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{}",
                        "host": "example.com",
                        "resolvedHost": "foo.example.com"
                    }
                ]
            }
        },
        "aws.protocoltests.json#EndpointWithHostLabelOperation": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#HostLabelInput"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.api#endpoint": {
                    "hostPrefix": "foo.{label}."
                },
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11EndpointTraitWithHostLabel",
                        "documentation": "Operations can prepend to the given host if they define the\nendpoint trait, and can use the host label trait to define\nfurther customization based on user input.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\"label\": \"bar\"}",
                        "bodyMediaType": "application/json",
                        "host": "example.com",
                        "resolvedHost": "foo.bar.example.com",
                        "params": {
                            "label": "bar"
                        }
                    }
                ]
            }
        },
        "com.amazonaws.machinelearning#EntityId": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1,
                    "max": 64
                },
                "smithy.api#pattern": "^[a-zA-Z0-9_.-]+$"
            }
        },
        "aws.protocoltests.config#EnvironmentConfig": {
            "type": "structure",
            "members": {
                "AWS_ACCESS_KEY_ID": {
                    "target": "smithy.api#String"
                },
                "AWS_SECRET_ACCESS_KEY": {
                    "target": "smithy.api#String"
                },
                "AWS_DEFAULT_REGION": {
                    "target": "smithy.api#String"
                },
                "AWS_RETRY_MODE": {
                    "target": "aws.protocoltests.config#RetryMode"
                },
                "AWS_SESSION_TOKEN": {
                    "target": "smithy.api#String"
                },
                "AWS_PROFILE": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Config settings that can be set as environment variables."
            }
        },
        "aws.protocoltests.shared#EpochSeconds": {
            "type": "timestamp",
            "traits": {
                "smithy.api#timestampFormat": "epoch-seconds"
            }
        },
        "com.amazonaws.machinelearning#ErrorCode": {
            "type": "integer"
        },
        "com.amazonaws.machinelearning#ErrorMessage": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 0,
                    "max": 2048
                }
            }
        },
        "aws.protocoltests.json#ErrorWithMembers": {
            "type": "structure",
            "members": {
                "Code": {
                    "target": "smithy.api#String"
                },
                "ComplexData": {
                    "target": "aws.protocoltests.json#KitchenSink"
                },
                "IntegerField": {
                    "target": "smithy.api#Integer"
                },
                "ListField": {
                    "target": "aws.protocoltests.json#ListOfStrings"
                },
                "MapField": {
                    "target": "aws.protocoltests.json#MapOfStrings"
                },
                "Message": {
                    "target": "smithy.api#String"
                },
                "StringField": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "abc"
                    }
                }
            },
            "traits": {
                "smithy.api#error": "client"
            }
        },
        "aws.protocoltests.json#ErrorWithoutMembers": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#error": "server"
            }
        },
        "aws.protocoltests.config#FileConfigSettings": {
            "type": "structure",
            "members": {
                "aws_access_key_id": {
                    "target": "smithy.api#String"
                },
                "aws_secret_access_key": {
                    "target": "smithy.api#String"
                },
                "aws_session_token": {
                    "target": "smithy.api#String"
                },
                "region": {
                    "target": "smithy.api#String"
                },
                "s3": {
                    "target": "aws.protocoltests.config#S3Config"
                },
                "retry_mode": {
                    "target": "aws.protocoltests.config#RetryMode"
                },
                "max_attempts": {
                    "target": "smithy.api#Short"
                }
            },
            "traits": {
                "smithy.api#documentation": "Config settings that can be set in the AWS config / credentials file as\npart of a profile."
            }
        },
        "aws.protocoltests.shared#FooEnum": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "name": "FOO",
                        "value": "Foo"
                    },
                    {
                        "name": "BAZ",
                        "value": "Baz"
                    },
                    {
                        "name": "BAR",
                        "value": "Bar"
                    },
                    {
                        "name": "ONE",
                        "value": "1"
                    },
                    {
                        "name": "ZERO",
                        "value": "0"
                    }
                ]
            }
        },
        "aws.protocoltests.shared#FooEnumList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#FooEnum"
            }
        },
        "aws.protocoltests.shared#FooEnumMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.shared#FooEnum"
            }
        },
        "aws.protocoltests.shared#FooEnumSet": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#FooEnum"
            },
            "traits": {
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocoltests.json#FooError": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "This error has test cases that test some of the dark corners of Amazon service\nframework history. It should only be implemented by clients.",
                "smithy.api#error": "server",
                "smithy.api#tags": [
                    "client-only"
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11FooErrorUsingXAmznErrorType",
                        "documentation": "Serializes the X-Amzn-ErrorType header. For an example service, see Amazon EKS.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "X-Amzn-Errortype": "FooError"
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorUsingXAmznErrorTypeWithUri",
                        "documentation": "Some X-Amzn-Errortype headers contain URLs. Clients need to split the URL on ':' and take only the first half of the string. For example, 'ValidationException:http://internal.amazon.com/example/com.amazon.example.validate/'\nis to be interpreted as 'ValidationException'.\n\nFor an example service see Amazon Polly.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "X-Amzn-Errortype": "FooError:http://internal.amazon.com/example/com.amazon.example.validate/"
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorUsingXAmznErrorTypeWithUriAndNamespace",
                        "documentation": "X-Amzn-Errortype might contain a URL and a namespace. Client should extract only the shape name. This is a pathalogical case that might not actually happen in any deployed AWS service.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "X-Amzn-Errortype": "aws.protocoltests.restjson#FooError:http://internal.amazon.com/example/com.amazon.example.validate/"
                        },
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorUsingCode",
                        "documentation": "This example uses the 'code' property in the output rather than X-Amzn-Errortype. Some services do this though it's preferable to send the X-Amzn-Errortype. Client implementations must first check for the X-Amzn-Errortype and then check for a top-level 'code' property.\n\nFor example service see Amazon S3 Glacier.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"code\": \"FooError\"\n}",
                        "bodyMediaType": "application/json",
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorUsingCodeAndNamespace",
                        "documentation": "Some services serialize errors using code, and it might contain a namespace. Clients should just take the last part of the string after '#'.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"code\": \"aws.protocoltests.restjson#FooError\"\n}",
                        "bodyMediaType": "application/json",
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorUsingCodeUriAndNamespace",
                        "documentation": "Some services serialize errors using code, and it might contain a namespace. It also might contain a URI. Clients should just take the last part of the string after '#' and before \":\". This is a pathalogical case that might not occur in any deployed AWS service.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"code\": \"aws.protocoltests.restjson#FooError:http://internal.amazon.com/example/com.amazon.example.validate/\"\n}",
                        "bodyMediaType": "application/json",
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorWithDunderType",
                        "documentation": "Some services serialize errors using __type.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"__type\": \"FooError\"\n}",
                        "bodyMediaType": "application/json",
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorWithDunderTypeAndNamespace",
                        "documentation": "Some services serialize errors using __type, and it might contain a namespace. Clients should just take the last part of the string after '#'.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"__type\": \"aws.protocoltests.restjson#FooError\"\n}",
                        "bodyMediaType": "application/json",
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11FooErrorWithDunderTypeUriAndNamespace",
                        "documentation": "Some services serialize errors using __type, and it might contain a namespace. It also might contain a URI. Clients should just take the last part of the string after '#' and before \":\". This is a pathalogical case that might not occur in any deployed AWS service.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 500,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"__type\": \"aws.protocoltests.restjson#FooError:http://internal.amazon.com/example/com.amazon.example.validate/\"\n}",
                        "bodyMediaType": "application/json",
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.shared#GreetingList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#GreetingStruct"
            }
        },
        "aws.protocoltests.shared#GreetingStruct": {
            "type": "structure",
            "members": {
                "hi": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.protocoltests.json#GreetingWithErrors": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "aws.protocoltests.json#GreetingWithErrorsOutput"
            },
            "errors": [
                {
                    "target": "aws.protocoltests.json#ComplexError"
                },
                {
                    "target": "aws.protocoltests.json#FooError"
                },
                {
                    "target": "aws.protocoltests.json#InvalidGreeting"
                }
            ],
            "traits": {
                "smithy.api#documentation": "This operation has three possible return values:\n\n1. A successful response in the form of GreetingWithErrorsOutput\n2. An InvalidGreeting error.\n3. A ComplexError error.\n\nImplementations must be able to successfully take a response and\nproperly deserialize successful and error responses.",
                "smithy.api#idempotent": {}
            }
        },
        "aws.protocoltests.json#GreetingWithErrorsOutput": {
            "type": "structure",
            "members": {
                "greeting": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.protocoltests.json#HostLabelInput": {
            "type": "structure",
            "members": {
                "label": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#hostLabel": {},
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "aws.protocoltests.json#HostWithPathOperation": {
            "type": "operation",
            "input": {
                "target": "smithy.api#Unit"
            },
            "output": {
                "target": "smithy.api#Unit"
            },
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11HostWithPath",
                        "documentation": "Custom endpoints supplied by users can have paths",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/custom/",
                        "body": "{}",
                        "host": "example.com/custom",
                        "appliesTo": "client"
                    }
                ]
            }
        },
        "aws.protocoltests.shared#HttpDate": {
            "type": "timestamp",
            "traits": {
                "smithy.api#timestampFormat": "http-date"
            }
        },
        "smithy.test#HttpMalformedRequestDefinition": {
            "type": "structure",
            "members": {
                "method": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The HTTP request method.",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The request-target of the HTTP request, not including\nthe query string (for example, \"/foo/bar\").",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "host": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint provided to the client, not including the path\nor scheme (for example, \"example.com\")."
                    }
                },
                "queryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the serialized query string parameters to include in the request.\n\nEach element in the list is a query string key value pair\nthat starts with the query string parameter name optionally\nfollowed by \"=\", optionally followed by the query string\nparameter value. For example, \"foo=bar\", \"foo=\", and \"foo\"\nare all valid values. The query string parameter name and\nthe value MUST appear in the format in which it is expected\nto be sent over the wire; if a key or value needs to be\npercent-encoded, then it MUST appear percent-encoded in this list."
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of HTTP headers to include in the request"
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The HTTP message body to include in the request"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedRequestTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpMalformedRequestTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "request": {
                    "target": "smithy.test#HttpMalformedRequestDefinition",
                    "traits": {
                        "smithy.api#documentation": "The malformed request to send.",
                        "smithy.api#required": {}
                    }
                },
                "response": {
                    "target": "smithy.test#HttpMalformedResponseDefinition",
                    "traits": {
                        "smithy.api#documentation": "The expected response.",
                        "smithy.api#required": {}
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "testParameters": {
                    "target": "smithy.test#HttpMalformedRequestTestParametersDefinition",
                    "traits": {
                        "smithy.api#documentation": "An optional set of test parameters for parameterized testing."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedRequestTestParametersDefinition": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.test#StringList"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseBodyAssertion": {
            "type": "union",
            "members": {
                "contents": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the expected serialized response body, which will be matched\nexactly."
                    }
                },
                "messageRegex": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A regex to evaluate against the `message` field in the body. For\nresponses that may have some variance from platform to platform,\nsuch as those that include messages from a parser."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseBodyDefinition": {
            "type": "structure",
            "members": {
                "assertion": {
                    "target": "smithy.test#HttpMalformedResponseBodyAssertion",
                    "traits": {
                        "smithy.api#documentation": "The assertion to execute against the response body.",
                        "smithy.api#required": {}
                    }
                },
                "mediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the response body.\n\nThis is used to help test runners to parse and evaluate\n`contents' and `messageRegex` in the assertion",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseDefinition": {
            "type": "structure",
            "members": {
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of expected HTTP headers.\n\nHeaders that are not listed in this map are ignored."
                    }
                },
                "code": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP response code.",
                        "smithy.api#range": {
                            "min": 100,
                            "max": 599
                        },
                        "smithy.api#required": {}
                    }
                },
                "body": {
                    "target": "smithy.test#HttpMalformedResponseBodyDefinition",
                    "traits": {
                        "smithy.api#documentation": "The expected response body."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpRequestTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpRequestTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "method": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected serialized HTTP request method.",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The request-target of the HTTP request, not including\nthe query string (for example, \"/foo/bar\").",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "host": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint provided to the client, not including the path\nor scheme (for example, \"example.com\")."
                    }
                },
                "resolvedHost": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint that the client should send to, not including\nthe path or scheme (for example, \"prefix.example.com\").\n\nThis can differ from the host provided to the client if the `hostPrefix`\nmember of the `endpoint` trait is set, for instance."
                    }
                },
                "authScheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The optional authentication scheme shape ID to assume. It's\npossible that specific authentication schemes might influence\nthe serialization logic of an HTTP request.",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true
                        }
                    }
                },
                "queryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the expected serialized query string parameters.\n\nEach element in the list is a query string key value pair\nthat starts with the query string parameter name optionally\nfollowed by \"=\", optionally followed by the query string\nparameter value. For example, \"foo=bar\", \"foo=\", and \"foo\"\nare all valid values. The query string parameter name and\nthe value MUST appear in the format in which it is expected\nto be sent over the wire; if a key or value needs to be\npercent-encoded, then it MUST appear percent-encoded in this list.\n\nA serialized HTTP request is not in compliance with the protocol\nif any query string parameter defined in `queryParams` is not\ndefined in the request or if the value of a query string parameter\nin the request differs from the expected value.\n\n`queryParams` applies no constraints on additional query parameters."
                    }
                },
                "forbidQueryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of query string parameter names that must not appear in the\nserialized HTTP request.\n\nEach value MUST appear in the format in which it is sent over the\nwire; if a key needs to be percent-encoded, then it MUST appear\npercent-encoded in this list."
                    }
                },
                "requireQueryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of query string parameter names that MUST appear in the\nserialized request URI, but no assertion is made on the value.\n\nEach value MUST appear in the format in which it is sent over the\nwire; if a key needs to be percent-encoded, then it MUST appear\npercent-encoded in this list."
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of expected HTTP headers.\n\nHeaders that are not listed in this map are ignored unless they are\nexplicitly forbidden through `forbidHeaders`."
                    }
                },
                "forbidHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must not appear in the serialized\nHTTP request."
                    }
                },
                "requireHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must appear in the serialized\nHTTP message, but no assertion is made on the value.\n\nHeaders listed in `headers` do not need to appear in this list."
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected HTTP message body.\n\nIf no request body is defined, then no assertions are made about\nthe body of the message."
                    }
                },
                "bodyMediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the `body`.\n\nThis is used to help test runners to parse and validate the expected\ndata against generated data."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the input parameters used to generated the HTTP request.\n\nThese parameters MUST be compatible with the input of the operation."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nrequest. For example, some vendors might utilize environment\nvariables, configuration files on disk, or other means to influence\nthe serialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible\nwith that shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A shape to be used to validate the `vendorParams` member contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "appliesTo": {
                    "target": "smithy.test#AppliesTo",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the test case is only to be implemented by \"client\" or\n\"server\" implementations. This property is useful for identifying and\ntesting edge cases of clients and servers that are impossible or\nundesirable to test in *both* client and server implementations."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpResponseTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpResponseTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The shape ID of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "code": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP response code.",
                        "smithy.api#range": {
                            "min": 100,
                            "max": 599
                        },
                        "smithy.api#required": {}
                    }
                },
                "authScheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The optional authentication scheme shape ID to assume. It's possible\nthat specific authentication schemes might influence the serialization\nlogic of an HTTP response.",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true
                        }
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "A map of expected HTTP headers. Each key represents a header field\nname and each value represents the expected header value. An HTTP\nresponse is not in compliance with the protocol if any listed header\nis missing from the serialized response or if the expected header\nvalue differs from the serialized response value.\n\n`headers` applies no constraints on additional headers."
                    }
                },
                "forbidHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must not appear."
                    }
                },
                "requireHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must appear in the serialized\nHTTP message, but no assertion is made on the value.\n\nHeaders listed in `headers` map do not need to appear in this list."
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP message body.\n\nIf no response body is defined, then no assertions are made about\nthe body of the message."
                    }
                },
                "bodyMediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the `body`.\n\nThis is used to help test runners to parse and validate the expected\ndata against generated data. Binary media type formats require that\nthe contents of `body` are base64 encoded."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the output parameters deserialized from the HTTP response.\n\nThese parameters MUST be compatible with the output of the operation."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nresponse. For example, some vendors might utilize environment\nvariables, configuration files on disk, or other means to influence\nthe serialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible\nwith that shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A shape to be used to validate the `vendorParams` member contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "appliesTo": {
                    "target": "smithy.test#AppliesTo",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the test case is only to be implemented by \"client\" or\n\"server\" implementations. This property is useful for identifying and\ntesting edge cases of clients and servers that are impossible or\nundesirable to test in *both* client and server implementations."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.iam#IamIdentifier": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^([A-Za-z0-9][A-Za-z0-9-\\.]{0,62}:[^:]+)$",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IamRoleArn": {
            "type": "string",
            "traits": {
                "aws.api#arnReference": {
                    "type": "AWS::IAM::Role"
                },
                "smithy.api#documentation": "<p>The ARN of the IAM role to assume with invoking the integration.</p><p>This string MAY contain the literal string <code>{serviceName}</code> and/or the literal string <code>{operationName}</code>, which will be replaced with the name of the Smithy service shape and the name of the Smithy operation shape, respectively.</p>",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#IntegerList": {
            "type": "list",
            "member": {
                "target": "smithy.api#Integer"
            }
        },
        "aws.protocoltests.shared#IntegerSet": {
            "type": "list",
            "member": {
                "target": "smithy.api#Integer"
            },
            "traits": {
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.apigateway#IntegrationResponse": {
            "type": "structure",
            "members": {
                "statusCode": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "HTTP status code for the method response; for example, \"200\". This must correspond to a matching response in the OpenAPI Operation responses field."
                    }
                },
                "contentHandling": {
                    "target": "aws.apigateway#ContentHandling"
                },
                "responseTemplates": {
                    "target": "aws.apigateway#Templates"
                },
                "responseParameters": {
                    "target": "aws.apigateway#ResponseParameters"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines a response and specifies parameter mappings.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationResponses": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.apigateway#IntegrationResponse"
            },
            "traits": {
                "smithy.api#documentation": "A map of response identifiers to responses.",
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#IntegrationType": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "aws",
                        "name": "AWS"
                    },
                    {
                        "value": "aws_proxy",
                        "name": "AWS_PROXY"
                    },
                    {
                        "value": "http",
                        "name": "HTTP"
                    },
                    {
                        "value": "http_proxy",
                        "name": "HTTP_PROXY"
                    }
                ]
            }
        },
        "com.amazonaws.machinelearning#InternalServerException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.machinelearning#ErrorMessage"
                },
                "code": {
                    "target": "com.amazonaws.machinelearning#ErrorCode"
                }
            },
            "traits": {
                "smithy.api#error": "server",
                "smithy.api#httpError": 500
            }
        },
        "aws.protocoltests.json#InvalidGreeting": {
            "type": "structure",
            "members": {
                "Message": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "This error is thrown when an invalid greeting value is provided.",
                "smithy.api#error": "client",
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11InvalidGreetingError",
                        "documentation": "Parses simple JSON errors",
                        "protocol": "aws.protocols#awsJson1_1",
                        "params": {
                            "Message": "Hi"
                        },
                        "code": 400,
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "body": "{\n    \"__type\": \"InvalidGreeting\",\n    \"Message\": \"Hi\"\n}",
                        "bodyMediaType": "application/json"
                    }
                ]
            }
        },
        "com.amazonaws.machinelearning#InvalidInputException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.machinelearning#ErrorMessage"
                },
                "code": {
                    "target": "com.amazonaws.machinelearning#ErrorCode"
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 400
            }
        },
        "aws.protocoltests.shared#JpegBlob": {
            "type": "blob",
            "traits": {
                "smithy.api#mediaType": "image/jpeg"
            }
        },
        "aws.protocoltests.json#JsonEnums": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#JsonEnumsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.json#JsonEnumsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This example serializes enums as top level properties, in lists, sets, and maps.",
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11Enums",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"fooEnum1\": \"Foo\",\n    \"fooEnum2\": \"0\",\n    \"fooEnum3\": \"1\",\n    \"fooEnumList\": [\n        \"Foo\",\n        \"0\"\n    ],\n    \"fooEnumSet\": [\n        \"Foo\",\n        \"0\"\n    ],\n    \"fooEnumMap\": {\n        \"hi\": \"Foo\",\n        \"zero\": \"0\"\n    }\n}",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "bodyMediaType": "application/json",
                        "params": {
                            "fooEnum1": "Foo",
                            "fooEnum2": "0",
                            "fooEnum3": "1",
                            "fooEnumList": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumSet": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumMap": {
                                "hi": "Foo",
                                "zero": "0"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11Enums",
                        "documentation": "Serializes simple scalar properties",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"fooEnum1\": \"Foo\",\n    \"fooEnum2\": \"0\",\n    \"fooEnum3\": \"1\",\n    \"fooEnumList\": [\n        \"Foo\",\n        \"0\"\n    ],\n    \"fooEnumSet\": [\n        \"Foo\",\n        \"0\"\n    ],\n    \"fooEnumMap\": {\n        \"hi\": \"Foo\",\n        \"zero\": \"0\"\n    }\n}",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "bodyMediaType": "application/json",
                        "params": {
                            "fooEnum1": "Foo",
                            "fooEnum2": "0",
                            "fooEnum3": "1",
                            "fooEnumList": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumSet": [
                                "Foo",
                                "0"
                            ],
                            "fooEnumMap": {
                                "hi": "Foo",
                                "zero": "0"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.json#JsonEnumsInputOutput": {
            "type": "structure",
            "members": {
                "fooEnum1": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "fooEnum2": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "fooEnum3": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "fooEnumList": {
                    "target": "aws.protocoltests.shared#FooEnumList"
                },
                "fooEnumSet": {
                    "target": "aws.protocoltests.shared#FooEnumSet"
                },
                "fooEnumMap": {
                    "target": "aws.protocoltests.shared#FooEnumMap"
                }
            }
        },
        "aws.protocoltests.json#JsonProtocol": {
            "type": "service",
            "traits": {
                "aws.api#service": {
                    "sdkId": "Json Protocol",
                    "arnNamespace": "jsonprotocol",
                    "cloudFormationName": "JsonProtocol",
                    "cloudTrailEventSource": "jsonprotocol.amazonaws.com"
                },
                "aws.auth#sigv4": {
                    "name": "foo"
                },
                "aws.protocols#awsJson1_1": {},
                "smithy.api#title": "Sample Json 1.1 Protocol Service"
            },
            "version": "2018-01-01",
            "operations": [
                {
                    "target": "aws.protocoltests.json#EmptyOperation"
                },
                {
                    "target": "aws.protocoltests.json#EndpointOperation"
                },
                {
                    "target": "aws.protocoltests.json#EndpointWithHostLabelOperation"
                },
                {
                    "target": "aws.protocoltests.json#GreetingWithErrors"
                },
                {
                    "target": "aws.protocoltests.json#HostWithPathOperation"
                },
                {
                    "target": "aws.protocoltests.json#JsonEnums"
                },
                {
                    "target": "aws.protocoltests.json#JsonUnions"
                },
                {
                    "target": "aws.protocoltests.json#KitchenSinkOperation"
                },
                {
                    "target": "aws.protocoltests.json#NullOperation"
                },
                {
                    "target": "aws.protocoltests.json#OperationWithOptionalInputOutput"
                },
                {
                    "target": "aws.protocoltests.json#PutAndGetInlineDocuments"
                },
                {
                    "target": "aws.protocoltests.json#SimpleScalarProperties"
                }
            ]
        },
        "aws.protocoltests.json#JsonUnions": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#UnionInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.json#UnionInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This operation uses unions for inputs and outputs.",
                "smithy.api#idempotent": {},
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11SerializeStringUnionValue",
                        "documentation": "Serializes a string union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"stringValue\": \"foo\"\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "stringValue": "foo"
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeBooleanUnionValue",
                        "documentation": "Serializes a boolean union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"booleanValue\": true\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "booleanValue": true
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeNumberUnionValue",
                        "documentation": "Serializes a number union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"numberValue\": 1\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "numberValue": 1
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeBlobUnionValue",
                        "documentation": "Serializes a blob union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"blobValue\": \"Zm9v\"\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "blobValue": "foo"
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeTimestampUnionValue",
                        "documentation": "Serializes a timestamp union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"timestampValue\": 1398796238\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "timestampValue": 1398796238
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeEnumUnionValue",
                        "documentation": "Serializes an enum union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"enumValue\": \"Foo\"\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "enumValue": "Foo"
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeListUnionValue",
                        "documentation": "Serializes a list union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"listValue\": [\"foo\", \"bar\"]\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "listValue": [
                                    "foo",
                                    "bar"
                                ]
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeMapUnionValue",
                        "documentation": "Serializes a map union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"mapValue\": {\n            \"foo\": \"bar\",\n            \"spam\": \"eggs\"\n        }\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "mapValue": {
                                    "foo": "bar",
                                    "spam": "eggs"
                                }
                            }
                        }
                    },
                    {
                        "id": "AwsJson11SerializeStructureUnionValue",
                        "documentation": "Serializes a structure union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"contents\": {\n        \"structureValue\": {\n            \"hi\": \"hello\"\n        }\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.JsonUnions"
                        },
                        "params": {
                            "contents": {
                                "structureValue": {
                                    "hi": "hello"
                                }
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11DeserializeStringUnionValue",
                        "documentation": "Deserializes a string union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"stringValue\": \"foo\"\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "stringValue": "foo"
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeBooleanUnionValue",
                        "documentation": "Deserializes a boolean union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"booleanValue\": true\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "booleanValue": true
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeNumberUnionValue",
                        "documentation": "Deserializes a number union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"numberValue\": 1\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "numberValue": 1
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeBlobUnionValue",
                        "documentation": "Deserializes a blob union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"blobValue\": \"Zm9v\"\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "blobValue": "foo"
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeTimestampUnionValue",
                        "documentation": "Deserializes a timestamp union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"timestampValue\": 1398796238\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "timestampValue": 1398796238
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeEnumUnionValue",
                        "documentation": "Deserializes an enum union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"enumValue\": \"Foo\"\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "enumValue": "Foo"
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeListUnionValue",
                        "documentation": "Deserializes a list union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"listValue\": [\"foo\", \"bar\"]\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "listValue": [
                                    "foo",
                                    "bar"
                                ]
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeMapUnionValue",
                        "documentation": "Deserializes a map union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"mapValue\": {\n            \"foo\": \"bar\",\n            \"spam\": \"eggs\"\n        }\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "mapValue": {
                                    "foo": "bar",
                                    "spam": "eggs"
                                }
                            }
                        }
                    },
                    {
                        "id": "AwsJson11DeserializeStructureUnionValue",
                        "documentation": "Deserializes a structure union value",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"contents\": {\n        \"structureValue\": {\n            \"hi\": \"hello\"\n        }\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "contents": {
                                "structureValue": {
                                    "hi": "hello"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.json#JsonValue": {
            "type": "string",
            "traits": {
                "smithy.api#mediaType": "application/json"
            }
        },
        "aws.protocoltests.json#KitchenSink": {
            "type": "structure",
            "members": {
                "Blob": {
                    "target": "smithy.api#Blob"
                },
                "Boolean": {
                    "target": "smithy.api#Boolean"
                },
                "Double": {
                    "target": "smithy.api#Double"
                },
                "EmptyStruct": {
                    "target": "aws.protocoltests.json#EmptyStruct"
                },
                "Float": {
                    "target": "smithy.api#Float"
                },
                "HttpdateTimestamp": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "http-date"
                    }
                },
                "Integer": {
                    "target": "smithy.api#Integer"
                },
                "Iso8601Timestamp": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "date-time"
                    }
                },
                "JsonValue": {
                    "target": "aws.protocoltests.json#JsonValue"
                },
                "ListOfLists": {
                    "target": "aws.protocoltests.json#ListOfListOfStrings"
                },
                "ListOfMapsOfStrings": {
                    "target": "aws.protocoltests.json#ListOfMapsOfStrings"
                },
                "ListOfStrings": {
                    "target": "aws.protocoltests.json#ListOfStrings"
                },
                "ListOfStructs": {
                    "target": "aws.protocoltests.json#ListOfStructs"
                },
                "Long": {
                    "target": "smithy.api#Long"
                },
                "MapOfListsOfStrings": {
                    "target": "aws.protocoltests.json#MapOfListsOfStrings"
                },
                "MapOfMaps": {
                    "target": "aws.protocoltests.json#MapOfMapOfStrings"
                },
                "MapOfStrings": {
                    "target": "aws.protocoltests.json#MapOfStrings"
                },
                "MapOfStructs": {
                    "target": "aws.protocoltests.json#MapOfStructs"
                },
                "RecursiveList": {
                    "target": "aws.protocoltests.json#ListOfKitchenSinks"
                },
                "RecursiveMap": {
                    "target": "aws.protocoltests.json#MapOfKitchenSinks"
                },
                "RecursiveStruct": {
                    "target": "aws.protocoltests.json#KitchenSink"
                },
                "SimpleStruct": {
                    "target": "aws.protocoltests.json#SimpleStruct"
                },
                "String": {
                    "target": "smithy.api#String"
                },
                "StructWithJsonName": {
                    "target": "aws.protocoltests.json#StructWithJsonName"
                },
                "Timestamp": {
                    "target": "smithy.api#Timestamp"
                },
                "UnixTimestamp": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#timestampFormat": "epoch-seconds"
                    }
                }
            }
        },
        "aws.protocoltests.json#KitchenSinkOperation": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#KitchenSink"
            },
            "output": {
                "target": "aws.protocoltests.json#KitchenSink"
            },
            "errors": [
                {
                    "target": "aws.protocoltests.json#ErrorWithMembers"
                },
                {
                    "target": "aws.protocoltests.json#ErrorWithoutMembers"
                }
            ],
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "serializes_string_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes string shapes",
                        "body": "{\"String\":\"abc xyz\"}",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "bodyMediaType": "application/json",
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "String": "abc xyz"
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_string_shapes_with_jsonvalue_trait",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes string shapes with jsonvalue trait",
                        "body": "{\"JsonValue\":\"{\\\"string\\\":\\\"value\\\",\\\"number\\\":1234.5,\\\"boolTrue\\\":true,\\\"boolFalse\\\":false,\\\"array\\\":[1,2,3,4],\\\"object\\\":{\\\"key\\\":\\\"value\\\"},\\\"null\\\":null}\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "JsonValue": "{\"string\":\"value\",\"number\":1234.5,\"boolTrue\":true,\"boolFalse\":false,\"array\":[1,2,3,4],\"object\":{\"key\":\"value\"},\"null\":null}"
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_integer_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes integer shapes",
                        "body": "{\"Integer\":1234}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Integer": 1234
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_long_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes long shapes",
                        "body": "{\"Long\":999999999999}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Long": 999999999999
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_float_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes float shapes",
                        "body": "{\"Float\":1234.5}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Float": 1234.5
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_double_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes double shapes",
                        "body": "{\"Double\":1234.5}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Double": 1234.5
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_blob_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes blob shapes",
                        "body": "{\"Blob\":\"YmluYXJ5LXZhbHVl\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Blob": "binary-value"
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_boolean_shapes_true",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes boolean shapes (true)",
                        "body": "{\"Boolean\":true}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Boolean": true
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_boolean_shapes_false",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes boolean shapes (false)",
                        "body": "{\"Boolean\":false}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Boolean": false
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_timestamp_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes timestamp shapes",
                        "body": "{\"Timestamp\":946845296}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Timestamp": 946845296
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_timestamp_shapes_with_iso8601_timestampformat",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes timestamp shapes with iso8601 timestampFormat",
                        "body": "{\"Iso8601Timestamp\":\"2000-01-02T20:34:56Z\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "Iso8601Timestamp": 946845296
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_timestamp_shapes_with_httpdate_timestampformat",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes timestamp shapes with httpdate timestampFormat",
                        "body": "{\"HttpdateTimestamp\":\"Sun, 02 Jan 2000 20:34:56 GMT\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "HttpdateTimestamp": 946845296
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_timestamp_shapes_with_unixtimestamp_timestampformat",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes timestamp shapes with unixTimestamp timestampFormat",
                        "body": "{\"UnixTimestamp\":946845296}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "UnixTimestamp": 946845296
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_list_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes list shapes",
                        "body": "{\"ListOfStrings\":[\"abc\",\"mno\",\"xyz\"]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "ListOfStrings": [
                                "abc",
                                "mno",
                                "xyz"
                            ]
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_empty_list_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes empty list shapes",
                        "body": "{\"ListOfStrings\":[]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "ListOfStrings": []
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_list_of_map_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes list of map shapes",
                        "body": "{\"ListOfMapsOfStrings\":[{\"foo\":\"bar\"},{\"abc\":\"xyz\"},{\"red\":\"blue\"}]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "ListOfMapsOfStrings": [
                                {
                                    "foo": "bar"
                                },
                                {
                                    "abc": "xyz"
                                },
                                {
                                    "red": "blue"
                                }
                            ]
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_list_of_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes list of structure shapes",
                        "body": "{\"ListOfStructs\":[{\"Value\":\"abc\"},{\"Value\":\"mno\"},{\"Value\":\"xyz\"}]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "ListOfStructs": [
                                {
                                    "Value": "abc"
                                },
                                {
                                    "Value": "mno"
                                },
                                {
                                    "Value": "xyz"
                                }
                            ]
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_list_of_recursive_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes list of recursive structure shapes",
                        "body": "{\"RecursiveList\":[{\"RecursiveList\":[{\"RecursiveList\":[{\"Integer\":123}]}]}]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "RecursiveList": [
                                {
                                    "RecursiveList": [
                                        {
                                            "RecursiveList": [
                                                {
                                                    "Integer": 123
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_map_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes map shapes",
                        "body": "{\"MapOfStrings\":{\"abc\":\"xyz\",\"mno\":\"hjk\"}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "MapOfStrings": {
                                "abc": "xyz",
                                "mno": "hjk"
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_empty_map_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes empty map shapes",
                        "body": "{\"MapOfStrings\":{}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "MapOfStrings": {}
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_map_of_list_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes map of list shapes",
                        "body": "{\"MapOfListsOfStrings\":{\"abc\":[\"abc\",\"xyz\"],\"mno\":[\"xyz\",\"abc\"]}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "MapOfListsOfStrings": {
                                "abc": [
                                    "abc",
                                    "xyz"
                                ],
                                "mno": [
                                    "xyz",
                                    "abc"
                                ]
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_map_of_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes map of structure shapes",
                        "body": "{\"MapOfStructs\":{\"key1\":{\"Value\":\"value-1\"},\"key2\":{\"Value\":\"value-2\"}}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "MapOfStructs": {
                                "key1": {
                                    "Value": "value-1"
                                },
                                "key2": {
                                    "Value": "value-2"
                                }
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_map_of_recursive_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes map of recursive structure shapes",
                        "body": "{\"RecursiveMap\":{\"key1\":{\"RecursiveMap\":{\"key2\":{\"RecursiveMap\":{\"key3\":{\"Boolean\":false}}}}}}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "RecursiveMap": {
                                "key1": {
                                    "RecursiveMap": {
                                        "key2": {
                                            "RecursiveMap": {
                                                "key3": {
                                                    "Boolean": false
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes structure shapes",
                        "body": "{\"SimpleStruct\":{\"Value\":\"abc\"}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "SimpleStruct": {
                                "Value": "abc"
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_structure_members_with_locationname_traits",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes structure members with locationName traits",
                        "body": "{\"StructWithJsonName\":{\"Value\":\"some-value\"}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "StructWithJsonName": {
                                "Value": "some-value"
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_empty_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes empty structure shapes",
                        "body": "{\"SimpleStruct\":{}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "SimpleStruct": {}
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_structure_which_have_no_members",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes structure which have no members",
                        "body": "{\"EmptyStruct\":{}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "EmptyStruct": {}
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "serializes_recursive_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Serializes recursive structure shapes",
                        "body": "{\"String\":\"top-value\",\"Boolean\":false,\"RecursiveStruct\":{\"String\":\"nested-value\",\"Boolean\":true,\"RecursiveList\":[{\"String\":\"string-only\"},{\"RecursiveStruct\":{\"MapOfStrings\":{\"color\":\"red\",\"size\":\"large\"}}}]}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "String": "top-value",
                            "Boolean": false,
                            "RecursiveStruct": {
                                "String": "nested-value",
                                "Boolean": true,
                                "RecursiveList": [
                                    {
                                        "String": "string-only"
                                    },
                                    {
                                        "RecursiveStruct": {
                                            "MapOfStrings": {
                                                "color": "red",
                                                "size": "large"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "parses_operations_with_empty_json_bodies",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses operations with empty JSON bodies",
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_string_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses string shapes",
                        "body": "{\"String\":\"string-value\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "String": "string-value"
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_integer_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses integer shapes",
                        "body": "{\"Integer\":1234}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Integer": 1234
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_long_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses long shapes",
                        "body": "{\"Long\":1234567890123456789}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Long": 1234567890123456789
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_float_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses float shapes",
                        "body": "{\"Float\":1234.5}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Float": 1234.5
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_double_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses double shapes",
                        "body": "{\"Double\":123456789.12345679}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Double": 1.2345678912345679E8
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_boolean_shapes_true",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses boolean shapes (true)",
                        "body": "{\"Boolean\":true}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Boolean": true
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_boolean_false",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses boolean (false)",
                        "body": "{\"Boolean\":false}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Boolean": false
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_blob_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses blob shapes",
                        "body": "{\"Blob\":\"YmluYXJ5LXZhbHVl\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Blob": "binary-value"
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_timestamp_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses timestamp shapes",
                        "body": "{\"Timestamp\":946845296}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Timestamp": 946845296
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_iso8601_timestamps",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses iso8601 timestamps",
                        "body": "{\"Iso8601Timestamp\":\"2000-01-02T20:34:56.000Z\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "Iso8601Timestamp": 946845296
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_httpdate_timestamps",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses httpdate timestamps",
                        "body": "{\"HttpdateTimestamp\":\"Sun, 02 Jan 2000 20:34:56.000 GMT\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "HttpdateTimestamp": 946845296
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_list_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses list shapes",
                        "body": "{\"ListOfStrings\":[\"abc\",\"mno\",\"xyz\"]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "ListOfStrings": [
                                "abc",
                                "mno",
                                "xyz"
                            ]
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_list_of_map_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses list of map shapes",
                        "body": "{\"ListOfMapsOfStrings\":[{\"size\":\"large\"},{\"color\":\"red\"}]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "ListOfMapsOfStrings": [
                                {
                                    "size": "large"
                                },
                                {
                                    "color": "red"
                                }
                            ]
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_list_of_list_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses list of list shapes",
                        "body": "{\"ListOfLists\":[[\"abc\",\"mno\",\"xyz\"],[\"hjk\",\"qrs\",\"tuv\"]]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "ListOfLists": [
                                [
                                    "abc",
                                    "mno",
                                    "xyz"
                                ],
                                [
                                    "hjk",
                                    "qrs",
                                    "tuv"
                                ]
                            ]
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_list_of_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses list of structure shapes",
                        "body": "{\"ListOfStructs\":[{\"Value\":\"value-1\"},{\"Value\":\"value-2\"}]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "ListOfStructs": [
                                {
                                    "Value": "value-1"
                                },
                                {
                                    "Value": "value-2"
                                }
                            ]
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_list_of_recursive_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses list of recursive structure shapes",
                        "body": "{\"RecursiveList\":[{\"RecursiveList\":[{\"RecursiveList\":[{\"String\":\"value\"}]}]}]}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "RecursiveList": [
                                {
                                    "RecursiveList": [
                                        {
                                            "RecursiveList": [
                                                {
                                                    "String": "value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_map_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses map shapes",
                        "body": "{\"MapOfStrings\":{\"size\":\"large\",\"color\":\"red\"}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "MapOfStrings": {
                                "size": "large",
                                "color": "red"
                            }
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_map_of_list_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses map of list shapes",
                        "body": "{\"MapOfListsOfStrings\":{\"sizes\":[\"large\",\"small\"],\"colors\":[\"red\",\"green\"]}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "MapOfListsOfStrings": {
                                "sizes": [
                                    "large",
                                    "small"
                                ],
                                "colors": [
                                    "red",
                                    "green"
                                ]
                            }
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_map_of_map_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses map of map shapes",
                        "body": "{\"MapOfMaps\":{\"sizes\":{\"large\":\"L\",\"medium\":\"M\"},\"colors\":{\"red\":\"R\",\"blue\":\"B\"}}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "MapOfMaps": {
                                "sizes": {
                                    "large": "L",
                                    "medium": "M"
                                },
                                "colors": {
                                    "red": "R",
                                    "blue": "B"
                                }
                            }
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_map_of_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses map of structure shapes",
                        "body": "{\"MapOfStructs\":{\"size\":{\"Value\":\"small\"},\"color\":{\"Value\":\"red\"}}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "MapOfStructs": {
                                "size": {
                                    "Value": "small"
                                },
                                "color": {
                                    "Value": "red"
                                }
                            }
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_map_of_recursive_structure_shapes",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses map of recursive structure shapes",
                        "body": "{\"RecursiveMap\":{\"key-1\":{\"RecursiveMap\":{\"key-2\":{\"RecursiveMap\":{\"key-3\":{\"String\":\"value\"}}}}}}}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "RecursiveMap": {
                                "key-1": {
                                    "RecursiveMap": {
                                        "key-2": {
                                            "RecursiveMap": {
                                                "key-3": {
                                                    "String": "value"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "code": 200
                    },
                    {
                        "id": "parses_the_request_id_from_the_response",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Parses the request id from the response",
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "X-Amzn-Requestid": "amazon-uniq-request-id",
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "code": 200
                    }
                ]
            }
        },
        "com.amazonaws.machinelearning#Label": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                }
            }
        },
        "com.amazonaws.machinelearning#LimitExceededException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.machinelearning#ErrorMessage"
                },
                "code": {
                    "target": "com.amazonaws.machinelearning#ErrorCode"
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 417
            }
        },
        "aws.protocoltests.json#ListOfKitchenSinks": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.json#KitchenSink"
            }
        },
        "aws.protocoltests.json#ListOfListOfStrings": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.json#ListOfStrings"
            }
        },
        "aws.protocoltests.json#ListOfMapsOfStrings": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.json#MapOfStrings"
            }
        },
        "aws.protocoltests.json#ListOfStrings": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            }
        },
        "aws.protocoltests.json#ListOfStructs": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.json#SimpleStruct"
            }
        },
        "aws.protocoltests.json#MapOfKitchenSinks": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.json#KitchenSink"
            }
        },
        "aws.protocoltests.json#MapOfListsOfStrings": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.json#ListOfStrings"
            }
        },
        "aws.protocoltests.json#MapOfMapOfStrings": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.json#MapOfStrings"
            }
        },
        "aws.protocoltests.json#MapOfStrings": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            }
        },
        "aws.protocoltests.json#MapOfStructs": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.json#SimpleStruct"
            }
        },
        "aws.protocoltests.json#MyUnion": {
            "type": "union",
            "members": {
                "stringValue": {
                    "target": "smithy.api#String"
                },
                "booleanValue": {
                    "target": "smithy.api#Boolean"
                },
                "numberValue": {
                    "target": "smithy.api#Integer"
                },
                "blobValue": {
                    "target": "smithy.api#Blob"
                },
                "timestampValue": {
                    "target": "smithy.api#Timestamp"
                },
                "enumValue": {
                    "target": "aws.protocoltests.shared#FooEnum"
                },
                "listValue": {
                    "target": "aws.protocoltests.shared#StringList"
                },
                "mapValue": {
                    "target": "aws.protocoltests.shared#StringMap"
                },
                "structureValue": {
                    "target": "aws.protocoltests.shared#GreetingStruct"
                }
            },
            "traits": {
                "smithy.api#documentation": "A union with a representative set of types for members."
            }
        },
        "aws.protocoltests.shared#NestedStringList": {
            "type": "list",
            "member": {
                "target": "aws.protocoltests.shared#StringList"
            },
            "traits": {
                "smithy.api#documentation": "A list of lists of strings."
            }
        },
        "smithy.test#NonEmptyString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.test#NonEmptyStringList": {
            "type": "list",
            "member": {
                "target": "smithy.test#NonEmptyString"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.json#NullOperation": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#NullOperationInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.json#NullOperationInputOutput"
            },
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11StructuresDontSerializeNullValues",
                        "documentation": "Null structure values are dropped",
                        "protocol": "aws.protocols#awsJson1_1",
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "string": null
                        },
                        "method": "POST",
                        "uri": "/",
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11ServersDontDeserializeNullStructureValues",
                        "documentation": "Null structure values are dropped",
                        "protocol": "aws.protocols#awsJson1_1",
                        "body": "{\n    \"string\": null\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {},
                        "method": "POST",
                        "uri": "/",
                        "appliesTo": "server"
                    },
                    {
                        "id": "AwsJson11MapsSerializeNullValues",
                        "documentation": "Serializes null values in maps",
                        "protocol": "aws.protocols#awsJson1_1",
                        "body": "{\n    \"sparseStringMap\": {\n        \"foo\": null\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "sparseStringMap": {
                                "foo": null
                            }
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "AwsJson11ListsSerializeNull",
                        "documentation": "Serializes null values in lists",
                        "protocol": "aws.protocols#awsJson1_1",
                        "body": "{\n    \"sparseStringList\": [\n        null\n    ]\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "sparseStringList": [
                                null
                            ]
                        },
                        "method": "POST",
                        "uri": "/"
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11StructuresDontDeserializeNullValues",
                        "documentation": "Null structure values are dropped",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"string\": null\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {},
                        "appliesTo": "client"
                    },
                    {
                        "id": "AwsJson11ServersDontSerializeNullStructureValues",
                        "documentation": "Null structure values are dropped",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "string": null
                        },
                        "appliesTo": "server"
                    },
                    {
                        "id": "AwsJson11MapsDeserializeNullValues",
                        "documentation": "Deserializes null values in maps",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"sparseStringMap\": {\n        \"foo\": null\n    }\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "sparseStringMap": {
                                "foo": null
                            }
                        }
                    },
                    {
                        "id": "AwsJson11ListsDeserializeNull",
                        "documentation": "Deserializes null values in lists",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"sparseStringList\": [\n        null\n    ]\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "sparseStringList": [
                                null
                            ]
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.json#NullOperationInputOutput": {
            "type": "structure",
            "members": {
                "string": {
                    "target": "smithy.api#String"
                },
                "sparseStringList": {
                    "target": "aws.protocoltests.shared#SparseStringList"
                },
                "sparseStringMap": {
                    "target": "aws.protocoltests.shared#SparseStringMap"
                }
            }
        },
        "aws.protocoltests.config#OperationConfig": {
            "type": "structure",
            "members": {
                "s3": {
                    "target": "aws.protocoltests.config#S3Config"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration that is set for the scope of a single operation."
            }
        },
        "aws.protocoltests.json#OperationWithOptionalInputOutput": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#OperationWithOptionalInputOutputInput"
            },
            "output": {
                "target": "aws.protocoltests.json#OperationWithOptionalInputOutputOutput"
            },
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "can_call_operation_with_no_input_or_output",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Can call operations with no input or output",
                        "body": "{}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.OperationWithOptionalInputOutput"
                        },
                        "method": "POST",
                        "uri": "/"
                    },
                    {
                        "id": "can_call_operation_with_optional_input",
                        "protocol": "aws.protocols#awsJson1_1",
                        "documentation": "Can invoke operations with optional input",
                        "body": "{\"Value\":\"Hi\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.OperationWithOptionalInputOutput"
                        },
                        "params": {
                            "Value": "Hi"
                        },
                        "method": "POST",
                        "uri": "/"
                    }
                ]
            }
        },
        "aws.protocoltests.json#OperationWithOptionalInputOutputInput": {
            "type": "structure",
            "members": {
                "Value": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "aws.protocoltests.json#OperationWithOptionalInputOutputOutput": {
            "type": "structure",
            "members": {
                "Value": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "aws.apigateway#PassThroughBehavior": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Defines the passThroughBehavior for the integration",
                "smithy.api#enum": [
                    {
                        "value": "when_no_templates",
                        "name": "WHEN_NO_TEMPLATES"
                    },
                    {
                        "value": "when_no_match",
                        "name": "WHEN_NO_MATCH"
                    },
                    {
                        "value": "never",
                        "name": "NEVER"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "com.amazonaws.machinelearning#Predict": {
            "type": "operation",
            "input": {
                "target": "com.amazonaws.machinelearning#PredictInput"
            },
            "output": {
                "target": "com.amazonaws.machinelearning#PredictOutput"
            },
            "errors": [
                {
                    "target": "com.amazonaws.machinelearning#InternalServerException"
                },
                {
                    "target": "com.amazonaws.machinelearning#InvalidInputException"
                },
                {
                    "target": "com.amazonaws.machinelearning#LimitExceededException"
                },
                {
                    "target": "com.amazonaws.machinelearning#PredictorNotMountedException"
                },
                {
                    "target": "com.amazonaws.machinelearning#ResourceNotFoundException"
                }
            ],
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "MachinelearningPredictEndpoint",
                        "documentation": "MachineLearning's api makes use of generated endpoints that the\ncustomer is then expected to use for the Predict operation. Having\nto alter the endpoint for a specific operation would be cumbersome,\nso an AWS client should be able to do it for them.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "host": "example.com",
                        "resolvedHost": "custom.example.com",
                        "body": "{\"MLModelId\": \"foo\", \"Record\": {}, \"PredictEndpoint\": \"https://custom.example.com/\"}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "MLModelId": "foo",
                            "Record": {},
                            "PredictEndpoint": "https://custom.example.com/"
                        }
                    }
                ]
            }
        },
        "com.amazonaws.machinelearning#PredictInput": {
            "type": "structure",
            "members": {
                "MLModelId": {
                    "target": "com.amazonaws.machinelearning#EntityId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "Record": {
                    "target": "com.amazonaws.machinelearning#Record",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "PredictEndpoint": {
                    "target": "com.amazonaws.machinelearning#VipURLUnvalidated",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#input": {}
            }
        },
        "com.amazonaws.machinelearning#PredictOutput": {
            "type": "structure",
            "members": {
                "Prediction": {
                    "target": "com.amazonaws.machinelearning#Prediction"
                }
            },
            "traits": {
                "smithy.api#output": {}
            }
        },
        "com.amazonaws.machinelearning#Prediction": {
            "type": "structure",
            "members": {
                "predictedLabel": {
                    "target": "com.amazonaws.machinelearning#Label"
                },
                "predictedValue": {
                    "target": "com.amazonaws.machinelearning#floatLabel"
                },
                "predictedScores": {
                    "target": "com.amazonaws.machinelearning#ScoreValuePerLabelMap"
                },
                "details": {
                    "target": "com.amazonaws.machinelearning#DetailsMap"
                }
            }
        },
        "com.amazonaws.machinelearning#PredictorNotMountedException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.machinelearning#ErrorMessage"
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 400
            }
        },
        "aws.iam#PrincipalType": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "An IAM policy principal type.",
                "smithy.api#enum": [
                    {
                        "value": "Root",
                        "name": "ROOT"
                    },
                    {
                        "value": "IAMUser",
                        "name": "IAM_USER"
                    },
                    {
                        "value": "IAMRole",
                        "name": "IAM_ROLE"
                    },
                    {
                        "value": "FederatedUser",
                        "name": "FEDERATED_USER"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.json#PutAndGetInlineDocuments": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#PutAndGetInlineDocumentsInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.json#PutAndGetInlineDocumentsInputOutput"
            },
            "traits": {
                "smithy.api#documentation": "This example serializes an inline document as part of the payload.",
                "smithy.test#httpRequestTests": [
                    {
                        "id": "PutAndGetInlineDocumentsInput",
                        "documentation": "Serializes inline documents in a JSON request.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"inlineDocument\": {\"foo\": \"bar\"}\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "requireHeaders": [
                            "Content-Length"
                        ],
                        "params": {
                            "inlineDocument": {
                                "foo": "bar"
                            }
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "PutAndGetInlineDocumentsInput",
                        "documentation": "Serializes inline documents in a JSON response.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"inlineDocument\": {\"foo\": \"bar\"}\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "inlineDocument": {
                                "foo": "bar"
                            }
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.json#PutAndGetInlineDocumentsInputOutput": {
            "type": "structure",
            "members": {
                "inlineDocument": {
                    "target": "aws.protocoltests.json#Document"
                }
            }
        },
        "com.amazonaws.machinelearning#Record": {
            "type": "map",
            "key": {
                "target": "com.amazonaws.machinelearning#VariableName"
            },
            "value": {
                "target": "com.amazonaws.machinelearning#VariableValue"
            }
        },
        "aws.apigateway#RequestParameters": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "<p>A mapping of integration request parameters to the API Gateway data mapping expression that should be used to populate the parameter.</p> <p><strong>Note:</strong> This feature is provided primarily to allow injecting static values and context variables for request parameters. Request data MAY be mapped to headers using the syntax described in <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html#mapping-response-parameters\">the API Gateway Developer Guide</a>; however, the data must be identified according to its location in the serialized request, which may differ from protocol to protocol. Here be dragons!</p>",
                "smithy.api#private": {}
            }
        },
        "com.amazonaws.machinelearning#ResourceNotFoundException": {
            "type": "structure",
            "members": {
                "message": {
                    "target": "com.amazonaws.machinelearning#ErrorMessage"
                },
                "code": {
                    "target": "com.amazonaws.machinelearning#ErrorCode"
                }
            },
            "traits": {
                "smithy.api#error": "client",
                "smithy.api#httpError": 404
            }
        },
        "aws.apigateway#ResponseParameters": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "Specifies parameter mappings for the response. Only the header and body parameters of the integration response can be mapped to the header parameters of the method.",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.config#RetryConfig": {
            "type": "structure",
            "members": {
                "mode": {
                    "target": "aws.protocoltests.config#RetryMode"
                },
                "max_attempts": {
                    "target": "smithy.api#Short"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration specific to retries."
            }
        },
        "aws.protocoltests.config#RetryMode": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Controls the strategy used for retries.",
                "smithy.api#enum": [
                    {
                        "value": "legacy",
                        "name": "LEGACY"
                    },
                    {
                        "value": "standard",
                        "name": "STANDARD"
                    },
                    {
                        "value": "adaptive",
                        "name": "ADAPTIVE"
                    }
                ]
            }
        },
        "aws.protocoltests.config#S3AddressingStyle": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Controls the S3 addressing bucket style.",
                "smithy.api#enum": [
                    {
                        "value": "auto",
                        "name": "AUTO"
                    },
                    {
                        "value": "path",
                        "name": "PATH"
                    },
                    {
                        "value": "virtual",
                        "name": "VIRTUAL"
                    }
                ]
            }
        },
        "aws.protocoltests.config#S3Config": {
            "type": "structure",
            "members": {
                "addressing_style": {
                    "target": "aws.protocoltests.config#S3AddressingStyle"
                },
                "use_accelerate_endpoint": {
                    "target": "smithy.api#Boolean"
                },
                "use_dualstack_endpoint": {
                    "target": "smithy.api#Boolean"
                }
            },
            "traits": {
                "smithy.api#documentation": "Configuration specific to S3."
            }
        },
        "aws.protocoltests.config#ScopedConfig": {
            "type": "structure",
            "members": {
                "environment": {
                    "target": "aws.protocoltests.config#EnvironmentConfig"
                },
                "configFile": {
                    "target": "aws.protocoltests.config#ConfigFile"
                },
                "credentialsFile": {
                    "target": "aws.protocoltests.config#ConfigFile"
                },
                "client": {
                    "target": "aws.protocoltests.config#ClientConfig"
                },
                "operation": {
                    "target": "aws.protocoltests.config#OperationConfig"
                }
            },
            "traits": {
                "smithy.api#documentation": "Config settings that are scoped to different sources, such as environment\nvariables or the AWS config file."
            }
        },
        "com.amazonaws.machinelearning#ScoreValue": {
            "type": "float"
        },
        "com.amazonaws.machinelearning#ScoreValuePerLabelMap": {
            "type": "map",
            "key": {
                "target": "com.amazonaws.machinelearning#Label"
            },
            "value": {
                "target": "com.amazonaws.machinelearning#ScoreValue"
            }
        },
        "aws.protocoltests.json#SimpleScalarProperties": {
            "type": "operation",
            "input": {
                "target": "aws.protocoltests.json#SimpleScalarPropertiesInputOutput"
            },
            "output": {
                "target": "aws.protocoltests.json#SimpleScalarPropertiesInputOutput"
            },
            "traits": {
                "smithy.test#httpRequestTests": [
                    {
                        "id": "AwsJson11SupportsNaNFloatInputs",
                        "documentation": "Supports handling NaN float values.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"floatValue\": \"NaN\",\n    \"doubleValue\": \"NaN\"\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.SimpleScalarProperties"
                        },
                        "params": {
                            "floatValue": "NaN",
                            "doubleValue": "NaN"
                        }
                    },
                    {
                        "id": "AwsJson11SupportsInfinityFloatInputs",
                        "documentation": "Supports handling Infinity float values.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"floatValue\": \"Infinity\",\n    \"doubleValue\": \"Infinity\"\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.SimpleScalarProperties"
                        },
                        "params": {
                            "floatValue": "Infinity",
                            "doubleValue": "Infinity"
                        }
                    },
                    {
                        "id": "AwsJson11SupportsNegativeInfinityFloatInputs",
                        "documentation": "Supports handling -Infinity float values.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "method": "POST",
                        "uri": "/",
                        "body": "{\n    \"floatValue\": \"-Infinity\",\n    \"doubleValue\": \"-Infinity\"\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1",
                            "X-Amz-Target": "JsonProtocol.SimpleScalarProperties"
                        },
                        "params": {
                            "floatValue": "-Infinity",
                            "doubleValue": "-Infinity"
                        }
                    }
                ],
                "smithy.test#httpResponseTests": [
                    {
                        "id": "AwsJson11SupportsNaNFloatInputs",
                        "documentation": "Supports handling NaN float values.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"floatValue\": \"NaN\",\n    \"doubleValue\": \"NaN\"\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "floatValue": "NaN",
                            "doubleValue": "NaN"
                        }
                    },
                    {
                        "id": "AwsJson11SupportsInfinityFloatInputs",
                        "documentation": "Supports handling Infinity float values.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"floatValue\": \"Infinity\",\n    \"doubleValue\": \"Infinity\"\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "floatValue": "Infinity",
                            "doubleValue": "Infinity"
                        }
                    },
                    {
                        "id": "AwsJson11SupportsNegativeInfinityFloatInputs",
                        "documentation": "Supports handling -Infinity float values.",
                        "protocol": "aws.protocols#awsJson1_1",
                        "code": 200,
                        "body": "{\n    \"floatValue\": \"-Infinity\",\n    \"doubleValue\": \"-Infinity\"\n}",
                        "bodyMediaType": "application/json",
                        "headers": {
                            "Content-Type": "application/x-amz-json-1.1"
                        },
                        "params": {
                            "floatValue": "-Infinity",
                            "doubleValue": "-Infinity"
                        }
                    }
                ]
            }
        },
        "aws.protocoltests.json#SimpleScalarPropertiesInputOutput": {
            "type": "structure",
            "members": {
                "floatValue": {
                    "target": "smithy.api#Float"
                },
                "doubleValue": {
                    "target": "smithy.api#Double"
                }
            }
        },
        "aws.protocoltests.json#SimpleStruct": {
            "type": "structure",
            "members": {
                "Value": {
                    "target": "smithy.api#String"
                }
            }
        },
        "aws.protocoltests.shared#SparseStringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#sparse": {}
            }
        },
        "aws.protocoltests.shared#SparseStringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#sparse": {}
            }
        },
        "smithy.test#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            }
        },
        "aws.auth#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            }
        },
        "aws.protocoltests.shared#StringListMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.protocoltests.shared#StringList"
            }
        },
        "aws.protocoltests.shared#StringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            }
        },
        "smithy.test#StringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#StringSet": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#uniqueItems": {}
            }
        },
        "aws.protocoltests.json#StructWithJsonName": {
            "type": "structure",
            "members": {
                "Value": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#jsonName": "RenamedMember"
                    }
                }
            }
        },
        "aws.cloudformation#StructureIdList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String",
                "traits": {
                    "smithy.api#idRef": {
                        "failWhenMissing": true,
                        "selector": "structure"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.apigateway#Templates": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#documentation": "<p>A map of MIME types to velocity templates allowing you to craft a new integration message from received data.</p><p><strong>Note:</strong> This feature is provided primarily to allow injecting static values and context variables for request parameters. Request data MAY be mapped to headers using the syntax described in <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/request-response-data-mappings.html#mapping-response-parameters\">the API Gateway Developer Guide</a>; however, the data must be identified according to its location in the serialized request, which may differ from protocol to protocol. Here be dragons!</p>",
                "smithy.api#private": {}
            }
        },
        "aws.protocoltests.shared#TextPlainBlob": {
            "type": "blob",
            "traits": {
                "smithy.api#mediaType": "text/plain"
            }
        },
        "aws.protocoltests.shared#TimestampList": {
            "type": "list",
            "member": {
                "target": "smithy.api#Timestamp"
            }
        },
        "aws.protocoltests.json#UnionInputOutput": {
            "type": "structure",
            "members": {
                "contents": {
                    "target": "aws.protocoltests.json#MyUnion"
                }
            },
            "traits": {
                "smithy.api#documentation": "A shared structure that contains a single union member."
            }
        },
        "com.amazonaws.machinelearning#VariableName": {
            "type": "string"
        },
        "com.amazonaws.machinelearning#VariableValue": {
            "type": "string"
        },
        "com.amazonaws.machinelearning#VipURLUnvalidated": {
            "type": "string"
        },
        "aws.iam#actionPermissionDescription": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "A brief description of what granting the user permission to invoke an operation would entail. This description should begin with something similar to 'Enables the user to...' or 'Grants permission to...'",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.apigateway#apiKeySource": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Specifies the source of the caller identifier that will be used to throttle API methods that require a key.",
                "smithy.api#externalDocumentation": {
                    "Developer Guide": "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-swagger-extensions-api-key-source.html"
                },
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#arn": {
            "type": "structure",
            "members": {
                "template": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "absolute": {
                    "target": "smithy.api#Boolean"
                },
                "noRegion": {
                    "target": "smithy.api#Boolean"
                },
                "noAccount": {
                    "target": "smithy.api#Boolean"
                }
            },
            "traits": {
                "smithy.api#documentation": "Specifies an ARN template for the resource.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
                },
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.api#arnReference": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.api#String"
                },
                "resource": {
                    "target": "smithy.api#String"
                },
                "service": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Marks a string as containing an ARN.",
                "smithy.api#trait": {
                    "selector": "string"
                }
            }
        },
        "aws.apigateway#authorizer": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Attaches an authorizer to a service, resource, or operation.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)"
                }
            }
        },
        "aws.apigateway#authorizers": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "aws.apigateway#AuthorizerDefinition"
            },
            "traits": {
                "smithy.api#documentation": "A list of API Gateway authorizers to augment the service's declared authentication mechanisms.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_0": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_1": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsQuery": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as `x-www-form-urlencoded` strings and responses in XML documents. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "noInlineDocumentSupport": true,
                    "traits": [
                        "aws.protocols#awsQueryError",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                }
            }
        },
        "aws.protocols#awsQueryError": {
            "type": "structure",
            "members": {
                "code": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The value used to distinguish this error shape during serialization.",
                        "smithy.api#required": {}
                    }
                },
                "httpResponseCode": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The HTTP response code used on a response containing this error shape.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Provides the value in the 'Code' distinguishing field and HTTP response code for an operation error.",
                "smithy.api#trait": {
                    "selector": "structure [trait|error]",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.cloudformation#cfnAdditionalIdentifier": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the CloudFormation property generated from this member is an\nadditional identifier for the resource.",
                "smithy.api#trait": {
                    "selector": "structure > :test(member > string)",
                    "conflicts": [
                        "aws.cloudformation#cfnExcludeProperty"
                    ],
                    "breakingChanges": [
                        {
                            "change": "remove"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnExcludeProperty": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that a structure member should not be included in generated\nCloudFormation resource definitions.",
                "smithy.api#trait": {
                    "selector": "structure > member",
                    "conflicts": [
                        "aws.cloudformation#cfnAdditionalIdentifier",
                        "aws.cloudformation#cfnMutability"
                    ],
                    "breakingChanges": [
                        {
                            "change": "add"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnMutability": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates an explicit CloudFormation mutability of the structure member\nwhen part of a CloudFormation resource.",
                "smithy.api#enum": [
                    {
                        "value": "full",
                        "name": "FULL",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember does not have any mutability restrictions, meaning that it\ncan be specified by the user and returned in a `read` or `list`\nrequest."
                    },
                    {
                        "value": "create-and-read",
                        "name": "CREATE_AND_READ",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be specified only during resource creation and can be\nreturned in a `read` or `list` request."
                    },
                    {
                        "value": "create",
                        "name": "CREATE",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be specified only during resource creation and cannot\nbe returned in a `read` or `list` request. MUST NOT be set if the\nmember is also marked with the `@additionalIdentifier` trait."
                    },
                    {
                        "value": "read",
                        "name": "READ",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be returned by a `read` or `list` request, but\ncannot be set by the user."
                    },
                    {
                        "value": "write",
                        "name": "WRITE",
                        "documentation": "Indicates that the CloudFormation property generated from this\nmember can be specified by the user, but cannot be returned by a\n`read` or `list` request. MUST NOT be set if the member is also\nmarked with the `@additionalIdentifier` trait."
                    }
                ],
                "smithy.api#trait": {
                    "selector": "structure > member",
                    "conflicts": [
                        "aws.cloudformation#cfnExcludeProperty"
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "The cloudFormationName trait allows a CloudFormation resource property name\nto differ from a structure member name used in the model.",
                "smithy.api#trait": {
                    "selector": "structure > member",
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.cloudformation#cfnResource": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Provides a custom CloudFormation resource name."
                    }
                },
                "additionalSchemas": {
                    "target": "aws.cloudformation#StructureIdList",
                    "traits": {
                        "smithy.api#documentation": "A list of additional shape IDs of structures that will have their\nproperties added to the CloudFormation resource."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that a Smithy resource is a CloudFormation resource.",
                "smithy.api#trait": {
                    "selector": "resource",
                    "breakingChanges": [
                        {
                            "change": "presence"
                        }
                    ]
                },
                "smithy.api#unstable": {}
            }
        },
        "aws.api#clientDiscoveredEndpoint": {
            "type": "structure",
            "members": {
                "required": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that the target operation should use the client's endpoint discovery logic.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#clientEndpointDiscovery": {
            "type": "structure",
            "members": {
                "operation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the operation that clients should use to discover endpoints for the service.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "operation"
                        },
                        "smithy.api#required": {}
                    }
                },
                "error": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the error that tells clients that the endpoint they are using is no longer valid. This error MUST be bound to any operation bound to the service which is marked with the aws.api#clientDiscoveredEndpoint trait.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true,
                            "selector": "structure[trait|error]"
                        },
                        "smithy.api#recommended": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Configures endpoint discovery for the service.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#clientEndpointDiscoveryId": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates members of the operation input which should be use to discover endpoints.",
                "smithy.api#trait": {
                    "selector": "operation[trait|aws.api#clientDiscoveredEndpoint] -[input]-> structure > :test(member[trait|required] > string)"
                }
            }
        },
        "aws.auth#cognitoUserPools": {
            "type": "structure",
            "members": {
                "providerArns": {
                    "target": "aws.auth#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the Amazon Cognito user pool ARNs. Each element is of this format: arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {},
                "smithy.api#documentation": "Configures an Amazon Cognito User Pools auth scheme.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.iam#conditionKeys": {
            "type": "list",
            "member": {
                "target": "aws.iam#IamIdentifier"
            },
            "traits": {
                "smithy.api#documentation": "Applies condition keys by name to a resource or operation.",
                "smithy.api#trait": {
                    "selector": ":test(resource, operation)"
                }
            }
        },
        "aws.api#controlPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the control plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#dataPlane"
                    ]
                }
            }
        },
        "aws.api#data": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Designates the target as containing data of a known classification level.",
                "smithy.api#enum": [
                    {
                        "value": "content",
                        "name": "CUSTOMER_CONTENT",
                        "documentation": "Customer content means any software (including machine images), data, text, audio, video or images that customers or any customer end user transfers to AWS for processing, storage or hosting by AWS services in connection with the customer?s accounts and any computational results that customers or any customer end user derive from the foregoing through their use of AWS services."
                    },
                    {
                        "value": "account",
                        "name": "CUSTOMER_ACCOUNT_INFORMATION",
                        "documentation": "Account information means information about customers that customers provide to AWS in connection with the creation or administration of customers? accounts."
                    },
                    {
                        "value": "usage",
                        "name": "SERVICE_ATTRIBUTES",
                        "documentation": "Service Attributes means service usage data related to a customer?s account, such as resource identifiers, metadata tags, security and access roles, rules, usage policies, permissions, usage statistics, logging data, and analytics."
                    },
                    {
                        "value": "tagging",
                        "name": "TAG_DATA",
                        "documentation": "Designates metadata tags applied to AWS resources."
                    },
                    {
                        "value": "permissions",
                        "name": "PERMISSIONS_DATA",
                        "documentation": "Designates security and access roles, rules, usage policies, and permissions."
                    }
                ],
                "smithy.api#trait": {
                    "selector": ":test(simpleType, collection, structure, union, member)"
                }
            }
        },
        "aws.api#dataPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the data plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#controlPlane"
                    ]
                }
            }
        },
        "aws.iam#defineConditionKeys": {
            "type": "map",
            "key": {
                "target": "aws.iam#IamIdentifier"
            },
            "value": {
                "target": "aws.iam#ConditionKeyDefinition"
            },
            "traits": {
                "smithy.api#documentation": "Defines the set of condition keys that appear within a service in addition to inferred and global condition keys.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.iam#disableConditionKeyInference": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Disables the automatic inference of condition keys of a resource.",
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.protocols#ec2Query": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as Amazon EC2 formatted `x-www-form-urlencoded` strings and responses in XML documents. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "noInlineDocumentSupport": true,
                    "traits": [
                        "aws.protocols#ec2QueryName",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                }
            }
        },
        "aws.protocols#ec2QueryName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates the serialized name of a structure member when that structure is serialized for the input of an EC2 operation.",
                "smithy.api#pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                "smithy.api#trait": {
                    "selector": "structure > member"
                }
            }
        },
        "com.amazonaws.machinelearning#floatLabel": {
            "type": "float",
            "traits": {
                "smithy.api#box": {}
            }
        },
        "aws.protocols#httpChecksum": {
            "type": "structure",
            "members": {
                "requestAlgorithmMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member that is used to configure request checksum behavior."
                    }
                },
                "requestChecksumRequired": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates an operation requires a checksum in its HTTP request."
                    }
                },
                "requestValidationModeMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member used to opt-in to response checksum validation."
                    }
                },
                "responseAlgorithms": {
                    "target": "aws.protocols#ChecksumAlgorithmSet",
                    "traits": {
                        "smithy.api#documentation": "Defines the checksum algorithms clients should look for when performing HTTP response checksum validation."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation supports checksum validation.",
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#httpMalformedRequestTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpMalformedRequestTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how a malformed HTTP request is rejected by a server given a specific protocol",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#httpRequestTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpRequestTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how an HTTP request is serialized given a specific protocol,\nauthentication scheme, and set of input parameters.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "smithy.test#httpResponseTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpResponseTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how an HTTP response is serialized given a specific protocol,\nauthentication scheme, and set of output or error parameters.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": ":test(operation, structure[trait|error])"
                }
            }
        },
        "aws.iam#iamResource": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the resource in AWS IAM."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates properties of a Smithy resource in AWS IAM.",
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.apigateway#integration": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "aws.apigateway#IntegrationType",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "aws.apigateway#Arn",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "credentials": {
                    "target": "aws.apigateway#IamRoleArn"
                },
                "httpMethod": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "passThroughBehavior": {
                    "target": "aws.apigateway#PassThroughBehavior"
                },
                "contentHandling": {
                    "target": "aws.apigateway#ContentHandling"
                },
                "timeoutInMillis": {
                    "target": "smithy.api#Integer"
                },
                "connectionId": {
                    "target": "smithy.api#String"
                },
                "connectionType": {
                    "target": "aws.apigateway#ConnectionType"
                },
                "cacheNamespace": {
                    "target": "smithy.api#String"
                },
                "payloadFormatVersion": {
                    "target": "smithy.api#String"
                },
                "cacheKeyParameters": {
                    "target": "aws.apigateway#StringList"
                },
                "requestParameters": {
                    "target": "aws.apigateway#RequestParameters"
                },
                "requestTemplates": {
                    "target": "aws.apigateway#Templates"
                },
                "responses": {
                    "target": "aws.apigateway#IntegrationResponses"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an API Gateway integration.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.apigateway#mockIntegration"
                    ]
                }
            }
        },
        "aws.apigateway#mockIntegration": {
            "type": "structure",
            "members": {
                "passThroughBehavior": {
                    "target": "aws.apigateway#PassThroughBehavior"
                },
                "requestParameters": {
                    "target": "aws.apigateway#RequestParameters"
                },
                "requestTemplates": {
                    "target": "aws.apigateway#Templates"
                },
                "responses": {
                    "target": "aws.apigateway#IntegrationResponses"
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an API Gateway mock integration.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.apigateway#integration"
                    ]
                }
            }
        },
        "smithy.mqtt#mqttJson": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#protocolDefinition": {},
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "smithy.mqtt#publish": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[^#+]+$",
                "smithy.api#trait": {
                    "selector": "operation :not(-[output]-> * > member)",
                    "conflicts": [
                        "smithy.mqtt#subscribe"
                    ],
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.apigateway#requestValidator": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Selects which request validation strategy to use. One of: 'full', 'params-only', 'body-only'",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": ":test(service, operation)"
                }
            }
        },
        "aws.iam#requiredActions": {
            "type": "list",
            "member": {
                "target": "aws.iam#IamIdentifier"
            },
            "traits": {
                "smithy.api#documentation": "Other actions that the invoker must be authorized to perform when executing the targeted operation.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.protocols#restJson1": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "A RESTful protocol that sends JSON in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#restXml": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                },
                "noErrorWrapping": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#deprecated": {},
                        "smithy.api#documentation": "Disables the serialization wrapping of error properties in an 'Error' XML element."
                    }
                }
            },
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "A RESTful protocol that sends XML in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "noInlineDocumentSupport": true,
                    "traits": [
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.customizations#s3UnwrappedXmlOutput": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates the response body from S3 is not wrapped in the aws-restxml-protocol operation-level XML node. Intended to only be used by AWS S3.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#service": {
            "type": "structure",
            "members": {
                "sdkId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arnNamespace": {
                    "target": "aws.api#ArnNamespace"
                },
                "cloudFormationName": {
                    "target": "aws.api#CloudFormationName"
                },
                "cloudTrailEventSource": {
                    "target": "smithy.api#String"
                },
                "endpointPrefix": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4 service signing name to use in the credential scope when signing requests. This value SHOULD match the `arnNamespace` property of the `aws.api#service-trait`.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "Signature Version 4 is the process to add authentication information to AWS requests sent by HTTP. For security, most requests to AWS must be signed with an access key, which consists of an access key ID and secret access key. These two keys are commonly referred to as your security credentials.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "smithy.mqtt#subscribe": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[^#+]+$",
                "smithy.api#trait": {
                    "selector": "operation:test(-[output]-> structure > member > union[trait|streaming])",
                    "conflicts": [
                        "smithy.mqtt#publish"
                    ],
                    "breakingChanges": [
                        {
                            "change": "any"
                        }
                    ]
                }
            }
        },
        "aws.iam#supportedPrincipalTypes": {
            "type": "list",
            "member": {
                "target": "aws.iam#PrincipalType"
            },
            "traits": {
                "smithy.api#documentation": "The principal types that can use the service or operation.",
                "smithy.api#trait": {
                    "selector": ":test(service, operation)"
                }
            }
        },
        "smithy.mqtt#topicLabel": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#trait": {
                    "selector": "member[trait|required] :test(> :test(string, byte, short, integer, long, boolean, timestamp))"
                }
            }
        },
        "aws.auth#unsignedPayload": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the request payload of a signed request is not to be used as part of the signature.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        }
    }
}
