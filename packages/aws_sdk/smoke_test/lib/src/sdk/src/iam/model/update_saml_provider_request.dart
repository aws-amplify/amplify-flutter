// Generated with smithy-dart 0.3.1. DO NOT MODIFY.

library smoke_test.iam.model.update_saml_provider_request; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:aws_common/aws_common.dart' as _i2;
import 'package:built_value/built_value.dart';
import 'package:built_value/serializer.dart';
import 'package:smithy/smithy.dart' as _i1;

part 'update_saml_provider_request.g.dart';

abstract class UpdateSamlProviderRequest
    with
        _i1.HttpInput<UpdateSamlProviderRequest>,
        _i2.AWSEquatable<UpdateSamlProviderRequest>
    implements
        Built<UpdateSamlProviderRequest, UpdateSamlProviderRequestBuilder> {
  factory UpdateSamlProviderRequest({
    required String samlMetadataDocument,
    required String samlProviderArn,
  }) {
    return _$UpdateSamlProviderRequest._(
      samlMetadataDocument: samlMetadataDocument,
      samlProviderArn: samlProviderArn,
    );
  }

  factory UpdateSamlProviderRequest.build(
          [void Function(UpdateSamlProviderRequestBuilder) updates]) =
      _$UpdateSamlProviderRequest;

  const UpdateSamlProviderRequest._();

  factory UpdateSamlProviderRequest.fromRequest(
    UpdateSamlProviderRequest payload,
    _i2.AWSBaseHttpRequest request, {
    Map<String, String> labels = const {},
  }) =>
      payload;

  static const List<_i1.SmithySerializer> serializers = [
    UpdateSamlProviderRequestAwsQuerySerializer()
  ];

  @BuiltValueHook(initializeBuilder: true)
  static void _init(UpdateSamlProviderRequestBuilder b) {}

  /// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
  String get samlMetadataDocument;

  /// The Amazon Resource Name (ARN) of the SAML provider to update.
  ///
  /// For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the _Amazon Web Services General Reference_.
  String get samlProviderArn;
  @override
  UpdateSamlProviderRequest getPayload() => this;
  @override
  List<Object?> get props => [
        samlMetadataDocument,
        samlProviderArn,
      ];
  @override
  String toString() {
    final helper = newBuiltValueToStringHelper('UpdateSamlProviderRequest');
    helper.add(
      'samlMetadataDocument',
      samlMetadataDocument,
    );
    helper.add(
      'samlProviderArn',
      samlProviderArn,
    );
    return helper.toString();
  }
}

class UpdateSamlProviderRequestAwsQuerySerializer
    extends _i1.StructuredSmithySerializer<UpdateSamlProviderRequest> {
  const UpdateSamlProviderRequestAwsQuerySerializer()
      : super('UpdateSamlProviderRequest');

  @override
  Iterable<Type> get types => const [
        UpdateSamlProviderRequest,
        _$UpdateSamlProviderRequest,
      ];
  @override
  Iterable<_i1.ShapeId> get supportedProtocols => const [
        _i1.ShapeId(
          namespace: 'aws.protocols',
          shape: 'awsQuery',
        )
      ];
  @override
  UpdateSamlProviderRequest deserialize(
    Serializers serializers,
    Iterable<Object?> serialized, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final result = UpdateSamlProviderRequestBuilder();
    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current;
      iterator.moveNext();
      final value = iterator.current;
      switch (key as String) {
        case 'SAMLMetadataDocument':
          result.samlMetadataDocument = (serializers.deserialize(
            value!,
            specifiedType: const FullType(String),
          ) as String);
          break;
        case 'SAMLProviderArn':
          result.samlProviderArn = (serializers.deserialize(
            value!,
            specifiedType: const FullType(String),
          ) as String);
          break;
      }
    }

    return result.build();
  }

  @override
  Iterable<Object?> serialize(
    Serializers serializers,
    Object? object, {
    FullType specifiedType = FullType.unspecified,
  }) {
    final payload = (object as UpdateSamlProviderRequest);
    final result = <Object?>[
      const _i1.XmlElementName(
        'UpdateSamlProviderRequestResponse',
        _i1.XmlNamespace('https://iam.amazonaws.com/doc/2010-05-08/'),
      )
    ];
    result
      ..add(const _i1.XmlElementName('SAMLMetadataDocument'))
      ..add(serializers.serialize(
        payload.samlMetadataDocument,
        specifiedType: const FullType(String),
      ));
    result
      ..add(const _i1.XmlElementName('SAMLProviderArn'))
      ..add(serializers.serialize(
        payload.samlProviderArn,
        specifiedType: const FullType(String),
      ));
    return result;
  }
}
