// Mocks generated by Mockito 5.4.2 from annotations
// in aws_logging_cloudwatch/test/cloudwatch_logger_plugin_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:aws_common/aws_common.dart' as _i5;
import 'package:aws_logging_cloudwatch/aws_logging_cloudwatch.dart' as _i10;
import 'package:aws_logging_cloudwatch/src/queued_item_store/queued_item_store.dart'
    as _i8;
import 'package:aws_logging_cloudwatch/src/sdk/cloud_watch_logs.dart' as _i3;
import 'package:aws_logging_cloudwatch/src/sdk/src/cloud_watch_logs/model/create_log_stream_request.dart'
    as _i4;
import 'package:aws_logging_cloudwatch/src/sdk/src/cloud_watch_logs/model/put_log_events_request.dart'
    as _i7;
import 'package:aws_logging_cloudwatch/src/sdk/src/cloud_watch_logs/model/put_log_events_response.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:smithy/smithy.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSmithyOperation_0<Output> extends _i1.SmartFake
    implements _i2.SmithyOperation<Output> {
  _FakeSmithyOperation_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CloudWatchLogsClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudWatchLogsClient extends _i1.Mock
    implements _i3.CloudWatchLogsClient {
  MockCloudWatchLogsClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SmithyOperation<void> createLogStream(
    _i4.CreateLogStreamRequest? input, {
    _i5.AWSHttpClient? client,
    _i5.AWSCredentialsProvider? credentialsProvider,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLogStream,
          [input],
          {
            #client: client,
            #credentialsProvider: credentialsProvider,
          },
        ),
        returnValue: _FakeSmithyOperation_0<void>(
          this,
          Invocation.method(
            #createLogStream,
            [input],
            {
              #client: client,
              #credentialsProvider: credentialsProvider,
            },
          ),
        ),
      ) as _i2.SmithyOperation<void>);
  @override
  _i2.SmithyOperation<_i6.PutLogEventsResponse> putLogEvents(
    _i7.PutLogEventsRequest? input, {
    _i5.AWSHttpClient? client,
    _i5.AWSCredentialsProvider? credentialsProvider,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putLogEvents,
          [input],
          {
            #client: client,
            #credentialsProvider: credentialsProvider,
          },
        ),
        returnValue: _FakeSmithyOperation_0<_i6.PutLogEventsResponse>(
          this,
          Invocation.method(
            #putLogEvents,
            [input],
            {
              #client: client,
              #credentialsProvider: credentialsProvider,
            },
          ),
        ),
      ) as _i2.SmithyOperation<_i6.PutLogEventsResponse>);
}

/// A class which mocks [QueuedItemStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockQueuedItemStore extends _i1.Mock implements _i8.QueuedItemStore {
  MockQueuedItemStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.FutureOr<void> addItem(
    String? string,
    String? timestamp,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #addItem,
        [
          string,
          timestamp,
        ],
      )) as _i9.FutureOr<void>);
  @override
  _i9.FutureOr<Iterable<_i8.QueuedItem>> getCount(int? count) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCount,
          [count],
        ),
        returnValue:
            _i9.Future<Iterable<_i8.QueuedItem>>.value(<_i8.QueuedItem>[]),
      ) as _i9.FutureOr<Iterable<_i8.QueuedItem>>);
  @override
  _i9.FutureOr<void> deleteItems(Iterable<_i8.QueuedItem>? items) =>
      (super.noSuchMethod(Invocation.method(
        #deleteItems,
        [items],
      )) as _i9.FutureOr<void>);
  @override
  _i9.FutureOr<Iterable<_i8.QueuedItem>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i9.Future<Iterable<_i8.QueuedItem>>.value(<_i8.QueuedItem>[]),
      ) as _i9.FutureOr<Iterable<_i8.QueuedItem>>);
  @override
  _i9.FutureOr<bool> isFull(int? maxSizeInMB) => (super.noSuchMethod(
        Invocation.method(
          #isFull,
          [maxSizeInMB],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.FutureOr<bool>);
}

/// A class which mocks [CloudWatchLogStreamProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudWatchLogStreamProvider extends _i1.Mock
    implements _i10.CloudWatchLogStreamProvider {
  MockCloudWatchLogStreamProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<String> get logStream => (super.noSuchMethod(
        Invocation.getter(#logStream),
        returnValue: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
}

/// A class which mocks [RemoteLoggingConstraintProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteLoggingConstraintProvider extends _i1.Mock
    implements _i10.RemoteLoggingConstraintProvider {
  MockRemoteLoggingConstraintProvider() {
    _i1.throwOnMissingStub(this);
  }
}
