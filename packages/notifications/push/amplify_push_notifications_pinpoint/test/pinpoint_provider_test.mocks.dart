// Mocks generated by Mockito 5.3.2 from annotations
// in amplify_push_notifications_pinpoint/test/pinpoint_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:amplify_analytics_pinpoint/src/flutter_analytics_client.dart'
    as _i10;
import 'package:amplify_analytics_pinpoint/src/flutter_endpoint_info_store_manager.dart'
    as _i9;
import 'package:amplify_analytics_pinpoint_dart/amplify_analytics_pinpoint_dart.dart'
    as _i14;
import 'package:amplify_analytics_pinpoint_dart/src/impl/analytics_client/endpoint_client/endpoint_client.dart'
    as _i5;
import 'package:amplify_analytics_pinpoint_dart/src/impl/analytics_client/endpoint_client/endpoint_global_fields_manager.dart'
    as _i4;
import 'package:amplify_analytics_pinpoint_dart/src/impl/analytics_client/event_client/event_client.dart'
    as _i6;
import 'package:amplify_analytics_pinpoint_dart/src/impl/analytics_client/event_client/queued_item_store/dart_queued_item_store.dart'
    as _i13;
import 'package:amplify_analytics_pinpoint_dart/src/impl/analytics_client/event_client/queued_item_store/queued_item_store.dart'
    as _i12;
import 'package:amplify_analytics_pinpoint_dart/src/sdk/pinpoint.dart' as _i7;
import 'package:amplify_analytics_pinpoint_dart/src/sdk/src/pinpoint/pinpoint_client.dart'
    as _i11;
import 'package:amplify_core/amplify_core.dart' as _i3;
import 'package:aws_signature_v4/aws_signature_v4.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAWSSignedRequest_0 extends _i1.SmartFake
    implements _i2.AWSSignedRequest {
  _FakeAWSSignedRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAWSCredentials_1 extends _i1.SmartFake
    implements _i3.AWSCredentials {
  _FakeAWSCredentials_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndpointGlobalFieldsManager_2 extends _i1.SmartFake
    implements _i4.EndpointGlobalFieldsManager {
  _FakeEndpointGlobalFieldsManager_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEndpointClient_3 extends _i1.SmartFake
    implements _i5.EndpointClient {
  _FakeEndpointClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventClient_4 extends _i1.SmartFake implements _i6.EventClient {
  _FakeEventClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePublicEndpoint_5 extends _i1.SmartFake
    implements _i7.PublicEndpoint {
  _FakePublicEndpoint_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AmplifyAuthProviderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAmplifyAuthProviderRepository extends _i1.Mock
    implements _i3.AmplifyAuthProviderRepository {
  MockAmplifyAuthProviderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  T? getAuthProvider<T extends _i3.AmplifyAuthProvider>(
          _i3.AmplifyAuthProviderToken<T>? token) =>
      (super.noSuchMethod(Invocation.method(
        #getAuthProvider,
        [token],
      )) as T?);
  @override
  void registerAuthProvider<T extends _i3.AmplifyAuthProvider>(
    _i3.AmplifyAuthProviderToken<T>? token,
    _i3.AmplifyAuthProvider? authProvider,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAuthProvider,
          [
            token,
            authProvider,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AWSIamAmplifyAuthProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAWSIamAmplifyAuthProvider extends _i1.Mock
    implements _i3.AWSIamAmplifyAuthProvider {
  MockAWSIamAmplifyAuthProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.AWSSignedRequest> authorizeRequest(
    _i3.AWSBaseHttpRequest? request, {
    _i3.AuthProviderOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authorizeRequest,
          [request],
          {#options: options},
        ),
        returnValue:
            _i8.Future<_i2.AWSSignedRequest>.value(_FakeAWSSignedRequest_0(
          this,
          Invocation.method(
            #authorizeRequest,
            [request],
            {#options: options},
          ),
        )),
      ) as _i8.Future<_i2.AWSSignedRequest>);
  @override
  _i8.FutureOr<_i3.AWSCredentials> retrieve() => (super.noSuchMethod(
        Invocation.method(
          #retrieve,
          [],
        ),
        returnValue: _i8.Future<_i3.AWSCredentials>.value(_FakeAWSCredentials_1(
          this,
          Invocation.method(
            #retrieve,
            [],
          ),
        )),
      ) as _i8.FutureOr<_i3.AWSCredentials>);
}

/// A class which mocks [FlutterEndpointInfoStoreManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterEndpointInfoStoreManager extends _i1.Mock
    implements _i9.FlutterEndpointInfoStoreManager {
  MockFlutterEndpointInfoStoreManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.EndpointGlobalFieldsManager get endpointFields => (super.noSuchMethod(
        Invocation.getter(#endpointFields),
        returnValue: _FakeEndpointGlobalFieldsManager_2(
          this,
          Invocation.getter(#endpointFields),
        ),
      ) as _i4.EndpointGlobalFieldsManager);
  @override
  set endpointFields(_i4.EndpointGlobalFieldsManager? _endpointFields) =>
      super.noSuchMethod(
        Invocation.setter(
          #endpointFields,
          _endpointFields,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get endpointId => (super.noSuchMethod(
        Invocation.getter(#endpointId),
        returnValue: '',
      ) as String);
  @override
  set endpointId(String? _endpointId) => super.noSuchMethod(
        Invocation.setter(
          #endpointId,
          _endpointId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> init({required String? pinpointAppId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#pinpointAppId: pinpointAppId},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [AnalyticsUserProfile].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsUserProfile extends _i1.Mock
    implements _i3.AnalyticsUserProfile {
  MockAnalyticsUserProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set plan(String? _plan) => super.noSuchMethod(
        Invocation.setter(
          #plan,
          _plan,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set location(_i3.AnalyticsUserProfileLocation? _location) =>
      super.noSuchMethod(
        Invocation.setter(
          #location,
          _location,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set properties(_i3.AnalyticsProperties? _properties) => super.noSuchMethod(
        Invocation.setter(
          #properties,
          _properties,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterAnalyticsClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterAnalyticsClient extends _i1.Mock
    implements _i10.FlutterAnalyticsClient {
  MockFlutterAnalyticsClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.EndpointClient get endpointClient => (super.noSuchMethod(
        Invocation.getter(#endpointClient),
        returnValue: _FakeEndpointClient_3(
          this,
          Invocation.getter(#endpointClient),
        ),
      ) as _i5.EndpointClient);
  @override
  set endpointClient(_i5.EndpointClient? _endpointClient) => super.noSuchMethod(
        Invocation.setter(
          #endpointClient,
          _endpointClient,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.EventClient get eventClient => (super.noSuchMethod(
        Invocation.getter(#eventClient),
        returnValue: _FakeEventClient_4(
          this,
          Invocation.getter(#eventClient),
        ),
      ) as _i6.EventClient);
  @override
  set eventClient(_i6.EventClient? _eventClient) => super.noSuchMethod(
        Invocation.setter(
          #eventClient,
          _eventClient,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> initWithClient({
    required String? pinpointAppId,
    required _i11.PinpointClient? pinpointClient,
    _i12.QueuedItemStore? eventStore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initWithClient,
          [],
          {
            #pinpointAppId: pinpointAppId,
            #pinpointClient: pinpointClient,
            #eventStore: eventStore,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> init({
    required String? pinpointAppId,
    required String? region,
    required _i3.AWSCredentialsProvider? authProvider,
    _i13.DartQueuedItemStore? eventStore,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {
            #pinpointAppId: pinpointAppId,
            #region: region,
            #authProvider: authProvider,
            #eventStore: eventStore,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [EndpointClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockEndpointClient extends _i1.Mock implements _i5.EndpointClient {
  MockEndpointClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get fixedEndpointId => (super.noSuchMethod(
        Invocation.getter(#fixedEndpointId),
        returnValue: '',
      ) as String);
  @override
  set channelType(_i14.ChannelType? channelType) => super.noSuchMethod(
        Invocation.setter(
          #channelType,
          channelType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set address(String? address) => super.noSuchMethod(
        Invocation.setter(
          #address,
          address,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set optOut(String? optOut) => super.noSuchMethod(
        Invocation.setter(
          #optOut,
          optOut,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> addAttribute(
    String? name,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAttribute,
          [
            name,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> removeAttribute(String? name) => (super.noSuchMethod(
        Invocation.method(
          #removeAttribute,
          [name],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> addMetric(
    String? name,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMetric,
          [
            name,
            value,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> removeMetric(String? name) => (super.noSuchMethod(
        Invocation.method(
          #removeMetric,
          [name],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> setUser(
    String? userId,
    _i3.AnalyticsUserProfile? userProfile,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUser,
          [
            userId,
            userProfile,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i7.PublicEndpoint getPublicEndpoint() => (super.noSuchMethod(
        Invocation.method(
          #getPublicEndpoint,
          [],
        ),
        returnValue: _FakePublicEndpoint_5(
          this,
          Invocation.method(
            #getPublicEndpoint,
            [],
          ),
        ),
      ) as _i7.PublicEndpoint);
  @override
  _i8.Future<void> updateEndpoint() => (super.noSuchMethod(
        Invocation.method(
          #updateEndpoint,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [EventClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventClient extends _i1.Mock implements _i6.EventClient {
  MockEventClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> recordEvent({
    required String? eventType,
    _i7.Session? session,
    _i3.AnalyticsProperties? properties,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #recordEvent,
          [],
          {
            #eventType: eventType,
            #session: session,
            #properties: properties,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void registerGlobalProperties(_i3.AnalyticsProperties? globalProperties) =>
      super.noSuchMethod(
        Invocation.method(
          #registerGlobalProperties,
          [globalProperties],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void unregisterGlobalProperties(List<String>? propertyNames) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterGlobalProperties,
          [propertyNames],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> flushEvents() => (super.noSuchMethod(
        Invocation.method(
          #flushEvents,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
