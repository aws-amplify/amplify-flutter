// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

import 'package:amplify_api_dart/src/graphql/factories/model_subscriptions_factory.dart';
import 'package:amplify_core/amplify_core.dart';

/// Static helpers to generate subscription `GraphQLRequest` instances from models generated by Amplify codegen.
class ModelSubscriptions {
  ModelSubscriptions._(); // only static methods here, prevent calling constructor

  /// Generates a subscription request for the creation of any instance of the `modelType`.
  ///
  /// ```dart
  /// final request = ModelSubscriptions.onCreate(Todo.classType);
  /// ```
  static GraphQLRequest<T> onCreate<T extends Model>(
    ModelType<T> modelType, {
    String? apiName,
    APIAuthorizationType? authorizationMode,
    Map<String, String>? headers,
    QueryPredicate? where,
  }) {
    return ModelSubscriptionsFactory.instance.onCreate<T>(
      modelType,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
      where: where,
    );
  }

  /// Generates a subscription request for the update of any instance of the `modelType`.
  ///
  /// ```dart
  /// final request = ModelSubscriptions.onUpdate(Todo.classType);
  /// ```
  static GraphQLRequest<T> onUpdate<T extends Model>(
    ModelType<T> modelType, {
    String? apiName,
    APIAuthorizationType? authorizationMode,
    Map<String, String>? headers,
    QueryPredicate? where,
  }) {
    return ModelSubscriptionsFactory.instance.onUpdate<T>(
      modelType,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
      where: where,
    );
  }

  /// Generates a subscription request for the delete of any instance of the `modelType`.
  ///
  /// ```dart
  /// final request = ModelSubscriptions.onDelete(Todo.classType);
  /// ```
  static GraphQLRequest<T> onDelete<T extends Model>(
    ModelType<T> modelType, {
    String? apiName,
    APIAuthorizationType? authorizationMode,
    Map<String, String>? headers,
    QueryPredicate? where,
  }) {
    return ModelSubscriptionsFactory.instance.onDelete<T>(
      modelType,
      apiName: apiName,
      authorizationMode: authorizationMode,
      headers: headers,
      where: where,
    );
  }
}

// TODO(ragingsquirrel3): remove when https://github.com/dart-lang/sdk/issues/50748 addressed
// ignore_for_file: flutter_style_todos
